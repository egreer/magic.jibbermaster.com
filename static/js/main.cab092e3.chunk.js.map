{"version":3,"sources":["util/settings.js","pages/home/index.js","mtg/card.js","pages/planechase/Helmet.js","mtg/deck.js","util/api.js","components/Loading.js","components/magic/Counter.js","components/magic/Plane.js","pages/planechase/index.js","pages/archenemy/Helmet.js","mtg/prebuilt-decks.js","pages/archenemy/index.js","App.js","serviceWorker.js","index.js","images/planechase-back.jpg"],"names":["store","addPlugin","defaultPlugin","defaults","setting-disclaimerDismissed","setting-displayText","setting-displayImages","setting-devTools","setting-displayGatherer","getSetting","setting","get","concat","setSetting","value","set","toggleSetting","Home","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","componentDidMount","inherits","createClass","key","react_default","a","createElement","className","Helmet","title","rel","href","Button","tag","NavLink","exact","to","block","color","size","Component","getCurrentCard","prefix","setCurrentCard","card","getRevealedCards","setRevealedCards","cards","getAdditionalCards","setAdditionalCards","getScryCards","setScryCards","hasCustomProperty","property","customProperties","find","p","name","gathererImageURL","multiverse_ids","PlanechaseHelmet","_ref","planes","sizes","map","as","id","moveCard","from","deck","getCurrentDeck","splice","storeCurrentDeck","getOrCreateCurrentDeck","reset","undefined","console","log","shuffle","drawCard","shift","updateHistory","history","push","getHistory","undoDraw","pop","addCardsToTop","topCards","addCardsToBottom","bottomCards","findCardById","cardId","c","findAndPutOnTop","tmpCard","removeCards","findAndPutOnBottom","cardsToRemove","filteredDeck","filter","r","revealCards","numReveal","onlyPlanes","revealedCards","count","Math","min","tmpCount","i","type_line","search","array","temporaryValue","randomIndex","currentIndex","floor","random","internet","axios","create","getAllPlanechaseCards","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","cached","sent","cache","data","addAdditionalProperties","abrupt","t0","error","stop","properties","Aretopolis","type","Chaotic Aether","Interplanar Tunnel","Kilnspire District","Mount Keralia","Naar Isle","Spatial Merging","Stairs to Infinity","Pools of Becoming","Your Inescapable Doom","oracle_html","__html","oracle_text","replace","time","cacheDate","moment","diff","unix","Loading","props","state","dotsCount","start","_this2","_this$props$interval","interval","dotsInterval","setInterval","setState","clearInterval","max","char","numDots","dots","_this$props","_this$props$label","label","_this$props$numDots","getDotString","classes","Counter","counters","incrementCounter","counterCount","getCounterType","onClick","Plane","modalOpen","toggleModal","listDisplay","children","Fragment","ListGroupItem","Modal","isOpen","toggle","backdrop","contentClassName","ModalBody","centered","Card","inverse","renderImage","renderBody","renderActions","counter","renderCounter","renderChildren","text","renderText","CardBody","_this$props2","displayImages","hasCounters","CardImgOverlay","CardTitle","Counter_Counter","CardFooter","related_uris","target","CardSubtitle","CardText","dangerouslySetInnerHTML","CardImg","top","width","src","imageURI","back","Planechase","loading","currentCard","additionalCards","scryCards","tripleChaosModalOpen","scryModalOpen","planeswalkDisabled","showHistory","showDeck","showDeckImages","refreshDeck","planeswalk","revealedPlanes","revealedPhenomenon","forEach","_callee2","_context2","undo","_callee3","_context3","triggerChaos","newRevealedCards","shuffledCards","slice","newScryCards","renderDevTools","renderDeck","toggleDeck","toggleDeckImages","manipulateDeck","_this$state","Fade","in","ListGroup","Plane_Plane","ButtonToolbar","ButtonGroup","disabled","toggleHistory","renderHistory","reverse","selectPlane","restCards","_tripleChaosModalClose","_tripleChaosModalToggle","_scryModalClose","_scryTop","_scryBottom","renderScryModal","_this$state2","ModalHeader","_this$state3","Helmet_PlanechaseHelmet","Loading_Loading","renderChaos","renderTwoPlanes","renderFivePlanes","renderTripleChaosModal","_this3","_this$state4","Alert","_this4","_this$state5","_this5","_this$state6","onClosed","ModalFooter","aria-label","ArchenemyHelmet","archenemy","DECKS","Archenemy","Helmet_ArchenemyHelmet","renderPrebuilts","prebuiltItems","s","prebuilt","deckname","cardListIems","App","disclaimerDismissed","displayText","devTools","displayGatherer","dismissDisclaimer","_toggleSetting","tempState","_mtgToggler","DropdownItem","closeNavbar","react_router_dom","titleTemplate","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","RRNavLink","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","divider","clearAll","react_router","path","render","home_Home","archenemy_Archenemy","planechase_Planechase","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.cab092e3.chunk.js","sourcesContent":["import store from \"store\";\nimport defaultPlugin from \"store/plugins/defaults\";\n\nstore.addPlugin(defaultPlugin);\n\nconst SETTINGS = {\n  \"setting-disclaimerDismissed\": false,\n  \"setting-displayText\": false,\n  \"setting-displayImages\": true,\n  \"setting-devTools\": false,\n  \"setting-displayGatherer\": false\n};\nstore.defaults(SETTINGS);\n\nexport const getSetting = setting => {\n  return store.get(`setting-${setting}`);\n};\n\nexport const setSetting = (setting, value) => {\n  return store.set(`setting-${setting}`, value);\n};\n\nexport const toggleSetting = setting => {\n  const value = getSetting(setting);\n  return setSetting(setting, !value);\n};\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\n\nexport class Home extends Component {\n  componentDidMount = () => {};\n  render() {\n    return (\n      <div className=\"home\">\n        <Helmet title=\"Magic\">\n          <link\n            rel=\"manifest\"\n            href={process.env.PUBLIC_URL + \"/manifest.json\"}\n          />\n        </Helmet>\n        <div className=\"mt-4\">\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/planechase\"\n            block\n            color=\"info\"\n            size=\"lg\"\n          >\n            <i className=\"ms ms-planeswalker ms-4x mx-2 d-block\" />\n            <span className=\"d-block\">Planechase</span>\n          </Button>\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/archenemy\"\n            block\n            color=\"danger\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-arc ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">Archenemy</span>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import store from \"store\";\n\nexport const getCurrentCard = prefix => {\n  return store.get(`${prefix}-currentCard`);\n};\n\nexport const setCurrentCard = (prefix, card) => {\n  return store.set(`${prefix}-currentCard`, card);\n};\n\nexport const getRevealedCards = prefix => {\n  return store.get(`${prefix}-revealedCards`);\n};\n\nexport const setRevealedCards = (prefix, cards) => {\n  return store.set(`${prefix}-revealedCards`, cards);\n};\n\nexport const getAdditionalCards = prefix => {\n  return store.get(`${prefix}-additionalCards`);\n};\n\nexport const setAdditionalCards = (prefix, cards) => {\n  return store.set(`${prefix}-additionalCards`, cards);\n};\n\nexport const getScryCards = prefix => {\n  return store.get(`${prefix}-scryCards`);\n};\n\nexport const setScryCards = (prefix, cards) => {\n  return store.set(`${prefix}-scryCards`, cards);\n};\n\nexport const hasCustomProperty = (property, card) => {\n  return card && card.customProperties.find(p => p.name === property);\n};\n\nexport const getCounterType = card => {\n  const property = card.customProperties.find(p => p.name === \"counter\");\n  return property.type;\n};\n\nexport const gathererImageURL = card => {\n  return `http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=${\n    card.multiverse_ids[0]\n  }&type=card`;\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { gathererImageURL } from \"../../mtg/card.js\";\n\nexport const PlanechaseHelmet = ({ planes }) => {\n  return (\n    <Helmet title=\"Planechase\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/planechase-manifest.json\"}\n      />\n      {planes &&\n        planes.map(p => (\n          <link\n            rel=\"preload\"\n            href={gathererImageURL(p)}\n            as=\"image\"\n            key={p.id}\n          />\n        ))}\n    </Helmet>\n  );\n};\n","import store from \"store\";\n\nexport const moveCard = (prefix, from, to) => {\n  const deck = getCurrentDeck(prefix);\n  deck.splice(to, 0, deck.splice(from, 1)[0]);\n  storeCurrentDeck(prefix, deck);\n};\n\nexport const getOrCreateCurrentDeck = (prefix, cards, reset = false) => {\n  let deck = getCurrentDeck(prefix);\n  if (!deck || reset) {\n    console.log(`Creating New ${prefix} Deck`);\n    deck = shuffle(cards);\n    store.set(`${prefix}-history`, []);\n    storeCurrentDeck(prefix, deck);\n  }\n  return deck;\n};\n\nexport const getCurrentDeck = prefix => {\n  return store.get(`${prefix}-deck`);\n};\n\nexport const storeCurrentDeck = (prefix, deck) => {\n  return store.set(`${prefix}-deck`, deck);\n};\n\nexport const drawCard = prefix => {\n  const deck = getCurrentDeck(prefix);\n  const card = deck.shift();\n  updateHistory(prefix, card);\n  storeCurrentDeck(prefix, deck);\n  return card;\n};\n\nexport const updateHistory = (prefix, card) => {\n  const history = store.get(`${prefix}-history`);\n  history.push(card);\n  store.set(`${prefix}-history`, history);\n};\n\nexport const getHistory = (prefix, card) => {\n  return store.get(`${prefix}-history`);\n};\n\nexport const undoDraw = prefix => {\n  const history = store.get(`${prefix}-history`);\n  const card = history.pop();\n  if (card) {\n    addCardsToTop(prefix, [card]);\n  }\n  store.set(`${prefix}-history`, history);\n  return history[history.length - 1];\n};\n\nexport const addCardsToTop = (prefix, topCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, topCards.concat(deck));\n};\n\nexport const addCardsToBottom = (prefix, bottomCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, deck.concat(bottomCards));\n};\n\nexport const deckSize = prefix => {\n  return getCurrentDeck(prefix).length;\n};\n\nexport const findCard = (prefix, card) => {\n  return findCardById(prefix, card.id);\n};\n\nexport const findCardById = (prefix, cardId) => {\n  const deck = getCurrentDeck(prefix);\n  return deck.find(c => c.id === cardId);\n};\n\nexport const findAndPutOnTop = (prefix, cardId) => {\n  const tmpCard = findCardById(prefix, cardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToTop(prefix, [tmpCard]);\n  }\n};\n\nexport const findAndPutOnBottom = (prefix, cardId) => {\n  const tmpCard = findCardById(prefix, cardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToBottom(prefix, [tmpCard]);\n  }\n};\n\nexport const removeCards = (prefix, cardsToRemove) => {\n  const deck = getCurrentDeck(prefix);\n  const filteredDeck = deck.filter(\n    c => !cardsToRemove.find(r => r.id === c.id)\n  );\n  storeCurrentDeck(prefix, filteredDeck);\n};\n\nexport const revealCards = (prefix, numReveal, onlyPlanes = false) => {\n  const revealedCards = [];\n  const deck = getCurrentDeck(prefix);\n  const count = Math.min(deck.length, numReveal);\n\n  let planes = 0;\n  let tmpCount = count;\n  for (let i = 0; i < tmpCount; i++) {\n    revealedCards.push(deck[i]);\n\n    if (onlyPlanes) {\n      if (deck[i].type_line.search(\"Plane\") >= 0) {\n        planes++;\n      }\n\n      if (i === tmpCount - 1 && planes < count) {\n        tmpCount++;\n      }\n    }\n  }\n\n  return revealedCards;\n};\n\nexport const shuffle = array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\n// \tfunction showHistory(){\n// \t\tforeach( $_SESSION[ $this->prefix . 'history'] as $card){\n// \t\t\techo Card::displayHoverCardName($card, '', 'card');\n// \t\t}\n//\n// \t}\n//\n// \tfunction showRemainingCards(){\n// \t\tforeach(  $_SESSION[ $this->prefix . 'deck'] as $card){\n// \t\t echo Card::displayHoverCardName($card, $classes='');\n// \t\t}\n// \t}\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport store from \"store\";\n// TODO use expire store\nexport const internet = axios.create();\n\nconst PLANES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Aplane+or+t%3Aphenomenon&unique=cards\";\n\nconst SCHEMES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Ascheme&unique=cards\";\n\nexport const getAllPlanechaseCards = async () => {\n  try {\n    let planes = cached(\"planes\");\n    if (!planes) {\n      console.log(\"Loading from Axios\");\n      let response = await internet.get(PLANES_URL);\n      planes = response.data.data;\n      planes = planes.map(p => addAdditionalProperties(p));\n      cache(\"planes\", planes);\n      // TODO use the expire store parameter\n    } else {\n      console.log(\"Loaded from store\");\n    }\n    return planes;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nfunction addAdditionalProperties(card) {\n  const properties = {\n    Aretopolis: [{ name: \"counter\", type: \"Scroll\" }],\n    \"Chaotic Aether\": [{ name: \"all-chaos\" }],\n    \"Interplanar Tunnel\": [{ name: \"top-5\" }],\n    \"Kilnspire District\": [{ name: \"counter\", type: \"Charge\" }],\n    \"Mount Keralia\": [{ name: \"counter\", type: \"Pressure\" }],\n    \"Naar Isle\": [{ name: \"counter\", type: \"Flame\" }],\n    \"Spatial Merging\": [{ name: \"two-planes\" }],\n    \"Stairs to Infinity\": [{ name: \"chaos-trigger\" }, { name: \"scry-1\" }],\n    \"Pools of Becoming\": [{ name: \"chaos-trigger\" }, { name: \"triple-chaos\" }],\n    \"Your Inescapable Doom\": [\n      { name: \"unabandonable\" },\n      { name: \"counter\", type: \"Doom\" }\n    ]\n  };\n\n  if (properties[card.name]) {\n    card.customProperties = properties[card.name];\n  } else {\n    card.customProperties = [];\n  }\n\n  card.oracle_html = createMarkup(card.oracle_text);\n\n  return card;\n}\n\nfunction createMarkup(text) {\n  text = text.replace(/\\r\\n/g, \"<br />\").replace(/[\\r\\n]/g, \"<br />\");\n  text = text.replace(/{CHAOS}/g, '<i class=\"ms ms-chaos \"></i>');\n  text = text.replace(/CHAOS/g, '<i class=\"ms ms-chaos \"></i>');\n  text = text.replace(/{W}/g, '<i class=\"ms ms-w ms-cost\"></i>');\n  text = text.replace(/{U}/g, '<i class=\"ms ms-u ms-cost\"></i>');\n  text = text.replace(/{B}/g, '<i class=\"ms ms-b ms-cost\"></i>');\n  text = text.replace(/{R}/g, '<i class=\"ms ms-r ms-cost\"></i>');\n  text = text.replace(/{G}/g, '<i class=\"ms ms-g ms-cost\"></i>');\n  text = text.replace(/\\{1\\}/g, '<i class=\"ms ms-1 ms-cost\"></i>');\n  text = text.replace(/\\{2\\}/g, '<i class=\"ms ms-2 ms-cost\"></i>');\n  text = text.replace(/\\{3\\}/g, '<i class=\"ms ms-3 ms-cost\"></i>');\n  text = text.replace(/\\{T\\}/g, '<i class=\"ms ms-tap\"></i>');\n  text = text.replace(/{X}/g, '<i class=\"ms ms-x ms-cost\"></i>');\n  text = text.replace(/X/g, '<i class=\"ms ms-x\"></i>');\n  return { __html: text };\n}\n\nfunction cached(prefix) {\n  let data = store.get(prefix);\n  let cacheDate = store.get(`${prefix}-fetched`);\n  if (data && !old(cacheDate)) {\n    return data;\n  }\n  return null;\n}\n\nfunction cache(prefix, data) {\n  store.set(prefix, data);\n  store.set(`${prefix}-fetched`, moment().unix());\n}\n\nfunction old(time) {\n  return time && moment().diff(moment.unix(time), \"days\") > 5;\n}\n","import React, { Component } from \"react\";\n\nexport class Loading extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dotsCount: props.start || 0\n    };\n  }\n\n  componentDidMount() {\n    const { interval = 500 } = this.props;\n\n    this.dotsInterval = setInterval(() => {\n      this.setState({ dotsCount: this.state.dotsCount + 1 });\n    }, interval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.dotsInterval);\n  }\n\n  getDotString(count, max, char = \".\") {\n    let numDots = count % (max + 1);\n    let dots = \"\";\n\n    for (let i = 0; i < numDots; i++) {\n      dots += char;\n    }\n\n    return dots;\n  }\n\n  render() {\n    const { label = \"Loading\", className, numDots = 3 } = this.props;\n    const { dotsCount } = this.state;\n    let dots = this.getDotString(dotsCount, numDots, \".\");\n    let classes = `loading-dots ${className}`;\n\n    return (\n      <span className={classes}>\n        {label}\n        {dots}\n      </span>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { getCounterType } from \"../../mtg/card.js\";\nexport class Counter extends Component {\n  state = {\n    counters: {}\n  };\n\n  incrementCounter = () => {\n    const { card } = this.props;\n    const { counters } = this.state;\n    counters[card.id] = this.counterCount() + 1;\n    this.setState({ counters });\n  };\n\n  counterCount = () => {\n    const { card } = this.props;\n    const { counters } = this.state;\n    return counters[card.id] || 0;\n  };\n\n  componentWillUnmount() {\n    this.setState({ counters: {} });\n  }\n\n  render() {\n    const { card } = this.props;\n    const type = getCounterType(card);\n    return (\n      <div>\n        <h1 className=\"text-shadow noselect\">{this.counterCount()}</h1>\n        <Button\n          onClick={this.incrementCounter}\n          color=\"dark\"\n          className=\"btn-translucent\"\n        >\n          Add {type} Counter\n        </Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardImgOverlay,\n  CardTitle,\n  CardBody,\n  CardSubtitle,\n  CardText,\n  CardFooter,\n  ListGroupItem,\n  Modal,\n  ModalBody\n} from \"reactstrap\";\nimport { gathererImageURL } from \"../../mtg/card\";\nimport back from \"../../images/planechase-back.jpg\";\nimport { Counter } from \"./Counter\";\nimport \"./planes.scss\";\n\nimport { hasCustomProperty } from \"../../mtg/card.js\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Plane extends Component {\n  state = {\n    modalOpen: false\n  };\n\n  toggleModal = () => {\n    console.log(\"Toggle Modal\");\n    this.setState({ modalOpen: !this.state.modalOpen });\n  };\n\n  render() {\n    const { listDisplay, card, children } = this.props;\n    if (listDisplay) {\n      return (\n        <>\n          <ListGroupItem color=\"dark\" onClick={this.toggleModal}>\n            <div>{card.name}</div>\n          </ListGroupItem>\n          <Modal\n            isOpen={this.state.modalOpen}\n            toggle={this.toggleModal}\n            size=\"md\"\n            backdrop={true}\n            contentClassName=\"bg-secondary\"\n          >\n            <ModalBody className=\"p-0\" centered=\"true\">\n              <Plane card={card} />\n              {children}\n            </ModalBody>\n          </Modal>\n        </>\n      );\n    } else {\n      return (\n        <Card inverse className=\"mtg-plane-card\">\n          {this.renderImage()}\n          {this.renderBody()}\n          {this.renderActions()}\n        </Card>\n      );\n    }\n  }\n\n  renderBody() {\n    const counter = this.renderCounter();\n    const children = this.renderChildren();\n    const text = this.renderText();\n    const hasBody = counter || children || text;\n\n    return (\n      hasBody && (\n        <CardBody>\n          {counter}\n          {children}\n          {text}\n        </CardBody>\n      )\n    );\n  }\n\n  renderCounter() {\n    const { card, renderActions } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    const hasCounters = hasCustomProperty(\"counter\", card);\n    if (renderActions && hasCounters) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center\">\n            <CardTitle className=\"text-center pt-5 mt-sm-5\">\n              <Counter card={card} />\n            </CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return (\n          <div className=\"text-center\">\n            <Counter card={card} />\n          </div>\n        );\n      }\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    if (children) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center\">\n            <CardTitle className=\"text-center pt-5 mt-sm-5\">\n              {children}\n            </CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return <div className=\"text-center\">{children}</div>;\n      }\n    }\n  }\n\n  renderActions() {\n    const { card } = this.props;\n    const displayGatherer = getSetting(\"displayGatherer\");\n    if (displayGatherer && card) {\n      return (\n        <CardFooter>\n          <a\n            href={card.related_uris[\"gatherer\"]}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatherer\n          </a>\n        </CardFooter>\n      );\n    }\n  }\n\n  renderText() {\n    const { card } = this.props;\n    const displayText = getSetting(\"displayText\");\n    if (displayText) {\n      if (card) {\n        return (\n          <>\n            <CardTitle>{card.name}</CardTitle>\n            <CardSubtitle>{card.type_line}</CardSubtitle>\n            <CardText dangerouslySetInnerHTML={card.oracle_html} />\n          </>\n        );\n      } else {\n        return <CardTitle>None</CardTitle>;\n      }\n    }\n  }\n\n  renderImage() {\n    const displayImages = getSetting(\"displayImages\");\n    if (displayImages) {\n      return (\n        <CardImg\n          top\n          width=\"100%\"\n          src={this.imageURI()}\n          className=\"mtg-card mtg-card-plane\"\n        />\n      );\n    }\n  }\n\n  imageURI() {\n    const { card } = this.props;\n    if (card) {\n      // Use   Scryfall and rotate or use Gatherer\n      // scryfall (rotated) card.image_uris[\"border_crop\"]\n      return gathererImageURL(card);\n    } else {\n      return back;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { PlanechaseHelmet } from \"./Helmet\";\nimport {\n  getCurrentDeck,\n  getOrCreateCurrentDeck,\n  drawCard,\n  undoDraw,\n  revealCards,\n  addCardsToBottom,\n  removeCards,\n  shuffle,\n  addCardsToTop,\n  getHistory,\n  updateHistory,\n  findAndPutOnBottom,\n  findAndPutOnTop,\n  moveCard\n} from \"../../mtg/deck.js\";\nimport {\n  getCurrentCard,\n  setCurrentCard,\n  hasCustomProperty,\n  setRevealedCards,\n  getRevealedCards,\n  setAdditionalCards,\n  getAdditionalCards,\n  setScryCards,\n  getScryCards\n} from \"../../mtg/card.js\";\nimport { getAllPlanechaseCards } from \"../../util/api.js\";\nimport { Loading } from \"../../components/Loading\";\nimport { Plane } from \"../../components/magic/Plane\";\nimport {\n  Alert,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Fade,\n  ListGroup,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  ListGroupItem\n} from \"reactstrap\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Planechase extends Component {\n  state = {\n    loading: false,\n    planes: [],\n    deck: null,\n    currentCard: null,\n    counters: 0,\n    revealedCards: [],\n    additionalCards: [],\n    scryCards: [],\n    tripleChaosModalOpen: false,\n    scryModalOpen: false,\n    planeswalkDisabled: false,\n    showHistory: false,\n    showDeck: false,\n    showDeckImages: false\n  };\n\n  componentDidMount = async () => {\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes);\n    const currentCard = getCurrentCard(\"planechase\");\n    const revealedCards = getRevealedCards(\"planechase\") || [];\n    const scryCards = getScryCards(\"planechase\") || [];\n    const additionalCards = getAdditionalCards(\"planechase\");\n    const planeswalkDisabled = !!hasCustomProperty(\"top-5\", currentCard);\n    const scryModalOpen =\n      scryCards.length > 0 && !!hasCustomProperty(\"scry-1\", currentCard);\n    this.setState({\n      planes,\n      loading: false,\n      deck,\n      currentCard,\n      revealedCards,\n      additionalCards,\n      scryCards,\n      planeswalkDisabled,\n      scryModalOpen\n    });\n  };\n\n  refreshDeck = () => {\n    const deck = getCurrentDeck(\"planechase\");\n    this.setState({ deck });\n  };\n\n  planeswalk = () => {\n    const currentCard = drawCard(\"planechase\");\n    setCurrentCard(\"planechase\", currentCard);\n    let revealedCards = [];\n    let additionalCards = [];\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      revealedCards = revealCards(\"planechase\", 2, true);\n      removeCards(\"planechase\", revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      const revealedPhenomenon = revealedCards.filter(\n        c => c.type_line.search(\"Phenomenon\") >= 0\n      );\n      revealedPlanes.forEach(c => updateHistory(\"planechase\", c));\n      addCardsToBottom(\"planechase\", revealedPhenomenon);\n      revealedCards = [];\n      additionalCards = revealedPlanes;\n    }\n\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      revealedCards = revealCards(\"planechase\", 5, true);\n      removeCards(\"planechase\", revealedCards);\n      this.setState({ planeswalkDisabled: true });\n    }\n\n    setRevealedCards(\"planechase\", revealedCards);\n    setAdditionalCards(\"planechase\", additionalCards);\n    this.refreshDeck();\n    this.setState({ currentCard, counters: 0, revealedCards, additionalCards });\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes, true);\n    const currentCard = setCurrentCard(\"planechase\", null);\n    const revealedCards = setRevealedCards(\"planechase\", []);\n    const scryCards = setScryCards(\"planechase\", []);\n    const additionalCards = setAdditionalCards(\"planechase\", []);\n    this.setState({\n      planes,\n      loading: false,\n      deck,\n      currentCard,\n      revealedCards,\n      scryCards,\n      additionalCards,\n      planeswalkDisabled: false,\n      scryModalOpen: false\n    });\n  };\n\n  undo = async () => {\n    const currentCard = undoDraw(\"planechase\");\n    this.refreshDeck();\n    this.setState({ currentCard });\n  };\n\n  triggerChaos = card => {\n    const { scryCards } = this.state;\n    console.log(\"Chaos Triggered\");\n    if (hasCustomProperty(\"triple-chaos\", card)) {\n      const newRevealedCards = revealCards(\"planechase\", 3, true);\n      removeCards(\"planechase\", newRevealedCards);\n      const shuffledCards = shuffle(newRevealedCards.slice());\n      addCardsToBottom(\"planechase\", shuffledCards);\n      this.refreshDeck();\n      setRevealedCards(\"planechase\", newRevealedCards);\n      this.setState({\n        revealedCards: newRevealedCards,\n        tripleChaosModalOpen: true\n      });\n    }\n\n    if (hasCustomProperty(\"scry-1\", card)) {\n      if (!scryCards || scryCards.length === 0) {\n        const newScryCards = revealCards(\"planechase\", 1, false);\n        removeCards(\"planechase\", newScryCards);\n        setScryCards(\"planechase\", newScryCards);\n        this.setState({ scryCards: newScryCards });\n      }\n      this.setState({ scryModalOpen: true });\n    }\n  };\n\n  render() {\n    const {\n      loading,\n      planes,\n      deck,\n      currentCard,\n      planeswalkDisabled\n    } = this.state;\n\n    return (\n      <div className=\"planechase\">\n        <PlanechaseHelmet planes={planes} />\n        <div className=\"fixed-top mt-1 ml-1 w-25 text-left\">\n          <Button\n            onClick={this.planeswalk}\n            className=\"mb-2\"\n            color=\"success\"\n            disabled={planeswalkDisabled || loading}\n            block\n          >\n            <i className=\"ms ms-planeswalker ms-2x mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Planeswalk</span>\n          </Button>\n        </div>\n\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : (\n          <div className=\"mb-2\">\n            {currentCard ? (\n              <Plane card={currentCard} renderActions=\"true\">\n                {this.renderChaos(currentCard)}\n              </Plane>\n            ) : (\n              <Plane />\n            )}\n          </div>\n        )}\n        {this.renderTwoPlanes()}\n        {this.renderFivePlanes()}\n        {this.renderTripleChaosModal()}\n        {this.renderScryModal()}\n        <Button onClick={this.reset} color=\"danger\" block>\n          Reset\n        </Button>\n        <p className=\"text-center my-3 noselect\">\n          There are {deck ? deck.length : 0} cards remaining.\n        </p>\n        {this.renderHistory()}\n        {this.renderDevTools()}\n      </div>\n    );\n  }\n\n  renderDevTools = () => {\n    const devTools = getSetting(\"devTools\");\n    if (devTools) {\n      return (\n        <div className=\"my-4\">\n          <h5 className=\"text-center noselect\">Dev Tools</h5>\n          <Button onClick={this.undo} color=\"warning\" block>\n            Undo\n          </Button>\n          {this.renderDeck()}\n        </div>\n      );\n    }\n  };\n\n  toggleDeck = () => {\n    this.setState({ showDeck: !this.state.showDeck });\n  };\n\n  toggleDeckImages = () => {\n    this.setState({ showDeckImages: !this.state.showDeckImages });\n  };\n\n  manipulateDeck = () => {\n    this.refreshDeck();\n  };\n\n  renderDeck = () => {\n    const { showDeck, showDeckImages } = this.state;\n    const deck = getCurrentDeck(\"planechase\");\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleDeck} block>\n          {showDeck ? \"Hide\" : \"Show\"} Deck\n        </Button>\n        <Fade in={showDeck}>\n          {showDeck && (\n            <>\n              <Button onClick={this.toggleDeckImages} block>\n                {showDeckImages ? \"Hide\" : \"Show\"} Full Card\n              </Button>\n              <ListGroup>\n                {deck.map((p, i) => (\n                  <React.Fragment key={p.id}>\n                    <Plane card={p} listDisplay={!showDeckImages} />\n                    <ListGroupItem className=\"text-center justify-content-center d-flex\">\n                      <ButtonToolbar>\n                        <ButtonGroup>\n                          <Button\n                            disabled={i === 0}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                moveCard(\"planechase\", i, i - 1)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n                          </Button>\n                          <Button\n                            disabled={i === deck.length - 1}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                moveCard(\"planechase\", i, i + 1)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"ml-2\">\n                          <Button\n                            disabled={i === 0}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                findAndPutOnTop(\"planechase\", p.id)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-untap ms-2x ss-mythic ss-grad\" />\n                          </Button>\n                          <Button\n                            disabled={i === deck.length - 1}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                findAndPutOnBottom(\"planechase\", p.id)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-tap ms-2x ss-mythic ss-grad\" />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"ml-2\">\n                          <Button\n                            color=\"danger\"\n                            onClick={() =>\n                              this.manipulateDeck(\n                                removeCards(\"planechase\", [p])\n                              )\n                            }\n                          >\n                            <i className=\"ss ss-x ss-10e ss-rare ss-grad ss-2x\" />\n                          </Button>\n                        </ButtonGroup>\n                      </ButtonToolbar>\n                    </ListGroupItem>\n                  </React.Fragment>\n                ))}\n              </ListGroup>\n            </>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  };\n\n  renderHistory = () => {\n    const { showHistory } = this.state;\n    const history = getHistory(\"planechase\");\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleHistory} block>\n          {showHistory ? \"Hide\" : \"Show\"} History\n        </Button>\n        <Fade in={showHistory}>\n          {showHistory && history && (\n            <ListGroup>\n              {history.reverse().map(p => (\n                <Plane card={p} key={p.id} listDisplay={true} />\n              ))}\n            </ListGroup>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n\n  renderChaos(card) {\n    const hasChaos = hasCustomProperty(\"chaos-trigger\", card);\n    if (hasChaos) {\n      return (\n        <Button\n          onClick={() => this.triggerChaos(card)}\n          color=\"info\"\n          size=\"lg\"\n          className=\"btn-translucent\"\n        >\n          <i className=\"ms ms-chaos ms-2x mx-2\" />\n          <span className=\"mx-2 d-none d-md-inline\">Trigger Chaos</span>\n        </Button>\n      );\n    }\n  }\n\n  renderTwoPlanes() {\n    const { currentCard, additionalCards } = this.state;\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      const revealedPlanes = additionalCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      // TODO chaos etc\n      return (\n        <div>\n          <Alert color=\"info\" className=\"text-center mb-0\">\n            <i className=\"ms ms-planeswalker mx-2\" />\n            You Are On Both Planes\n            <i className=\"ms ms-planeswalker mx-2\" />\n          </Alert>\n          {revealedPlanes.map(c => (\n            <React.Fragment key={c.id}>\n              <Plane card={c} renderActions=\"true\">\n                {this.renderChaos(c)}\n              </Plane>\n            </React.Fragment>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  selectPlane = card => {\n    const { revealedCards } = this.state;\n    removeCards(\"planechase\", revealedCards);\n    addCardsToTop(\"planechase\", [card]);\n    const restCards = revealedCards.filter(c => c.id !== card.id);\n    const shuffledCards = shuffle(restCards.slice());\n    addCardsToBottom(\"planechase\", shuffledCards);\n    setRevealedCards(\"planechase\", []);\n    this.setState({ planeswalkDisabled: false, revealedCards: [] });\n    this.planeswalk();\n  };\n\n  renderFivePlanes() {\n    const { currentCard, revealedCards } = this.state;\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      console.log(revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      console.log(revealedPlanes);\n      // TODO Countes, chaos etc\n      return (\n        <div>\n          <Alert color=\"info\" className=\"text-center mb-0\">\n            <i className=\"ms ms-planeswalker mx-2\" />\n            Pick a Plane to Planeswalk To\n            <i className=\"ms ms-planeswalker mx-2\" />\n          </Alert>\n          {revealedPlanes.map(c => (\n            <div key={c.id}>\n              <Plane card={c}>\n                <Button\n                  onClick={() => this.selectPlane(c)}\n                  color=\"primary\"\n                  className=\"btn-translucent\"\n                >\n                  <i className=\"ms ms-planeswalker mx-2\" />\n                  <span className=\"mx-2\">Planeswalk</span>\n                </Button>\n              </Plane>\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  _tripleChaosModalClose = () => {\n    setRevealedCards(\"planechase\", []);\n    this.setState({\n      tripleChaosModalOpen: false,\n      revealedCards: []\n    });\n  };\n\n  _tripleChaosModalToggle = () => {\n    if (this.state.tripleChaosModalOpen) {\n      this._tripleChaosModalClose();\n    }\n  };\n\n  renderTripleChaosModal() {\n    const { revealedCards, tripleChaosModalOpen } = this.state;\n    if (revealedCards && tripleChaosModalOpen) {\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      return (\n        <Modal\n          isOpen={!!tripleChaosModalOpen}\n          toggle={this._tripleChaosModalToggle}\n          onClosed={this._tripleChaosModalClose}\n          size=\"md\"\n          backdrop={true}\n          contentClassName=\"bg-secondary\"\n        >\n          <ModalHeader className=\"justify-content-center text-center text-white\">\n            <div>\n              <i className=\"ms ms-chaos mr-1\" />\n              <i className=\"ms ms-chaos mr-1\" />\n              <i className=\"ms ms-chaos mr-1\" />\n              <span className=\"mx-1\">Triple Chaos</span>\n              <i className=\"ms ms-chaos ml-1\" />\n              <i className=\"ms ms-chaos ml-1\" />\n              <i className=\"ms ms-chaos ml-1\" />\n            </div>\n            <div>\n              <small className=\"text-center\">You Pick Order</small>\n            </div>\n          </ModalHeader>\n          <ModalBody className=\"text-center\">\n            {revealedPlanes.map(c => (\n              <React.Fragment key={c.id}>\n                <Plane card={c}>{this.renderChaos(c)}</Plane>\n              </React.Fragment>\n            ))}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"info\"\n              block\n              aria-label=\"Close\"\n              onClick={this._tripleChaosModalClose}\n            >\n              Done\n            </Button>\n          </ModalFooter>\n        </Modal>\n      );\n    }\n  }\n\n  _scryModalClose = () => {\n    setScryCards(\"planechase\", []);\n    this.setState({\n      scryModalOpen: false,\n      scryCards: []\n    });\n  };\n\n  _scryTop = () => {\n    const { scryCards } = this.state;\n    addCardsToTop(\"planechase\", scryCards);\n    console.log(\"Scry Top\", scryCards);\n    this.refreshDeck();\n    setScryCards(\"planechase\", []);\n    this.setState({ scryCards: [], scryModalOpen: false });\n  };\n\n  _scryBottom = () => {\n    const { scryCards } = this.state;\n    addCardsToBottom(\"planechase\", scryCards);\n    console.log(\"Scry Bottom\", scryCards);\n    this.refreshDeck();\n    setScryCards(\"planechase\", []);\n    this.setState({ scryCards: [], scryModalOpen: false });\n  };\n\n  renderScryModal = () => {\n    const { scryCards, scryModalOpen } = this.state;\n    if (scryCards && scryModalOpen) {\n      return (\n        <Modal\n          isOpen={!!scryModalOpen}\n          size=\"md\"\n          contentClassName=\"bg-secondary\"\n        >\n          <ModalHeader className=\"justify-content-center text-white\">\n            <i className=\"ms ms-chaos mx-4\" />\n            Scry Card\n            <i className=\"ms ms-chaos mx-4\" />\n          </ModalHeader>\n          <ModalBody>\n            <Button color=\"info\" block onClick={this._scryTop}>\n              Top\n            </Button>\n            {scryCards.map(c => (\n              <Plane card={c} key={c.id} />\n            ))}\n            <Button color=\"info\" block onClick={this._scryBottom}>\n              Bottom\n            </Button>\n          </ModalBody>\n        </Modal>\n      );\n    }\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport const ArchenemyHelmet = ({ archenemy }) => {\n  return (\n    <Helmet name=\"Archenemy\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/archenemy-manifest.json\"}\n      />\n    </Helmet>\n  );\n};\n","export const getDeckList = () => {\n  return DECKS.map(s => s.name);\n};\n\nexport const getCardList = deckname => {\n  const deck = DECKS.find(s => s.name === deckname);\n  return deck.cards;\n};\nconst DECKS = [\n  {\n    name: \"Assemble the Doomsday Machine\",\n    cards: [\n      [\"All in Good Time\", 1],\n      [\"Behold the Power of Destruction\", 1],\n      [\"Embrace My Diabolical Vision\", 1],\n      [\"Feed the Machine\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"I Know All, I See All\", 2],\n      [\"Ignite the Cloneforge!\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"The Iron Guardian Stirs\", 2],\n      [\"My Genius Knows No Bounds\", 1],\n      [\"Nothing Can Stop Me Now\", 1],\n      [\"The Pieces Are Coming Together\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Scorch the World with Dragonfire\",\n    cards: [\n      [\"All Shall Smolder in My Wake\", 2],\n      [\"Approach My Molten Realm\", 1],\n      [\"The Fate of the Flammable\", 1],\n      [\"I Bask in Your Silent Awe\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"Know Naught but Fire\", 1],\n      [\"Look Skyward and Despair\", 2],\n      [\"My Crushing Masterstroke\", 1],\n      [\"My Wish Is Your Command\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Tooth, Claw, and Tail\", 1],\n      [\"Which of You Burns Brightest?\", 2],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Trample Civilization Underfoot\",\n    cards: [\n      [\"Every Last Vestige Shall Rot\", 2],\n      [\"Evil Comes to Fruition\", 1],\n      [\"I Call on the Ancient Magics\", 1],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Into the Earthen Maw\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"May Civilization Collapse\", 1],\n      [\"Nature Demands an Offering\", 2],\n      [\"Nature Shields Its Own\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Roots of All Evil\", 2],\n      [\"The Very Soil Shall Shake\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1],\n      [\"Your Will Is Not Your Own\", 2]\n    ]\n  },\n  {\n    name: \"Bring About the Undead Apocalypse\",\n    cards: [\n      [\"Choose Your Champion\", 2],\n      [\"Dance, Pathetic Marionette\", 1],\n      [\"The Dead Shall Serve\", 2],\n      [\"Every Hope Shall Vanish\", 2],\n      [\"I Delight in Your Convulsions\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"Mortal Flesh Is Weak\", 1],\n      [\"My Undead Horde Awakens\", 1],\n      [\"Only Blood Ends Your Nightmares\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Rotted Ones, Lay Siege\", 2],\n      [\"Surrender Your Thoughts\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Archenemy Nicol Bolas\",\n    cards: [\n      [\"Because I Have Willed It\", 1],\n      [\"Behold My Grandeur\", 1],\n      [\"Bow to My Command\", 1],\n      [\"Choose Your Demise\", 1],\n      [\"Delight in the Hunt\", 1],\n      [\"Every Dream a Nightmare\", 1],\n      [\"For Each of You, a Gift\", 1],\n      [\"Know Evil\", 1],\n      [\"Make Yourself Useful\", 1],\n      [\"The Mighty Will Fall\", 1],\n      [\"My Forces Are Innumerable\", 1],\n      [\"My Laughter Echoes\", 1],\n      [\"No One Will Hear Your Cries\", 1],\n      [\"Pay Tribute to Me\", 1],\n      [\"Power Without Equal\", 1],\n      [\"A Reckoning Approaches\", 1],\n      [\"There Is No Refuge\", 1],\n      [\"This World Belongs to Me\", 1],\n      [\"What's Yours Is Now Mine\", 1],\n      [\"When Will You Learn?\", 1]\n    ]\n  }\n];\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  ListGroupItem,\n  ListGroup\n} from \"reactstrap\";\nimport { ArchenemyHelmet } from \"./Helmet\";\nimport { getDeckList, getCardList } from \"../../mtg/prebuilt-decks\";\n\nexport class Archenemy extends Component {\n  state = {};\n\n  componentDidMount = () => {};\n\n  render() {\n    return (\n      <div className=\"archenemy\">\n        <ArchenemyHelmet />\n        {this.renderPrebuilts()}\n      </div>\n    );\n  }\n\n  renderPrebuilts() {\n    const prebuilts = getDeckList();\n    const prebuiltItems = prebuilts.map((prebuilt, i) => {\n      const cardList = getCardList(prebuilt);\n      const cardListIems = cardList.map((card, i) => (\n        <ListGroupItem key={i}>{card}</ListGroupItem>\n      ));\n      return (\n        <Card key={i}>\n          <CardBody>\n            <CardTitle>{prebuilt}</CardTitle>\n            <ListGroup className=\"text-dark\">{cardListIems}</ListGroup>\n          </CardBody>\n        </Card>\n      );\n    });\n    return <div>{prebuiltItems}</div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  NavLink as RRNavLink\n} from \"react-router-dom\";\nimport {\n  Alert,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport store from \"store\";\n\nimport \"./App.scss\";\n\nimport { setSetting, getSetting, toggleSetting } from \"./util/settings\";\n\nimport { Home } from \"./pages/home\";\nimport { Planechase } from \"./pages/planechase\";\nimport { Archenemy } from \"./pages/archenemy\";\n\nclass App extends Component {\n  state = {\n    isOpen: false,\n    disclaimerDismissed: false,\n    displayText: false,\n    displayImages: false,\n    devTools: false,\n    displayGatherer: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  componentDidMount = () => {\n    this.setState({\n      disclaimerDismissed: getSetting(\"disclaimerDismissed\"),\n      displayText: getSetting(\"displayText\"),\n      displayImages: getSetting(\"displayImages\"),\n      devTools: getSetting(\"devTools\")\n    });\n  };\n\n  dismissDisclaimer = () => {\n    this.setState({\n      disclaimerDismissed: setSetting(\"disclaimerDismissed\", true)\n    });\n  };\n\n  _toggleSetting = setting => {\n    const tempState = {};\n    tempState[setting] = toggleSetting(setting);\n    this.setState(tempState);\n  };\n\n  _mtgToggler = (value, displayText, onClick) => {\n    return (\n      <DropdownItem toggle={false} onClick={onClick}>\n        <span>\n          {value ? (\n            <i className=\"ms ms-dfc ms-dfc-day\" />\n          ) : (\n            <i className=\"ms ms-dfc ms-dfc-night\" />\n          )}\n        </span>\n        <span className=\"ml-3\">{displayText}</span>\n      </DropdownItem>\n    );\n  };\n\n  closeNavbar = () => {\n    if (this.state.isOpen) {\n      this.setState({ isOpen: false });\n    }\n  };\n\n  render() {\n    const {\n      disclaimerDismissed,\n      displayText,\n      displayImages,\n      displayGatherer,\n      devTools\n    } = this.state;\n    return (\n      <BrowserRouter>\n        <Helmet titleTemplate=\"%s - Jibbermaster\" />\n        <Navbar\n          color=\"dark\"\n          dark\n          expand=\"md\"\n          className=\"text-right p-1 noselect\"\n        >\n          <NavbarBrand />\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink\n                  tag={RRNavLink}\n                  exact\n                  to=\"/\"\n                  activeClassName=\"active\"\n                  onClick={this.closeNavbar}\n                >\n                  Home\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  tag={RRNavLink}\n                  exact\n                  to=\"/planechase\"\n                  activeClassName=\"active\"\n                  onClick={this.closeNavbar}\n                >\n                  Planechase\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  tag={RRNavLink}\n                  exact\n                  to=\"/archenemy\"\n                  activeClassName=\"active\"\n                  onClick={this.closeNavbar}\n                >\n                  Archenemy\n                </NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Settings\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {this._mtgToggler(\n                    disclaimerDismissed,\n                    \"Disclaimer Dismissed\",\n                    () => this._toggleSetting(\"disclaimerDismissed\")\n                  )}\n                  {this._mtgToggler(displayText, \"Display Text\", () =>\n                    this._toggleSetting(\"displayText\")\n                  )}\n                  {this._mtgToggler(displayImages, \"Display Images\", () =>\n                    this._toggleSetting(\"displayImages\")\n                  )}\n                  {this._mtgToggler(displayGatherer, \"Display Gatherer\", () =>\n                    this._toggleSetting(\"displayGatherer\")\n                  )}\n                  {this._mtgToggler(devTools, \"Dev Tools\", () =>\n                    this._toggleSetting(\"devTools\")\n                  )}\n                  <DropdownItem divider />\n                  <DropdownItem toggle={false} onClick={() => store.clearAll()}>\n                    Clear Everything\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n        <div className=\"app text-light bg-dark col-md-8 offset-md-2 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3\">\n          <Switch>\n            <Route path=\"/\" exact render={props => <Home {...props} />} />\n            <Route\n              path=\"/archenemy\"\n              exact\n              render={props => <Archenemy {...props} />}\n            />\n            <Route\n              path=\"/planechase\"\n              exact\n              render={props => <Planechase {...props} />}\n            />\n          </Switch>\n          <Alert\n            color=\"warning\"\n            className=\"fixed-bottom mb-0 py-1\"\n            isOpen={!this.state.disclaimerDismissed}\n            toggle={this.dismissDisclaimer}\n          >\n            <h6>Disclaimer</h6>\n            <small className=\"text-muted m-0\">\n              This site is created for personal use. Magic: The Gathering, the\n              mana symbols, the tap symbol and all other related images are\n              owned by Wizards of the Coast. jibbermaster.com is unaffiliated\n              with Wizards of the Coast.\n            </small>\n          </Alert>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/planechase-back.c7f50007.jpg\";"],"sourceRoot":""}