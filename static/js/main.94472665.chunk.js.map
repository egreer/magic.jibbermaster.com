{"version":3,"sources":["util/settings.js","pages/home/index.js","mtg/card.js","pages/planechase/Helmet.js","mtg/deck.js","util/api.js","components/Loading.js","components/magic/Counter.js","components/magic/Plane.js","pages/planechase/index.js","pages/archenemy/Helmet.js","mtg/prebuilt-decks.js","pages/archenemy/index.js","App.js","serviceWorker.js","index.js","images/planechase-back.jpg"],"names":["store","addPlugin","defaultPlugin","defaults","setting-disclaimerDismissed","setting-displayText","setting-displayImages","setting-devTools","getSetting","setting","get","concat","setSetting","value","set","toggleSetting","Home","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","componentDidMount","inherits","createClass","key","react_default","a","createElement","className","Helmet","title","rel","href","Button","tag","NavLink","exact","to","block","color","size","Component","getCurrentCard","prefix","setCurrentCard","card","getRevealedCards","setRevealedCards","cards","hasCustomProperty","property","customProperties","find","p","name","gathererImageURL","multiverse_ids","PlanechaseHelmet","_ref","planes","sizes","map","as","id","moveCard","from","deck","getCurrentDeck","splice","storeCurrentDeck","getOrCreateCurrentDeck","reset","undefined","console","log","shuffle","drawCard","shift","updateHistory","history","push","getHistory","undoDraw","pop","addCardsToTop","topCards","addCardsToBottom","bottomCards","findCardById","cardId","c","findAndPutOnTop","tmpCard","removeCards","findAndPutOnBottom","cardsToRemove","filteredDeck","filter","r","revealCards","numReveal","onlyPlanes","revealedCards","count","Math","min","tmpCount","i","type_line","search","array","temporaryValue","randomIndex","currentIndex","floor","random","internet","axios","create","getAllPlanechaseCards","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","cached","sent","cache","data","addAdditionalProperties","abrupt","t0","error","stop","properties","Aretopolis","type","Chaotic Aether","Interplanar Tunnel","Kilnspire District","Mount Keralia","Naar Isle","Spatial Merging","Stairs to Infinity","Pools of Becoming","Your Inescapable Doom","time","cacheDate","moment","diff","unix","Loading","props","state","dotsCount","start","_this2","_this$props$interval","interval","dotsInterval","setInterval","setState","clearInterval","max","char","numDots","dots","_this$props","_this$props$label","label","_this$props$numDots","getDotString","classes","Counter","counters","incrementCounter","counterCount","getCounterType","onClick","Plane","modalOpen","toggleModal","listDisplay","children","Fragment","ListGroupItem","Modal","isOpen","toggle","backdrop","contentClassName","ModalBody","centered","Card","inverse","renderImage","renderBody","renderActions","counter","renderCounter","renderChildren","text","renderText","CardBody","_this$props2","displayImages","hasCounters","CardImgOverlay","CardTitle","Counter_Counter","CardSubtitle","CardText","oracle_text","CardImg","top","width","src","imageURI","back","Planechase","loading","currentCard","tripleChaosModalOpen","scryModalOpen","planeswalkDisabled","showHistory","showDeck","refreshDeck","planeswalk","_callee2","_context2","undo","_callee3","_context3","triggerChaos","_this$state","newRevealedCards","shuffledCards","slice","renderDevTools","renderDeck","toggleDeck","manipulateDeck","Fade","in","ListGroup","Plane_Plane","disabled","toggleHistory","renderHistory","reverse","selectPlane","restCards","_tripleChaosModalClose","_tripleChaosModalToggle","_scryModalClose","_scryTop","_scryBottom","renderScryModal","_this$state2","ModalHeader","_this$state3","Helmet_PlanechaseHelmet","renderChaos","Loading_Loading","renderTwoPlanes","renderFivePlanes","renderTripleChaosModal","_this$state4","revealedPlanes","Alert","_this$state5","_this$state6","onClosed","ModalFooter","aria-label","ArchenemyHelmet","archenemy","DECKS","Archenemy","Helmet_ArchenemyHelmet","renderPrebuilts","prebuiltItems","s","prebuilt","deckname","cardListIems","App","disclaimerDismissed","displayText","devTools","dismissDisclaimer","_toggleSetting","tempState","_mtgToggler","DropdownItem","closeNavbar","react_router_dom","titleTemplate","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","RRNavLink","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","divider","clearAll","react_router","path","render","home_Home","archenemy_Archenemy","planechase_Planechase","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.94472665.chunk.js","sourcesContent":["import store from \"store\";\r\nimport defaultPlugin from \"store/plugins/defaults\";\r\n\r\nstore.addPlugin(defaultPlugin);\r\n\r\nconst SETTINGS = {\r\n  \"setting-disclaimerDismissed\": false,\r\n  \"setting-displayText\": false,\r\n  \"setting-displayImages\": true,\r\n  \"setting-devTools\": false\r\n};\r\nstore.defaults(SETTINGS);\r\n\r\nexport const getSetting = setting => {\r\n  return store.get(`setting-${setting}`);\r\n};\r\n\r\nexport const setSetting = (setting, value) => {\r\n  return store.set(`setting-${setting}`, value);\r\n};\r\n\r\nexport const toggleSetting = setting => {\r\n  const value = getSetting(setting);\r\n  return setSetting(setting, !value);\r\n};\r\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\n\nexport class Home extends Component {\n  componentDidMount = () => {};\n  render() {\n    return (\n      <div className=\"home\">\n        <Helmet title=\"Magic\">\n          <link\n            rel=\"manifest\"\n            href={process.env.PUBLIC_URL + \"/manifest.json\"}\n          />\n        </Helmet>\n        <div className=\"mt-4\">\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/planechase\"\n            block\n            color=\"info\"\n            size=\"lg\"\n          >\n            <i className=\"ms ms-planeswalker ms-4x mx-2 d-block\" />\n            <span className=\"d-block\">Planechase</span>\n          </Button>\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/archenemy\"\n            block\n            color=\"danger\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-arc ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">Archenemy</span>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import store from \"store\";\n\nexport const getCurrentCard = prefix => {\n  return store.get(`${prefix}-currentCard`);\n};\n\nexport const setCurrentCard = (prefix, card) => {\n  return store.set(`${prefix}-currentCard`, card);\n};\n\nexport const getRevealedCards = prefix => {\n  return store.get(`${prefix}-revealedCards`);\n};\n\nexport const setRevealedCards = (prefix, cards) => {\n  return store.set(`${prefix}-revealedCards`, cards);\n};\n\nexport const hasCustomProperty = (property, card) => {\n  return card && card.customProperties.find(p => p.name === property);\n};\n\nexport const getCounterType = card => {\n  const property = card.customProperties.find(p => p.name === \"counter\");\n  return property.type;\n};\n\nexport const gathererImageURL = card => {\n  return `http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=${\n    card.multiverse_ids[0]\n  }&type=card`;\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { gathererImageURL } from \"../../mtg/card.js\";\n\nexport const PlanechaseHelmet = ({ planes }) => {\n  return (\n    <Helmet title=\"Planechase\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/planechase-manifest.json\"}\n      />\n      {planes &&\n        planes.map(p => (\n          <link\n            rel=\"preload\"\n            href={gathererImageURL(p)}\n            as=\"image\"\n            key={p.id}\n          />\n        ))}\n    </Helmet>\n  );\n};\n","import store from \"store\";\n\nexport const moveCard = (prefix, from, to) => {\n  const deck = getCurrentDeck(prefix);\n  deck.splice(to, 0, deck.splice(from, 1)[0]);\n  storeCurrentDeck(prefix, deck);\n};\n\nexport const getOrCreateCurrentDeck = (prefix, cards, reset = false) => {\n  let deck = getCurrentDeck(prefix);\n  if (!deck || reset) {\n    console.log(`Creating New ${prefix} Deck`);\n    deck = shuffle(cards);\n    store.set(`${prefix}-history`, []);\n    storeCurrentDeck(prefix, deck);\n  }\n  return deck;\n};\n\nexport const getCurrentDeck = prefix => {\n  return store.get(`${prefix}-deck`);\n};\n\nexport const storeCurrentDeck = (prefix, deck) => {\n  return store.set(`${prefix}-deck`, deck);\n};\n\nexport const drawCard = prefix => {\n  const deck = getCurrentDeck(prefix);\n  const card = deck.shift();\n  updateHistory(prefix, card);\n  storeCurrentDeck(prefix, deck);\n  return card;\n};\n\nexport const updateHistory = (prefix, card) => {\n  const history = store.get(`${prefix}-history`);\n  history.push(card);\n  store.set(`${prefix}-history`, history);\n};\n\nexport const getHistory = (prefix, card) => {\n  return store.get(`${prefix}-history`);\n};\n\nexport const undoDraw = prefix => {\n  const history = store.get(`${prefix}-history`);\n  const card = history.pop();\n  if (card) {\n    addCardsToTop(prefix, [card]);\n  }\n  store.set(`${prefix}-history`, history);\n  return history[history.length - 1];\n};\n\nexport const addCardsToTop = (prefix, topCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, topCards.concat(deck));\n};\n\nexport const addCardsToBottom = (prefix, bottomCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, deck.concat(bottomCards));\n};\n\nexport const deckSize = prefix => {\n  return getCurrentDeck(prefix).length;\n};\n\nexport const findCard = (prefix, card) => {\n  return findCardById(prefix, card.id);\n};\n\nexport const findCardById = (prefix, cardId) => {\n  const deck = getCurrentDeck(prefix);\n  return deck.find(c => c.id === cardId);\n};\n\nexport const findAndPutOnTop = (prefix, cardId) => {\n  const tmpCard = findCardById(prefix, cardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToTop(prefix, [tmpCard]);\n  }\n};\n\nexport const findAndPutOnBottom = (prefix, cardId) => {\n  const tmpCard = findCardById(prefix, cardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToBottom(prefix, [tmpCard]);\n  }\n};\n\nexport const removeCards = (prefix, cardsToRemove) => {\n  const deck = getCurrentDeck(prefix);\n  const filteredDeck = deck.filter(\n    c => !cardsToRemove.find(r => r.id === c.id)\n  );\n  storeCurrentDeck(prefix, filteredDeck);\n};\n\nexport const revealCards = (prefix, numReveal, onlyPlanes = false) => {\n  const revealedCards = [];\n  const deck = getCurrentDeck(prefix);\n  const count = Math.min(deck.length, numReveal);\n\n  let planes = 0;\n  let tmpCount = count;\n  for (let i = 0; i < tmpCount; i++) {\n    revealedCards.push(deck[i]);\n\n    if (onlyPlanes) {\n      if (deck[i].type_line.search(\"Plane\") >= 0) {\n        planes++;\n      }\n\n      if (i === tmpCount - 1 && planes < count) {\n        tmpCount++;\n      }\n    }\n  }\n\n  return revealedCards;\n};\n\nexport const shuffle = array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\n// \tfunction showHistory(){\n// \t\tforeach( $_SESSION[ $this->prefix . 'history'] as $card){\n// \t\t\techo Card::displayHoverCardName($card, '', 'card');\n// \t\t}\n//\n// \t}\n//\n// \tfunction showRemainingCards(){\n// \t\tforeach(  $_SESSION[ $this->prefix . 'deck'] as $card){\n// \t\t echo Card::displayHoverCardName($card, $classes='');\n// \t\t}\n// \t}\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport store from \"store\";\n// TODO use expire store\nexport const internet = axios.create();\n\nconst PLANES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Aplane+or+t%3Aphenomenon&unique=cards\";\n\nconst SCHEMES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Ascheme&unique=cards\";\n\nexport const getAllPlanechaseCards = async () => {\n  try {\n    let planes = cached(\"planes\");\n    if (!planes) {\n      console.log(\"Loading from Axios\");\n      let response = await internet.get(PLANES_URL);\n      planes = response.data.data;\n      planes = planes.map(p => addAdditionalProperties(p));\n      cache(\"planes\", planes);\n      // TODO use the expire store parameter\n    } else {\n      console.log(\"Loaded from store\");\n    }\n    return planes;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nfunction addAdditionalProperties(card) {\n  const properties = {\n    Aretopolis: [{ name: \"counter\", type: \"Scroll\" }],\n    \"Chaotic Aether\": [{ name: \"all-chaos\" }],\n    \"Interplanar Tunnel\": [{ name: \"top-5\" }],\n    \"Kilnspire District\": [{ name: \"counter\", type: \"Charge\" }],\n    \"Mount Keralia\": [{ name: \"counter\", type: \"Pressure\" }],\n    \"Naar Isle\": [{ name: \"counter\", type: \"Flame\" }],\n    \"Spatial Merging\": [{ name: \"two-planes\" }],\n    \"Stairs to Infinity\": [{ name: \"chaos-trigger\" }, { name: \"scry-1\" }],\n    \"Pools of Becoming\": [{ name: \"chaos-trigger\" }, { name: \"triple-chaos\" }],\n    \"Your Inescapable Doom\": [\n      { name: \"unabandonable\" },\n      { name: \"counter\", type: \"Doom\" }\n    ]\n  };\n\n  if (properties[card.name]) {\n    card.customProperties = properties[card.name];\n  } else {\n    card.customProperties = [];\n  }\n\n  return card;\n}\n\nfunction cached(prefix) {\n  let data = store.get(prefix);\n  let cacheDate = store.get(`${prefix}-fetched`);\n  if (data && !old(cacheDate)) {\n    return data;\n  }\n  return null;\n}\n\nfunction cache(prefix, data) {\n  store.set(prefix, data);\n  store.set(`${prefix}-fetched`, moment().unix());\n}\n\nfunction old(time) {\n  return time && moment().diff(moment.unix(time), \"days\") > 5;\n}\n","import React, { Component } from \"react\";\n\nexport class Loading extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dotsCount: props.start || 0\n    };\n  }\n\n  componentDidMount() {\n    const { interval = 500 } = this.props;\n\n    this.dotsInterval = setInterval(() => {\n      this.setState({ dotsCount: this.state.dotsCount + 1 });\n    }, interval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.dotsInterval);\n  }\n\n  getDotString(count, max, char = \".\") {\n    let numDots = count % (max + 1);\n    let dots = \"\";\n\n    for (let i = 0; i < numDots; i++) {\n      dots += char;\n    }\n\n    return dots;\n  }\n\n  render() {\n    const { label = \"Loading\", className, numDots = 3 } = this.props;\n    const { dotsCount } = this.state;\n    let dots = this.getDotString(dotsCount, numDots, \".\");\n    let classes = `loading-dots ${className}`;\n\n    return (\n      <span className={classes}>\n        {label}\n        {dots}\n      </span>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { getCounterType } from \"../../mtg/card.js\";\nexport class Counter extends Component {\n  state = {\n    counters: {}\n  };\n\n  incrementCounter = () => {\n    const { card } = this.props;\n    const { counters } = this.state;\n    counters[card.id] = this.counterCount() + 1;\n    this.setState({ counters });\n  };\n\n  counterCount = () => {\n    const { card } = this.props;\n    const { counters } = this.state;\n    return counters[card.id] || 0;\n  };\n\n  componentWillUnmount() {\n    this.setState({ counters: {} });\n  }\n\n  render() {\n    const { card } = this.props;\n    const type = getCounterType(card);\n    return (\n      <div>\n        <h1 className=\"text-shadow\">{this.counterCount()}</h1>\n        <Button\n          onClick={this.incrementCounter}\n          color=\"dark\"\n          className=\"btn-translucent\"\n        >\n          Add {type} Counter\n        </Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardImgOverlay,\n  CardTitle,\n  CardBody,\n  CardSubtitle,\n  CardText,\n  CardFooter,\n  ListGroupItem,\n  Modal,\n  ModalBody\n} from \"reactstrap\";\nimport { gathererImageURL } from \"../../mtg/card\";\nimport back from \"../../images/planechase-back.jpg\";\nimport { Counter } from \"./Counter\";\nimport \"./planes.scss\";\n\nimport { hasCustomProperty } from \"../../mtg/card.js\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Plane extends Component {\n  state = {\n    modalOpen: false\n  };\n\n  toggleModal = () => {\n    console.log(\"Toggle Modal\");\n    this.setState({ modalOpen: !this.state.modalOpen });\n  };\n\n  render() {\n    const { listDisplay, card, children } = this.props;\n    if (listDisplay) {\n      return (\n        <>\n          <ListGroupItem color=\"dark\" onClick={this.toggleModal}>\n            <div>{card.name}</div>\n          </ListGroupItem>\n          <Modal\n            isOpen={this.state.modalOpen}\n            toggle={this.toggleModal}\n            size=\"md\"\n            backdrop={true}\n            contentClassName=\"bg-secondary\"\n          >\n            <ModalBody className=\"p-0\" centered=\"true\">\n              <Plane card={card} />\n              {children}\n            </ModalBody>\n          </Modal>\n        </>\n      );\n    } else {\n      return (\n        <Card inverse className=\"mtg-plane-card\">\n          {this.renderImage()}\n          {this.renderBody()}\n          {this.renderActions()}\n        </Card>\n      );\n    }\n  }\n\n  renderBody() {\n    const counter = this.renderCounter();\n    const children = this.renderChildren();\n    const text = this.renderText();\n    const hasBody = counter || children || text;\n\n    return (\n      hasBody && (\n        <CardBody>\n          {counter}\n          {children}\n          {text}\n        </CardBody>\n      )\n    );\n  }\n\n  renderCounter() {\n    const { card, renderActions } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    const hasCounters = hasCustomProperty(\"counter\", card);\n    if (renderActions && hasCounters) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center\">\n            <CardTitle className=\"text-center pt-5 mt-sm-5\">\n              <Counter card={card} />\n            </CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return (\n          <div className=\"text-center\">\n            <Counter card={card} />\n          </div>\n        );\n      }\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    if (children) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center\">\n            <CardTitle className=\"text-center pt-5 mt-sm-5\">\n              {children}\n            </CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return <div className=\"text-center\">{children}</div>;\n      }\n    }\n  }\n\n  renderActions() {\n    const { card } = this.props;\n    if (false && card) {\n      return (\n        <CardFooter>\n          <a\n            href={card.related_uris[\"gatherer\"]}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatherer\n          </a>\n        </CardFooter>\n      );\n    }\n  }\n\n  renderText() {\n    const { card } = this.props;\n    const displayText = getSetting(\"displayText\");\n    if (displayText) {\n      if (card) {\n        return (\n          <>\n            <CardTitle>{card.name}</CardTitle>\n            <CardSubtitle>{card.type_line}</CardSubtitle>\n            <CardText>{card.oracle_text}</CardText>\n          </>\n        );\n      } else {\n        return <CardTitle>None</CardTitle>;\n      }\n    }\n  }\n\n  renderImage() {\n    const displayImages = getSetting(\"displayImages\");\n    if (displayImages) {\n      return (\n        <CardImg\n          top\n          width=\"100%\"\n          src={this.imageURI()}\n          className=\"mtg-card mtg-card-plane\"\n        />\n      );\n    }\n  }\n\n  imageURI() {\n    const { card } = this.props;\n    if (card) {\n      // Use   Scryfall and rotate or use Gatherer\n      // scryfall (rotated) card.image_uris[\"border_crop\"]\n      return gathererImageURL(card);\n    } else {\n      return back;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { PlanechaseHelmet } from \"./Helmet\";\nimport {\n  getCurrentDeck,\n  getOrCreateCurrentDeck,\n  drawCard,\n  undoDraw,\n  revealCards,\n  addCardsToBottom,\n  removeCards,\n  shuffle,\n  addCardsToTop,\n  getHistory,\n  findAndPutOnBottom,\n  findAndPutOnTop,\n  moveCard\n} from \"../../mtg/deck.js\";\nimport {\n  getCurrentCard,\n  setCurrentCard,\n  hasCustomProperty,\n  setRevealedCards,\n  getRevealedCards\n} from \"../../mtg/card.js\";\nimport { getAllPlanechaseCards } from \"../../util/api.js\";\nimport { Loading } from \"../../components/Loading\";\nimport { Plane } from \"../../components/magic/Plane\";\nimport {\n  Alert,\n  Button,\n  Fade,\n  ListGroup,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  ListGroupItem\n} from \"reactstrap\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Planechase extends Component {\n  state = {\n    loading: false,\n    planes: [],\n    deck: null,\n    currentCard: null,\n    counters: 0,\n    revealedCards: [],\n    tripleChaosModalOpen: false,\n    scryModalOpen: false,\n    planeswalkDisabled: false,\n    showHistory: false,\n    showDeck: false\n  };\n\n  componentDidMount = async () => {\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes);\n    const currentCard = getCurrentCard(\"planechase\");\n    const revealedCards = getRevealedCards(\"planechase\") || [];\n    const planeswalkDisabled = !!hasCustomProperty(\"top-5\", currentCard);\n    const scryModalOpen =\n      revealedCards.length > 0 && !!hasCustomProperty(\"scry-1\", currentCard);\n    this.setState({\n      planes,\n      loading: false,\n      deck,\n      currentCard,\n      revealedCards,\n      planeswalkDisabled,\n      scryModalOpen\n    });\n  };\n\n  refreshDeck = () => {\n    const deck = getCurrentDeck(\"planechase\");\n    this.setState({ deck });\n  };\n\n  planeswalk = () => {\n    const currentCard = drawCard(\"planechase\");\n    setCurrentCard(\"planechase\", currentCard);\n    let revealedCards = [];\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      revealedCards = revealCards(\"planechase\", 2, true);\n      removeCards(\"planechase\", revealedCards);\n    }\n\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      revealedCards = revealCards(\"planechase\", 5, true);\n      removeCards(\"planechase\", revealedCards);\n      this.setState({ planeswalkDisabled: true });\n    }\n\n    setRevealedCards(\"planechase\", revealedCards);\n    this.refreshDeck();\n    this.setState({ currentCard, counters: 0, revealedCards });\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes, true);\n    const currentCard = setCurrentCard(\"planechase\", null);\n    this.setState({ planes, loading: false, deck, currentCard });\n  };\n\n  undo = async () => {\n    const currentCard = undoDraw(\"planechase\");\n    this.refreshDeck();\n    this.setState({ currentCard });\n  };\n\n  triggerChaos = () => {\n    const { currentCard, revealedCards } = this.state;\n    console.log(\"Chaos Triggered\");\n    if (hasCustomProperty(\"triple-chaos\", currentCard)) {\n      const newRevealedCards = revealCards(\"planechase\", 3, true);\n      removeCards(\"planechase\", newRevealedCards);\n      const shuffledCards = shuffle(newRevealedCards.slice());\n      addCardsToBottom(\"planechase\", shuffledCards);\n      this.refreshDeck();\n      setRevealedCards(\"planechase\", newRevealedCards);\n      this.setState({\n        revealedCards: newRevealedCards,\n        tripleChaosModalOpen: true\n      });\n    }\n\n    if (hasCustomProperty(\"scry-1\", currentCard)) {\n      console.log(\"revealed cards\", revealedCards);\n      if (!revealedCards || revealedCards.length === 0) {\n        const newRevealedCards = revealCards(\"planechase\", 1, false);\n        removeCards(\"planechase\", newRevealedCards);\n        setRevealedCards(\"planechase\", newRevealedCards);\n        this.setState({ revealedCards: newRevealedCards });\n      }\n      this.setState({ scryModalOpen: true });\n    }\n  };\n\n  render() {\n    const {\n      loading,\n      planes,\n      deck,\n      currentCard,\n      planeswalkDisabled\n    } = this.state;\n\n    return (\n      <div className=\"planechase\">\n        <PlanechaseHelmet planes={planes} />\n        <div className=\"fixed-top mt-1 ml-1 w-25 text-left\">\n          <Button\n            onClick={this.planeswalk}\n            className=\"mb-2\"\n            color=\"success\"\n            disabled={planeswalkDisabled || loading}\n            block\n          >\n            <i className=\"ms ms-planeswalker ms-2x mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Planeswalk</span>\n          </Button>\n          {this.renderChaos()}\n        </div>\n\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : (\n          <div className=\"mb-2\">\n            {currentCard ? (\n              <Plane card={currentCard} renderActions=\"true\" />\n            ) : (\n              <Plane />\n            )}\n          </div>\n        )}\n        {this.renderTwoPlanes()}\n        {this.renderFivePlanes()}\n        {this.renderTripleChaosModal()}\n        {this.renderScryModal()}\n        <Button onClick={this.reset} color=\"danger\" block>\n          Reset\n        </Button>\n        <p className=\"text-center my-3\">\n          There are {deck ? deck.length : 0} cards remaining.\n        </p>\n        {this.renderHistory()}\n        {this.renderDevTools()}\n      </div>\n    );\n  }\n\n  renderDevTools = () => {\n    const devTools = getSetting(\"devTools\");\n    if (devTools) {\n      return (\n        <div className=\"my-4 text-center\">\n          <h5>Dev Tools</h5>\n          <Button onClick={this.undo} color=\"warning\" block>\n            Undo\n          </Button>\n          {this.renderDeck()}\n        </div>\n      );\n    }\n  };\n\n  toggleDeck = () => {\n    this.setState({ showDeck: !this.state.showDeck });\n  };\n\n  manipulateDeck = () => {\n    this.refreshDeck();\n  };\n\n  renderDeck = () => {\n    const { showDeck } = this.state;\n    const deck = getCurrentDeck(\"planechase\");\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleDeck} block>\n          {showDeck ? \"Hide\" : \"Show\"} Deck\n        </Button>\n        <Fade in={showDeck}>\n          {showDeck && (\n            <ListGroup>\n              {deck.map((p, i) => (\n                <React.Fragment key={p.id}>\n                  <Plane card={p} listDisplay={true} />\n                  <ListGroupItem>\n                    <Button\n                      disabled={i === 0}\n                      onClick={() =>\n                        this.manipulateDeck(moveCard(\"planechase\", i, i - 1))\n                      }\n                    >\n                      Up\n                    </Button>\n                    <Button\n                      disabled={i === deck.length - 1}\n                      onClick={() =>\n                        this.manipulateDeck(moveCard(\"planechase\", i, i + 1))\n                      }\n                    >\n                      Down\n                    </Button>\n                    <Button\n                      disabled={i === 0}\n                      onClick={() =>\n                        this.manipulateDeck(findAndPutOnTop(\"planechase\", p.id))\n                      }\n                    >\n                      Top\n                    </Button>\n                    <Button\n                      disabled={i === deck.length - 1}\n                      onClick={() =>\n                        this.manipulateDeck(\n                          findAndPutOnBottom(\"planechase\", p.id)\n                        )\n                      }\n                    >\n                      Botom\n                    </Button>\n                    <Button\n                      color=\"danger\"\n                      onClick={() =>\n                        this.manipulateDeck(removeCards(\"planechase\", [p]))\n                      }\n                    >\n                      Remove\n                    </Button>\n                  </ListGroupItem>\n                </React.Fragment>\n              ))}\n            </ListGroup>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  };\n\n  renderHistory = () => {\n    const { showHistory } = this.state;\n    const history = getHistory(\"planechase\");\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleHistory} block>\n          {showHistory ? \"Hide\" : \"Show\"} History\n        </Button>\n        <Fade in={showHistory}>\n          {showHistory && (\n            <ListGroup>\n              {history.reverse().map(p => (\n                <Plane card={p} key={p.id} listDisplay={true} />\n              ))}\n            </ListGroup>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n\n  renderChaos() {\n    const { currentCard } = this.state;\n    const hasChaos = hasCustomProperty(\"chaos-trigger\", currentCard);\n    if (hasChaos) {\n      return (\n        <Button onClick={this.triggerChaos} color=\"info\" block>\n          <i className=\"ms ms-chaos ms-2x mx-2\" />\n          <span className=\"mx-2 d-none d-md-inline\">Trigger Chaos</span>\n        </Button>\n      );\n    }\n  }\n\n  renderTwoPlanes() {\n    const { currentCard, revealedCards } = this.state;\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      // TODO chaos Add to history etc\n      return (\n        <div>\n          <Alert color=\"info\" className=\"text-center mb-0\">\n            <i className=\"ms ms-planeswalker mx-2\" />\n            You Are On Both Planes\n            <i className=\"ms ms-planeswalker mx-2\" />\n          </Alert>\n          {revealedPlanes.map(c => (\n            <Plane card={c} key={c.id} renderActions=\"true\" />\n          ))}\n        </div>\n      );\n    }\n  }\n\n  selectPlane = card => {\n    const { revealedCards } = this.state;\n    removeCards(\"planechase\", revealedCards);\n    addCardsToTop(\"planechase\", [card]);\n    const restCards = revealedCards.filter(c => c.id !== card.id);\n    const shuffledCards = shuffle(restCards.slice());\n    addCardsToBottom(\"planechase\", shuffledCards);\n    setRevealedCards(\"planechase\", []);\n    this.setState({ planeswalkDisabled: false, revealedCards: [] });\n    this.planeswalk();\n  };\n\n  renderFivePlanes() {\n    const { currentCard, revealedCards } = this.state;\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      console.log(revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      console.log(revealedPlanes);\n      // TODO Countes, chaos etc\n      return (\n        <div>\n          <Alert color=\"info\" className=\"text-center mb-0\">\n            <i className=\"ms ms-planeswalker mx-2\" />\n            Pick a Plane to Planeswalk To\n            <i className=\"ms ms-planeswalker mx-2\" />\n          </Alert>\n          {revealedPlanes.map(c => (\n            <div key={c.id}>\n              <Plane card={c}>\n                <Button\n                  onClick={() => this.selectPlane(c)}\n                  color=\"primary\"\n                  className=\"btn-translucent\"\n                >\n                  <i className=\"ms ms-planeswalker mx-2\" />\n                  <span className=\"mx-2\">Planeswalk</span>\n                </Button>\n              </Plane>\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  _tripleChaosModalClose = () => {\n    setRevealedCards(\"planechase\", []);\n    this.setState({\n      tripleChaosModalOpen: false,\n      revealedCards: []\n    });\n  };\n\n  _tripleChaosModalToggle = () => {\n    if (this.state.tripleChaosModalOpen) {\n      this._tripleChaosModalClose();\n    }\n  };\n\n  renderTripleChaosModal() {\n    const { revealedCards, tripleChaosModalOpen } = this.state;\n    if (revealedCards && tripleChaosModalOpen) {\n      // TODO filter only planes in revealed cards\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      return (\n        <Modal\n          isOpen={!!tripleChaosModalOpen}\n          toggle={this._tripleChaosModalToggle}\n          onClosed={this._tripleChaosModalClose}\n          size=\"md\"\n          backdrop={true}\n          contentClassName=\"bg-secondary\"\n        >\n          <ModalHeader className=\"justify-content-center text-center text-white\">\n            <div>\n              <i className=\"ms ms-chaos mr-1\" />\n              <i className=\"ms ms-chaos mr-1\" />\n              <i className=\"ms ms-chaos mr-1\" />\n              <span className=\"mx-1\">Triple Chaos</span>\n              <i className=\"ms ms-chaos ml-1\" />\n              <i className=\"ms ms-chaos ml-1\" />\n              <i className=\"ms ms-chaos ml-1\" />\n            </div>\n            <div>\n              <small className=\"text-center\">You Pick Order</small>\n            </div>\n          </ModalHeader>\n          <ModalBody className=\"text-center\">\n            {revealedPlanes.map(c => (\n              <Plane card={c} key={c.id} />\n            ))}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"info\"\n              block\n              aria-label=\"Close\"\n              onClick={this._tripleChaosModalClose}\n            >\n              Done\n            </Button>\n          </ModalFooter>\n        </Modal>\n      );\n    }\n  }\n\n  _scryModalClose = () => {\n    setRevealedCards(\"planechase\", []);\n    this.setState({\n      scryModalOpen: false,\n      revealedCards: []\n    });\n  };\n\n  _scryTop = () => {\n    const { revealedCards } = this.state;\n    addCardsToTop(\"planechase\", revealedCards);\n    console.log(\"Scry Top\", revealedCards);\n    this.refreshDeck();\n    setRevealedCards(\"planechase\", []);\n    this.setState({ revealedCards: [], scryModalOpen: false });\n  };\n\n  _scryBottom = () => {\n    const { revealedCards } = this.state;\n    addCardsToBottom(\"planechase\", revealedCards);\n    console.log(\"Scry Bottom\", revealedCards);\n    this.refreshDeck();\n    setRevealedCards(\"planechase\", []);\n    this.setState({ revealedCards: [], scryModalOpen: false });\n  };\n\n  renderScryModal = () => {\n    const { revealedCards, scryModalOpen } = this.state;\n    if (revealedCards && scryModalOpen) {\n      return (\n        <Modal\n          isOpen={!!scryModalOpen}\n          size=\"md\"\n          contentClassName=\"bg-secondary\"\n        >\n          <ModalHeader className=\"justify-content-center text-white\">\n            <i className=\"ms ms-chaos mx-4\" />\n            Scry Card\n            <i className=\"ms ms-chaos mx-4\" />\n          </ModalHeader>\n          <ModalBody>\n            <Button color=\"info\" block onClick={this._scryTop}>\n              Top\n            </Button>\n            {revealedCards.map(c => (\n              <Plane card={c} key={c.id} />\n            ))}\n            <Button color=\"info\" block onClick={this._scryBottom}>\n              Bottom\n            </Button>\n          </ModalBody>\n        </Modal>\n      );\n    }\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport const ArchenemyHelmet = ({ archenemy }) => {\n  return (\n    <Helmet name=\"Archenemy\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/archenemy-manifest.json\"}\n      />\n    </Helmet>\n  );\n};\n","export const getDeckList = () => {\n  return DECKS.map(s => s.name);\n};\n\nexport const getCardList = deckname => {\n  const deck = DECKS.find(s => s.name === deckname);\n  return deck.cards;\n};\nconst DECKS = [\n  {\n    name: \"Assemble the Doomsday Machine\",\n    cards: [\n      [\"All in Good Time\", 1],\n      [\"Behold the Power of Destruction\", 1],\n      [\"Embrace My Diabolical Vision\", 1],\n      [\"Feed the Machine\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"I Know All, I See All\", 2],\n      [\"Ignite the Cloneforge!\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"The Iron Guardian Stirs\", 2],\n      [\"My Genius Knows No Bounds\", 1],\n      [\"Nothing Can Stop Me Now\", 1],\n      [\"The Pieces Are Coming Together\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Scorch the World with Dragonfire\",\n    cards: [\n      [\"All Shall Smolder in My Wake\", 2],\n      [\"Approach My Molten Realm\", 1],\n      [\"The Fate of the Flammable\", 1],\n      [\"I Bask in Your Silent Awe\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"Know Naught but Fire\", 1],\n      [\"Look Skyward and Despair\", 2],\n      [\"My Crushing Masterstroke\", 1],\n      [\"My Wish Is Your Command\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Tooth, Claw, and Tail\", 1],\n      [\"Which of You Burns Brightest?\", 2],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Trample Civilization Underfoot\",\n    cards: [\n      [\"Every Last Vestige Shall Rot\", 2],\n      [\"Evil Comes to Fruition\", 1],\n      [\"I Call on the Ancient Magics\", 1],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Into the Earthen Maw\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"May Civilization Collapse\", 1],\n      [\"Nature Demands an Offering\", 2],\n      [\"Nature Shields Its Own\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Roots of All Evil\", 2],\n      [\"The Very Soil Shall Shake\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1],\n      [\"Your Will Is Not Your Own\", 2]\n    ]\n  },\n  {\n    name: \"Bring About the Undead Apocalypse\",\n    cards: [\n      [\"Choose Your Champion\", 2],\n      [\"Dance, Pathetic Marionette\", 1],\n      [\"The Dead Shall Serve\", 2],\n      [\"Every Hope Shall Vanish\", 2],\n      [\"I Delight in Your Convulsions\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"Mortal Flesh Is Weak\", 1],\n      [\"My Undead Horde Awakens\", 1],\n      [\"Only Blood Ends Your Nightmares\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Rotted Ones, Lay Siege\", 2],\n      [\"Surrender Your Thoughts\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Archenemy Nicol Bolas\",\n    cards: [\n      [\"Because I Have Willed It\", 1],\n      [\"Behold My Grandeur\", 1],\n      [\"Bow to My Command\", 1],\n      [\"Choose Your Demise\", 1],\n      [\"Delight in the Hunt\", 1],\n      [\"Every Dream a Nightmare\", 1],\n      [\"For Each of You, a Gift\", 1],\n      [\"Know Evil\", 1],\n      [\"Make Yourself Useful\", 1],\n      [\"The Mighty Will Fall\", 1],\n      [\"My Forces Are Innumerable\", 1],\n      [\"My Laughter Echoes\", 1],\n      [\"No One Will Hear Your Cries\", 1],\n      [\"Pay Tribute to Me\", 1],\n      [\"Power Without Equal\", 1],\n      [\"A Reckoning Approaches\", 1],\n      [\"There Is No Refuge\", 1],\n      [\"This World Belongs to Me\", 1],\n      [\"What's Yours Is Now Mine\", 1],\n      [\"When Will You Learn?\", 1]\n    ]\n  }\n];\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  ListGroupItem,\n  ListGroup\n} from \"reactstrap\";\nimport { ArchenemyHelmet } from \"./Helmet\";\nimport { getDeckList, getCardList } from \"../../mtg/prebuilt-decks\";\n\nexport class Archenemy extends Component {\n  state = {};\n\n  componentDidMount = () => {};\n\n  render() {\n    return (\n      <div className=\"archenemy\">\n        <ArchenemyHelmet />\n        {this.renderPrebuilts()}\n      </div>\n    );\n  }\n\n  renderPrebuilts() {\n    const prebuilts = getDeckList();\n    const prebuiltItems = prebuilts.map((prebuilt, i) => {\n      const cardList = getCardList(prebuilt);\n      const cardListIems = cardList.map((card, i) => (\n        <ListGroupItem key={i}>{card}</ListGroupItem>\n      ));\n      return (\n        <Card key={i}>\n          <CardBody>\n            <CardTitle>{prebuilt}</CardTitle>\n            <ListGroup className=\"text-dark\">{cardListIems}</ListGroup>\n          </CardBody>\n        </Card>\n      );\n    });\n    return <div>{prebuiltItems}</div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  NavLink as RRNavLink\n} from \"react-router-dom\";\nimport {\n  Alert,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport store from \"store\";\n\nimport \"./App.scss\";\n\nimport { setSetting, getSetting, toggleSetting } from \"./util/settings\";\n\nimport { Home } from \"./pages/home\";\nimport { Planechase } from \"./pages/planechase\";\nimport { Archenemy } from \"./pages/archenemy\";\n\nclass App extends Component {\n  state = {\n    isOpen: false,\n    disclaimerDismissed: false,\n    displayText: false,\n    displayImages: false,\n    devTools: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  componentDidMount = () => {\n    this.setState({\n      disclaimerDismissed: getSetting(\"disclaimerDismissed\"),\n      displayText: getSetting(\"displayText\"),\n      displayImages: getSetting(\"displayImages\"),\n      devTools: getSetting(\"devTools\")\n    });\n  };\n\n  dismissDisclaimer = () => {\n    this.setState({\n      disclaimerDismissed: setSetting(\"disclaimerDismissed\", true)\n    });\n  };\n\n  _toggleSetting = setting => {\n    const tempState = {};\n    tempState[setting] = toggleSetting(setting);\n    this.setState(tempState);\n  };\n\n  _mtgToggler = (value, displayText, onClick) => {\n    return (\n      <DropdownItem toggle={false} onClick={onClick}>\n        <span>\n          {value ? (\n            <i className=\"ms ms-dfc ms-dfc-day\" />\n          ) : (\n            <i className=\"ms ms-dfc ms-dfc-night\" />\n          )}\n        </span>\n        <span className=\"ml-3\">{displayText}</span>\n      </DropdownItem>\n    );\n  };\n\n  closeNavbar = () => {\n    if (this.state.isOpen) {\n      this.setState({ isOpen: false });\n    }\n  };\n\n  render() {\n    const {\n      disclaimerDismissed,\n      displayText,\n      displayImages,\n      devTools\n    } = this.state;\n    return (\n      <BrowserRouter>\n        <Helmet titleTemplate=\"%s - Jibbermaster\" />\n        <Navbar color=\"dark\" dark expand=\"md\" className=\"text-right p-1\">\n          <NavbarBrand />\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink\n                  tag={RRNavLink}\n                  exact\n                  to=\"/\"\n                  activeClassName=\"active\"\n                  onClick={this.closeNavbar}\n                >\n                  Home\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  tag={RRNavLink}\n                  exact\n                  to=\"/planechase\"\n                  activeClassName=\"active\"\n                  onClick={this.closeNavbar}\n                >\n                  Planechase\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  tag={RRNavLink}\n                  exact\n                  to=\"/archenemy\"\n                  activeClassName=\"active\"\n                  onClick={this.closeNavbar}\n                >\n                  Archenemy\n                </NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Settings\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {this._mtgToggler(\n                    disclaimerDismissed,\n                    \"Disclaimer Dismissed\",\n                    () => this._toggleSetting(\"disclaimerDismissed\")\n                  )}\n                  {this._mtgToggler(displayText, \"Display Text\", () =>\n                    this._toggleSetting(\"displayText\")\n                  )}\n                  {this._mtgToggler(displayImages, \"Display Images\", () =>\n                    this._toggleSetting(\"displayImages\")\n                  )}\n                  {this._mtgToggler(devTools, \"Dev Tools\", () =>\n                    this._toggleSetting(\"devTools\")\n                  )}\n                  <DropdownItem divider />\n                  <DropdownItem toggle={false} onClick={() => store.clearAll()}>\n                    Clear Everything\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n        <div className=\"app text-light bg-dark col-md-8 offset-md-2 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3\">\n          <Switch>\n            <Route path=\"/\" exact render={props => <Home {...props} />} />\n            <Route\n              path=\"/archenemy\"\n              exact\n              render={props => <Archenemy {...props} />}\n            />\n            <Route\n              path=\"/planechase\"\n              exact\n              render={props => <Planechase {...props} />}\n            />\n          </Switch>\n          <Alert\n            color=\"warning\"\n            className=\"fixed-bottom mb-0 py-1\"\n            isOpen={!this.state.disclaimerDismissed}\n            toggle={this.dismissDisclaimer}\n          >\n            <h6>Disclaimer</h6>\n            <small className=\"text-muted m-0\">\n              This site is created for personal use. Magic: The Gathering, the\n              mana symbols, the tap symbol and all other related images are\n              owned by Wizards of the Coast. jibbermaster.com is unaffiliated\n              with Wizards of the Coast.\n            </small>\n          </Alert>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/planechase-back.c7f50007.jpg\";"],"sourceRoot":""}