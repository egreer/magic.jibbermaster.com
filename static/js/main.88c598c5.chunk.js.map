{"version":3,"sources":["images/planechase-back.jpg","images/archenemy-back.jpg","util/settings.js","pages/home/index.js","mtg/card.js","pages/planechase/Helmet.js","mtg/deck.js","util/api.js","components/Loading.js","components/magic/Counter.js","components/magic/Plane.js","components/magic/planar-die/PlanarDie.js","components/magic/DoubleFaceIcon.js","pages/planechase/index.js","pages/archenemy/Helmet.js","mtg/prebuilt-decks.js","components/magic/Scheme.js","pages/archenemy/index.js","pages/syb/Helmet.js","pages/syb/index.js","pages/formats/Helmet.js","pages/formats/formats.js","pages/formats/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","store","addPlugin","defaultPlugin","defaults","getSetting","setting","get","setSetting","value","set","Home","Component","componentDidMount","render","className","title","rel","href","Button","as","NavLink","exact","to","block","variant","size","getCurrentCard","prefix","setCurrentCard","card","setRevealedCards","cards","getAdditionalCards","setAdditionalCards","getScryCards","setScryCards","hasCustomProperty","property","customProperties","find","p","name","gathererImageURL","multiverse_ids","PlanechaseHelmet","planes","sizes","map","key","id","moveCard","from","deck","getCurrentDeck","splice","storeCurrentDeck","getOrCreateCurrentDeck","reset","console","log","clonedCard","JSON","parse","stringify","forEach","c","deck_card_id","uuidv4","shuffle","drawCard","shift","updateHistory","history","push","getHistory","undoDraw","pop","addCardsToTop","length","topCards","concat","addCardsToBottom","bottomCards","findCardByDeckCardId","deckCardId","findAndPutOnTop","tmpCard","removeCards","findAndPutOnBottom","cardsToRemove","filteredDeck","filter","r","revealCards","numReveal","onlyPlanes","revealedCards","count","Math","min","tmpCount","i","type_line","search","array","temporaryValue","randomIndex","currentIndex","floor","random","internet","axios","create","getAllPlanechaseCards","a","cached","response","cache","data","addAdditionalProperties","error","getAllArchenemyCards","schemes","properties","Aretopolis","type","oracle_html","__html","oracle_text","replace","cacheDate","time","moment","diff","unix","Loading","constructor","props","super","this","state","dotsCount","start","interval","dotsInterval","setInterval","setState","componentWillUnmount","clearInterval","getDotString","max","char","numDots","dots","label","classes","Counter","useState","counter","setCounter","getCounterType","onClick","Plane","modalOpen","fullscreen","toggleModal","toggleFullScreen","renderCardImage","Card","Img","width","src","imageURI","listDisplay","children","ListGroup","Item","Modal","show","onHide","backdrop","dialogClassName","Body","centered","bg","text","renderImage","renderCounter","renderChildren","renderBody","renderActions","renderText","displayImages","hasCounters","onDoubleClick","ImgOverlay","Title","Footer","Link","related_uris","target","Subtitle","Text","dangerouslySetInnerHTML","back","PlanarDie","rollDone","noop","numDice","roll","translateRoll","defaultRoll","outline","outlineColor","DoubleFaceIcon","enabled","style","backdropStyle","backgroundColor","merge","Planechase","loading","currentCard","additionalCards","scryCards","tripleChaosModalOpen","scryModalOpen","planeswalkDisabled","showHistory","showDeck","showDeckImages","showPlanarDie","refreshDeck","planeswalk","revealedPlanes","revealedPhenomenon","undo","triggerChaos","newRevealedCards","shuffledCards","slice","newScryCards","renderDevTools","renderDeck","togglePlanarDie","toggleDeck","toggleDeckImages","manipulateDeck","Fade","in","Fragment","ButtonToolbar","ButtonGroup","disabled","toggleHistory","renderHistory","reverse","selectPlane","restCards","_tripleChaosModalClose","_tripleChaosModalToggle","_scryModalClose","_scryTop","_scryBottom","renderScryModal","Header","timeout","renderChaos","renderTwoPlanes","renderFivePlanes","renderTripleChaosModal","bottom","right","face","Alert","aria-label","ArchenemyHelmet","image_uris","DECKS","Scheme","Archenemy","ongoingSchemes","abandonedOngoing","deckSelection","customDeck","scheme","newCard","abandonScheme","newOngoing","s","resetCustomDeck","deckCardTitle","deckIcon","renderDeckSelect","renderGamePlay","Jumbotron","fluid","Container","renderAbandon","renderOngoingSchemes","selectDeck","renderPrebuilts","renderBuildCustomDeck","newCards","incrementCount","decrementCount","customDeckSize","reduce","b","cardListItems","Badge","pill","Accordion","Toggle","eventKey","Collapse","prebuiltItems","prebuilt","cardList","deckname","getCardList","SYBHelmet","circleLayout","nodeDimensionsIncludeLabels","gridLayout","rows","SYB","playerCount","targets","loadingDirection","cySet","labels","0","showTurnEdges","cy","dialog","tableShape","whichWay","setTimeout","regenerateOrder","removeListeners","toggleTurnEdges","generateNodes","Array","keys","generateEdges","player","targetIndex","source","_","players","handleCy","layout","isSquare","refreshLayout","debounce","run","nodeClick","e","clickedNode","setLabel","split","on","nodes","number","bsSize","actions","Dialog","CancelAction","OKAction","prompt","TextPrompt","initialValue","renderCyto","elements","edges","stylesheet","selector","padding","height","content","color","opacity","CytoscapeComponent","normalizeElements","userPanningEnabled","removeListener","newPlayerCount","setTableShape","shape","top","left","Spinner","animation","ref","component","FormatsHelmet","TAGS","defaultEnabled","canAny","canEven","can2Hg","canFreeForAll","canEmperor","canSecretPartner","canPentacle","FORMATS","initial","tags","showSwaps","displayName","Handle","Slider","handle","dragging","index","restProps","prefixCls","overlay","visible","placement","Formats","currentFormats","activeFormat","loadingFormat","swapTriggered","createTags","createFormats","rand","getRandomFormat","list","totalWeight","result","cur","weight","randomNum","weightSum","item","updateFormatValue","format","f","updatedCurrentFormats","triggerSwap","toggleTag","tag","t","newTags","pickFormat","formats","activeFormats","showDeckswapButton","enabledTags","includes","renderActiveFormatName","renderFormatToggles","renderActiveFormats","cloneDeep","activeTags","uniq","flatMap","sort","values","every","marks","25","50","75","defaultValue","included","onAfterChange","gitInfo","App","isOpen","disclaimerDismissed","displayText","devTools","displayGatherer","toggle","versionCheck","commit","shortHash","clearAll","dismissDisclaimer","_toggleSetting","tempState","toggleSetting","_mtgToggler","Dropdown","closeNavbar","titleTemplate","Navbar","expand","expanded","Brand","Nav","navbar","RRNavLink","activeClassName","onToggle","Menu","alignRight","Divider","path","onClose","dismissible","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.88c598c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/planechase-back.c7f50007.jpg\";","module.exports = __webpack_public_path__ + \"static/media/archenemy-back.2c00b5d4.jpg\";","import store from \"store\";\nimport defaultPlugin from \"store/plugins/defaults\";\n\nstore.addPlugin(defaultPlugin);\n\nconst SETTINGS = {\n  \"setting-disclaimerDismissed\": false,\n  \"setting-displayText\": false,\n  \"setting-displayImages\": true,\n  \"setting-devTools\": false,\n  \"setting-displayGatherer\": false\n};\nstore.defaults(SETTINGS);\n\nexport const getSetting = setting => {\n  return store.get(`setting-${setting}`);\n};\n\nexport const setSetting = (setting, value) => {\n  return store.set(`setting-${setting}`, value);\n};\n\nexport const toggleSetting = setting => {\n  const value = getSetting(setting);\n  return setSetting(setting, !value);\n};\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nexport class Home extends Component {\n  componentDidMount = () => {};\n  render() {\n    return (\n      <div className=\"home\">\n        <Helmet title=\"Magic\">\n          <link\n            rel=\"manifest\"\n            href={process.env.PUBLIC_URL + \"/manifest.json\"}\n          />\n        </Helmet>\n        <div className=\"mt-4\">\n          <Button\n            as={NavLink}\n            exact\n            to=\"/planechase\"\n            block\n            variant=\"info\"\n            size=\"lg\"\n          >\n            <i className=\"ms ms-planeswalker ms-4x mx-2 d-block\" />\n            <span className=\"d-block\">Planechase</span>\n          </Button>\n          <Button\n            as={NavLink}\n            exact\n            to=\"/archenemy\"\n            block\n            variant=\"danger\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-arc ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">Archenemy</span>\n          </Button>\n          <Button\n            as={NavLink}\n            exact\n            to=\"/syb\"\n            block\n            variant=\"success\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-s00 ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">SYB</span>\n          </Button>\n          <Button\n            as={NavLink}\n            exact\n            to=\"/formats\"\n            block\n            variant=\"primary\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-evg ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">Formats</span>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import store from \"store\";\n\nexport const getCurrentCard = prefix => {\n  return store.get(`${prefix}-currentCard`);\n};\n\nexport const setCurrentCard = (prefix, card) => {\n  return store.set(`${prefix}-currentCard`, card);\n};\n\nexport const getRevealedCards = prefix => {\n  return store.get(`${prefix}-revealedCards`);\n};\n\nexport const setRevealedCards = (prefix, cards) => {\n  return store.set(`${prefix}-revealedCards`, cards);\n};\n\nexport const getAdditionalCards = prefix => {\n  return store.get(`${prefix}-additionalCards`);\n};\n\nexport const setAdditionalCards = (prefix, cards) => {\n  return store.set(`${prefix}-additionalCards`, cards);\n};\n\nexport const getScryCards = prefix => {\n  return store.get(`${prefix}-scryCards`);\n};\n\nexport const setScryCards = (prefix, cards) => {\n  return store.set(`${prefix}-scryCards`, cards);\n};\n\nexport const hasCustomProperty = (property, card) => {\n  return card && card.customProperties.find(p => p.name === property);\n};\n\nexport const getCounterType = card => {\n  const property = card.customProperties.find(p => p.name === \"counter\");\n  return property.type;\n};\n\nexport const gathererImageURL = card => {\n  return `https://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=${card.multiverse_ids[0]}&type=card`;\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { gathererImageURL } from \"../../mtg/card.js\";\n\nexport const PlanechaseHelmet = ({ planes }) => {\n  return (\n    <Helmet title=\"Planechase\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/planechase-manifest.json\"}\n      />\n      {planes &&\n        planes.map(p => (\n          <link\n            rel=\"preload\"\n            href={gathererImageURL(p)}\n            as=\"image\"\n            key={p.id}\n          />\n        ))}\n    </Helmet>\n  );\n};\n","import store from \"store\";\nimport uuidv4 from \"uuid/v4\";\n\nexport const moveCard = (prefix, from, to) => {\n  const deck = getCurrentDeck(prefix);\n  deck.splice(to, 0, deck.splice(from, 1)[0]);\n  storeCurrentDeck(prefix, deck);\n};\n\nexport const getOrCreateCurrentDeck = (prefix, cards, reset = false) => {\n  let deck = getCurrentDeck(prefix);\n  if (!deck || reset) {\n    console.log(`Creating New ${prefix} Deck`);\n    // Clone all the cards so that we aren't modifying original objects\n    const clonedCard = JSON.parse(JSON.stringify(cards));\n    // Add Deck Card Id so that each card in the deck has a unique value\n    clonedCard.forEach(c => (c.deck_card_id = uuidv4()));\n    deck = shuffle(clonedCard);\n    store.set(`${prefix}-history`, []);\n    storeCurrentDeck(prefix, deck);\n  }\n  return deck;\n};\n\nexport const getCurrentDeck = prefix => {\n  return store.get(`${prefix}-deck`);\n};\n\nexport const storeCurrentDeck = (prefix, deck) => {\n  return store.set(`${prefix}-deck`, deck);\n};\n\nexport const drawCard = prefix => {\n  const deck = getCurrentDeck(prefix);\n  const card = deck.shift();\n  if (card) {\n    updateHistory(prefix, card);\n  }\n  storeCurrentDeck(prefix, deck);\n  return card;\n};\n\nexport const updateHistory = (prefix, card) => {\n  const history = store.get(`${prefix}-history`);\n  history.push(card);\n  store.set(`${prefix}-history`, history);\n};\n\nexport const getHistory = (prefix, card) => {\n  return store.get(`${prefix}-history`);\n};\n\nexport const undoDraw = prefix => {\n  const history = store.get(`${prefix}-history`);\n  const card = history.pop();\n  if (card) {\n    addCardsToTop(prefix, [card]);\n  }\n  store.set(`${prefix}-history`, history);\n  return history[history.length - 1];\n};\n\nexport const addCardsToTop = (prefix, topCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, topCards.concat(deck));\n};\n\nexport const addCardsToBottom = (prefix, bottomCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, deck.concat(bottomCards));\n};\n\nexport const deckSize = prefix => {\n  return getCurrentDeck(prefix).length;\n};\n\nexport const findCard = (prefix, card) => {\n  return findCardByDeckCardId(prefix, card.deck_card_id);\n};\n\nexport const findCardByDeckCardId = (prefix, deckCardId) => {\n  const deck = getCurrentDeck(prefix);\n  return deck.find(c => c.deck_card_id === deckCardId);\n};\n\nexport const findAndPutOnTop = (prefix, deckCardId) => {\n  const tmpCard = findCardByDeckCardId(prefix, deckCardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToTop(prefix, [tmpCard]);\n  }\n};\n\nexport const findAndPutOnBottom = (prefix, deckCardId) => {\n  const tmpCard = findCardByDeckCardId(prefix, deckCardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToBottom(prefix, [tmpCard]);\n  }\n};\n\nexport const removeCards = (prefix, cardsToRemove) => {\n  const deck = getCurrentDeck(prefix);\n  const filteredDeck = deck.filter(\n    c => !cardsToRemove.find(r => r.deck_card_id === c.deck_card_id)\n  );\n  storeCurrentDeck(prefix, filteredDeck);\n};\n\nexport const revealCards = (prefix, numReveal, onlyPlanes = false) => {\n  const revealedCards = [];\n  const deck = getCurrentDeck(prefix);\n  const count = Math.min(deck.length, numReveal);\n\n  let planes = 0;\n  let tmpCount = count;\n  for (let i = 0; i < tmpCount; i++) {\n    revealedCards.push(deck[i]);\n\n    if (onlyPlanes) {\n      if (deck[i].type_line.search(\"Plane\") >= 0) {\n        planes++;\n      }\n\n      if (i === tmpCount - 1 && planes < count) {\n        tmpCount++;\n      }\n    }\n  }\n\n  return revealedCards;\n};\n\nexport const shuffle = array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\n// \tfunction showHistory(){\n// \t\tforeach( $_SESSION[ $this->prefix . 'history'] as $card){\n// \t\t\techo Card::displayHoverCardName($card, '', 'card');\n// \t\t}\n//\n// \t}\n//\n// \tfunction showRemainingCards(){\n// \t\tforeach(  $_SESSION[ $this->prefix . 'deck'] as $card){\n// \t\t echo Card::displayHoverCardName($card, $classes='');\n// \t\t}\n// \t}\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport store from \"store\";\n// TODO use expire store\nexport const internet = axios.create();\n\nconst PLANES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Aplane+or+t%3Aphenomenon&unique=cards\";\n\nconst SCHEMES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Ascheme&unique=cards\";\n\nexport const getAllPlanechaseCards = async () => {\n  try {\n    let planes = cached(\"planes\");\n    if (!planes) {\n      console.log(\"Loading from Axios\");\n      let response = await internet.get(PLANES_URL);\n      planes = response.data.data;\n      planes = planes.map(p => addAdditionalProperties(p));\n      cache(\"planes\", planes);\n      // TODO use the expire store parameter\n    } else {\n      console.log(\"Loaded from store\");\n    }\n    return planes;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const getAllArchenemyCards = async () => {\n  try {\n    let schemes = cached(\"schemes\");\n    if (!schemes) {\n      console.log(\"Loading from Axios\");\n      let response = await internet.get(SCHEMES_URL);\n      schemes = response.data.data;\n      schemes = schemes.map(p => addAdditionalProperties(p));\n      cache(\"schemes\", schemes);\n      // TODO use the expire store parameter\n    } else {\n      console.log(\"Loaded from store\");\n    }\n    return schemes;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nfunction addAdditionalProperties(card) {\n  const properties = {\n    Aretopolis: [{ name: \"counter\", type: \"Scroll\" }],\n    \"Chaotic Aether\": [{ name: \"all-chaos\" }],\n    \"Interplanar Tunnel\": [{ name: \"top-5\" }],\n    \"Kilnspire District\": [{ name: \"counter\", type: \"Charge\" }],\n    \"Mount Keralia\": [{ name: \"counter\", type: \"Pressure\" }],\n    \"Naar Isle\": [{ name: \"counter\", type: \"Flame\" }],\n    \"Spatial Merging\": [{ name: \"two-planes\" }],\n    \"Stairs to Infinity\": [{ name: \"chaos-trigger\" }, { name: \"scry-1\" }],\n    \"Pools of Becoming\": [{ name: \"chaos-trigger\" }, { name: \"triple-chaos\" }],\n    \"Your Inescapable Doom\": [\n      { name: \"unabandonable\" },\n      { name: \"counter\", type: \"Doom\" }\n    ]\n  };\n\n  if (properties[card.name]) {\n    card.customProperties = properties[card.name];\n  } else {\n    card.customProperties = [];\n  }\n\n  card.oracle_html = createMarkup(card.oracle_text);\n\n  return card;\n}\n\nfunction createMarkup(text) {\n  text = text.replace(/\\r\\n/g, \"<br />\").replace(/[\\r\\n]/g, \"<br />\");\n  text = text.replace(/{CHAOS}/g, '<i class=\"ms ms-chaos\"></i>');\n  text = text.replace(/CHAOS/g, '<i class=\"ms ms-chaos\"></i>');\n  text = text.replace(/{W}/g, '<i class=\"ms ms-w ms-cost\"></i>');\n  text = text.replace(/{U}/g, '<i class=\"ms ms-u ms-cost\"></i>');\n  text = text.replace(/{B}/g, '<i class=\"ms ms-b ms-cost\"></i>');\n  text = text.replace(/{R}/g, '<i class=\"ms ms-r ms-cost\"></i>');\n  text = text.replace(/{G}/g, '<i class=\"ms ms-g ms-cost\"></i>');\n  text = text.replace(/\\{1\\}/g, '<i class=\"ms ms-1 ms-cost\"></i>');\n  text = text.replace(/\\{2\\}/g, '<i class=\"ms ms-2 ms-cost\"></i>');\n  text = text.replace(/\\{3\\}/g, '<i class=\"ms ms-3 ms-cost\"></i>');\n  text = text.replace(/\\{T\\}/g, '<i class=\"ms ms-tap\"></i>');\n  text = text.replace(/{X}/g, '<i class=\"ms ms-x ms-cost\"></i>');\n  text = text.replace(/X/g, '<i class=\"ms ms-x\"></i>');\n  text = text.replace(/\\((.*)\\)/g, \"<small><em>($1)</em></small>\");\n  return { __html: text };\n}\n\nfunction cached(prefix) {\n  let data = store.get(prefix);\n  let cacheDate = store.get(`${prefix}-fetched`);\n  if (data && !old(cacheDate)) {\n    return data;\n  }\n  return null;\n}\n\nfunction cache(prefix, data) {\n  store.set(prefix, data);\n  store.set(`${prefix}-fetched`, moment().unix());\n}\n\nfunction old(time) {\n  return time && moment().diff(moment.unix(time), \"days\") > 5;\n}\n","import React, { Component } from \"react\";\n\nexport class Loading extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dotsCount: props.start || 0\n    };\n  }\n\n  componentDidMount() {\n    const { interval = 500 } = this.props;\n\n    this.dotsInterval = setInterval(() => {\n      this.setState({ dotsCount: this.state.dotsCount + 1 });\n    }, interval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.dotsInterval);\n  }\n\n  getDotString(count, max, char = \".\") {\n    let numDots = count % (max + 1);\n    let dots = \"\";\n\n    for (let i = 0; i < numDots; i++) {\n      dots += char;\n    }\n\n    return dots;\n  }\n\n  render() {\n    const { label = \"Loading\", className, numDots = 3 } = this.props;\n    const { dotsCount } = this.state;\n    let dots = this.getDotString(dotsCount, numDots, \".\");\n    let classes = `loading-dots ${className}`;\n\n    return (\n      <span className={classes}>\n        {label}\n        {dots}\n      </span>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { getCounterType } from \"../../mtg/card.js\";\n\nexport const Counter = ({ card }) => {\n  const [counter, setCounter] = useState(card?.counter || 0);\n  const type = getCounterType(card);\n  const incrementCounter = () => {\n    card.counter = counter + 1;\n    setCounter(counter + 1);\n  };\n  return (\n    <div>\n      <h1 className=\"text-shadow noselect\">{counter}</h1>\n      <Button\n        onClick={incrementCounter}\n        variant=\"dark\"\n        size=\"lg\"\n        className=\"btn-translucent\"\n      >\n        <h3 className=\"mb-0\">Add {type} Counter</h3>\n      </Button>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Card, ListGroup, Modal } from \"react-bootstrap\";\nimport { gathererImageURL } from \"../../mtg/card\";\nimport back from \"../../images/planechase-back.jpg\";\nimport { Counter } from \"./Counter\";\nimport \"./planes.scss\";\n\nimport { hasCustomProperty } from \"../../mtg/card.js\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Plane extends Component {\n  state = {\n    modalOpen: false,\n    fullscreen: false\n  };\n\n  toggleModal = () => {\n    console.log(\"Toggle Modal\");\n    this.setState({ modalOpen: !this.state.modalOpen });\n  };\n\n  toggleFullScreen = () => {\n    console.log(\"Toggle FullScreen\");\n    this.setState({ fullscreen: !this.state.fullscreen });\n  };\n\n  render() {\n    const { listDisplay, card, children } = this.props;\n    if (listDisplay) {\n      return (\n        <>\n          <ListGroup.Item variant=\"dark\" onClick={this.toggleModal}>\n            <div>{card.name}</div>\n          </ListGroup.Item>\n          <Modal\n            show={this.state.modalOpen}\n            onHide={this.toggleModal}\n            size=\"md\"\n            backdrop={true}\n            dialogClassName=\"modal-content-no-border\"\n          >\n            <Modal.Body className=\"p-0\" centered=\"true\">\n              <Plane card={card} />\n              {children}\n            </Modal.Body>\n          </Modal>\n        </>\n      );\n    } else {\n      return (\n        <Card bg=\"black\" text=\"light\" className=\"mtg-plane-card\">\n          {this.renderImage()}\n          {this.renderCounter()}\n          {this.renderChildren()}\n          {this.renderBody()}\n          {this.renderActions()}\n        </Card>\n      );\n    }\n  }\n\n  renderBody() {\n    const text = this.renderText();\n    const hasBody = text;\n\n    return hasBody && <Card.Body>{text}</Card.Body>;\n  }\n\n  renderCounter() {\n    const { card, renderActions } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    const hasCounters = hasCustomProperty(\"counter\", card);\n    if (renderActions && hasCounters) {\n      if (displayImages) {\n        return (\n          <div onDoubleClick={this.toggleFullScreen}>\n            <Card.ImgOverlay className=\"text-center plane-overlay counter-overlay\">\n              <Card.Title className=\"text-center\">\n                <Counter card={card} />\n              </Card.Title>\n            </Card.ImgOverlay>\n          </div>\n        );\n      } else {\n        return (\n          <Card.Body className=\"text-center pb-0\">\n            <Counter card={card} />\n          </Card.Body>\n        );\n      }\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    if (children) {\n      if (displayImages) {\n        return (\n          <div onDoubleClick={this.toggleFullScreen}>\n            <Card.ImgOverlay className=\"text-center plane-overlay child-overlay\">\n              <Card.Title className=\"text-center\">{children}</Card.Title>\n            </Card.ImgOverlay>\n          </div>\n        );\n      } else {\n        return <Card.Body className=\"text-center pb-0\">{children}</Card.Body>;\n      }\n    }\n  }\n\n  renderActions() {\n    const { card } = this.props;\n    const displayGatherer = getSetting(\"displayGatherer\");\n    if (displayGatherer && card) {\n      return (\n        <Card.Footer>\n          <Card.Link\n            href={card.related_uris[\"gatherer\"]}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatherer\n          </Card.Link>\n        </Card.Footer>\n      );\n    }\n  }\n\n  renderText() {\n    const { card } = this.props;\n    const displayText = getSetting(\"displayText\");\n    if (displayText) {\n      if (card) {\n        return (\n          <>\n            <Card.Title>\n              <h5>{card.name}</h5>\n            </Card.Title>\n            <Card.Subtitle>{card.type_line}</Card.Subtitle>\n            <Card.Text dangerouslySetInnerHTML={card.oracle_html} />\n          </>\n        );\n      } else {\n        return <Card.Title>None</Card.Title>;\n      }\n    }\n  }\n\n  renderCardImage = () => (\n    <Card.Img\n      variant=\"top\"\n      width=\"100%\"\n      src={this.imageURI()}\n      className=\"mtg-card mtg-card-plane\"\n    />\n  );\n\n  renderImage() {\n    const displayImages = getSetting(\"displayImages\");\n    if (displayImages) {\n      return (\n        <>\n          <div onDoubleClick={this.toggleFullScreen}>\n            {this.renderCardImage()}\n          </div>\n          <Modal\n            show={this.state.fullscreen}\n            onHide={this.toggleFullScreen}\n            backdrop={true}\n            dialogClassName=\"modal-content-full bg-transparent\"\n            centered={true}\n          >\n            <Modal.Body\n              className=\"p-0\"\n              centered=\"true\"\n              onClick={this.toggleFullScreen}\n            >\n              {this.renderCardImage()}\n            </Modal.Body>\n          </Modal>\n        </>\n      );\n    }\n  }\n\n  imageURI() {\n    const { card } = this.props;\n    if (card) {\n      // Use   Scryfall and rotate or use Gatherer\n      // scryfall (rotated) card.image_uris[\"border_crop\"]\n      return gathererImageURL(card);\n    } else {\n      return back;\n    }\n  }\n}\n","import React from \"react\";\nimport ReactDice from \"react-dice-complete\";\nimport \"react-dice-complete/dist/react-dice-complete.css\";\nimport \"./planar-die.scss\";\nimport noop from \"lodash/noop\";\n\nconst translateRoll = roll => {\n  switch (roll) {\n    case 1:\n      return \"Planeswalk\";\n    case 6:\n      return \"Chaos\";\n    default:\n      return \"Blank\";\n  }\n};\n\nexport const PlanarDie = ({ rollDone = noop }) => {\n  return (\n    <div className=\"planar\">\n      <ReactDice\n        numDice={1}\n        rollDone={r => rollDone(translateRoll(r))}\n        defaultRoll={1}\n        outline={true}\n        outlineColor=\"#000000\"\n      />\n    </div>\n  );\n};\n","import React from \"react\";\r\nimport merge from \"lodash/merge\";\r\n\r\nexport const DoubleFaceIcon = ({ enabled, backdrop = false, style = {} }) => {\r\n  const backdropStyle = backdrop ? { backgroundColor: \"#ffffff\" } : {};\r\n  return (\r\n    <span>\r\n      {enabled ? (\r\n        <i\r\n          className=\"ms ms-dfc ms-dfc-day\"\r\n          style={merge({}, backdropStyle, style)}\r\n        />\r\n      ) : (\r\n        <i\r\n          className=\"ms ms-dfc ms-dfc-night\"\r\n          style={merge({}, backdropStyle, style)}\r\n        />\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport {\n  Alert,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Fade,\n  ListGroup,\n  Modal\n} from \"react-bootstrap\";\nimport { PlanechaseHelmet } from \"./Helmet\";\nimport {\n  getCurrentDeck,\n  getOrCreateCurrentDeck,\n  drawCard,\n  undoDraw,\n  revealCards,\n  addCardsToBottom,\n  removeCards,\n  shuffle,\n  addCardsToTop,\n  getHistory,\n  updateHistory,\n  findAndPutOnBottom,\n  findAndPutOnTop,\n  moveCard\n} from \"../../mtg/deck.js\";\nimport {\n  getCurrentCard,\n  setCurrentCard,\n  hasCustomProperty,\n  setRevealedCards,\n  getRevealedCards,\n  setAdditionalCards,\n  getAdditionalCards,\n  setScryCards,\n  getScryCards\n} from \"../../mtg/card.js\";\nimport { getAllPlanechaseCards } from \"../../util/api.js\";\nimport { Loading } from \"../../components/Loading\";\nimport { Plane } from \"../../components/magic/Plane\";\nimport { getSetting } from \"../../util/settings.js\";\nimport { PlanarDie } from \"../../components/magic/planar-die/PlanarDie\";\nimport { DoubleFaceIcon } from \"../../components/magic/DoubleFaceIcon\";\n\nexport class Planechase extends Component {\n  state = {\n    loading: false,\n    planes: [],\n    deck: null,\n    currentCard: null,\n    revealedCards: [],\n    additionalCards: [],\n    scryCards: [],\n    tripleChaosModalOpen: false,\n    scryModalOpen: false,\n    planeswalkDisabled: false,\n    showHistory: false,\n    showDeck: false,\n    showDeckImages: false,\n    showPlanarDie: true\n  };\n\n  componentDidMount = async () => {\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes);\n    const currentCard = getCurrentCard(\"planechase\");\n    const revealedCards = getRevealedCards(\"planechase\") || [];\n    const scryCards = getScryCards(\"planechase\") || [];\n    const additionalCards = getAdditionalCards(\"planechase\");\n    const planeswalkDisabled = !!hasCustomProperty(\"top-5\", currentCard);\n    const scryModalOpen =\n      scryCards.length > 0 && !!hasCustomProperty(\"scry-1\", currentCard);\n    this.setState({\n      planes,\n      loading: false,\n      deck,\n      currentCard,\n      revealedCards,\n      additionalCards,\n      scryCards,\n      planeswalkDisabled,\n      scryModalOpen\n    });\n  };\n\n  refreshDeck = () => {\n    const deck = getCurrentDeck(\"planechase\");\n    this.setState({ deck });\n  };\n\n  planeswalk = () => {\n    const currentCard = drawCard(\"planechase\");\n    setCurrentCard(\"planechase\", currentCard);\n    let revealedCards = [];\n    let additionalCards = [];\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      revealedCards = revealCards(\"planechase\", 2, true);\n      removeCards(\"planechase\", revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      const revealedPhenomenon = revealedCards.filter(\n        c => c.type_line.search(\"Phenomenon\") >= 0\n      );\n      revealedPlanes.forEach(c => updateHistory(\"planechase\", c));\n      addCardsToBottom(\"planechase\", revealedPhenomenon);\n      revealedCards = [];\n      additionalCards = revealedPlanes;\n    }\n\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      revealedCards = revealCards(\"planechase\", 5, true);\n      removeCards(\"planechase\", revealedCards);\n      this.setState({ planeswalkDisabled: true });\n    }\n\n    setRevealedCards(\"planechase\", revealedCards);\n    setAdditionalCards(\"planechase\", additionalCards);\n    this.refreshDeck();\n    this.setState({ currentCard, revealedCards, additionalCards });\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes, true);\n    const currentCard = setCurrentCard(\"planechase\", null);\n    const revealedCards = setRevealedCards(\"planechase\", []);\n    const scryCards = setScryCards(\"planechase\", []);\n    const additionalCards = setAdditionalCards(\"planechase\", []);\n    this.setState({\n      planes,\n      loading: false,\n      deck,\n      currentCard,\n      revealedCards,\n      scryCards,\n      additionalCards,\n      planeswalkDisabled: false,\n      scryModalOpen: false\n    });\n  };\n\n  undo = async () => {\n    const currentCard = undoDraw(\"planechase\");\n    this.refreshDeck();\n    this.setState({ currentCard });\n  };\n\n  triggerChaos = card => {\n    const { scryCards } = this.state;\n    console.log(\"Chaos Triggered\");\n    if (hasCustomProperty(\"triple-chaos\", card)) {\n      const newRevealedCards = revealCards(\"planechase\", 3, true);\n      removeCards(\"planechase\", newRevealedCards);\n      const shuffledCards = shuffle(newRevealedCards.slice());\n      addCardsToBottom(\"planechase\", shuffledCards);\n      this.refreshDeck();\n      setRevealedCards(\"planechase\", newRevealedCards);\n      this.setState({\n        revealedCards: newRevealedCards,\n        tripleChaosModalOpen: true\n      });\n    }\n\n    if (hasCustomProperty(\"scry-1\", card)) {\n      if (!scryCards || scryCards.length === 0) {\n        const newScryCards = revealCards(\"planechase\", 1, false);\n        removeCards(\"planechase\", newScryCards);\n        setScryCards(\"planechase\", newScryCards);\n        this.setState({ scryCards: newScryCards });\n      }\n      this.setState({ scryModalOpen: true });\n    }\n  };\n\n  render() {\n    const {\n      loading,\n      planes,\n      deck,\n      currentCard,\n      planeswalkDisabled,\n      showPlanarDie\n    } = this.state;\n\n    return (\n      <div className=\"planechase\">\n        <PlanechaseHelmet planes={planes} />\n        <div className=\"fixed-top mt-1 ml-1 w-25 text-left\">\n          <Button\n            onClick={this.planeswalk}\n            className=\"mb-2\"\n            variant=\"success\"\n            disabled={planeswalkDisabled || loading}\n            block\n          >\n            <i className=\"ms ms-planeswalker ms-2x mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Planeswalk</span>\n          </Button>\n        </div>\n\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : (\n          <div className=\"mb-2\">\n            {currentCard ? (\n              <Fade key={currentCard.deck_card_id} timeout={100}>\n                <Plane card={currentCard} renderActions=\"true\">\n                  {this.renderChaos(currentCard)}\n                </Plane>\n              </Fade>\n            ) : (\n              <Plane />\n            )}\n          </div>\n        )}\n        {this.renderTwoPlanes()}\n        {this.renderFivePlanes()}\n        {this.renderTripleChaosModal()}\n        {this.renderScryModal()}\n        {this.renderHistory()}\n\n        <p className=\"text-center my-3 noselect\">\n          There are {deck ? deck.length : 0} cards remaining.\n        </p>\n        <Button onClick={this.reset} variant=\"danger\" block>\n          Reset\n        </Button>\n\n        {this.renderDevTools()}\n\n        {showPlanarDie && !planeswalkDisabled && (\n          <div\n            className=\"position-fixed\"\n            style={{ bottom: \"5px\", right: \"5px\" }}\n          >\n            <PlanarDie rollDone={face => console.log(`Rolled: ${face}`)} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderDevTools = () => {\n    const devTools = getSetting(\"devTools\");\n    if (devTools) {\n      return (\n        <div className=\"my-4\">\n          <h5 className=\"text-center noselect\">Dev Tools</h5>\n          <Button onClick={this.undo} variant=\"warning\" block>\n            Undo\n          </Button>\n          {this.renderDeck()}\n          <Button onClick={this.togglePlanarDie} variant=\"secondary\" block>\n            <span className=\"mr-2\">Planar Die</span>\n            <DoubleFaceIcon\n              enabled={this.state.showPlanarDie}\n              backdrop={true}\n            />\n          </Button>\n        </div>\n      );\n    }\n  };\n\n  togglePlanarDie = () => {\n    this.setState({ showPlanarDie: !this.state.showPlanarDie });\n  };\n\n  toggleDeck = () => {\n    this.setState({ showDeck: !this.state.showDeck });\n  };\n\n  toggleDeckImages = () => {\n    this.setState({ showDeckImages: !this.state.showDeckImages });\n  };\n\n  manipulateDeck = () => {\n    this.refreshDeck();\n  };\n\n  renderDeck = () => {\n    const { deck, showDeck, showDeckImages } = this.state;\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleDeck} variant=\"secondary\" block>\n          {showDeck ? \"Hide\" : \"Show\"} Deck\n        </Button>\n        <Fade in={showDeck}>\n          <div>\n            {showDeck && (\n              <>\n                <Button\n                  onClick={this.toggleDeckImages}\n                  variant=\"secondary\"\n                  block\n                >\n                  {showDeckImages ? \"Hide\" : \"Show\"} Full Card\n                </Button>\n                <ListGroup>\n                  {deck.map((p, i) => (\n                    <React.Fragment key={p.deck_card_id}>\n                      <Plane card={p} listDisplay={!showDeckImages} />\n                      <ListGroup.Item className=\"text-center justify-content-center d-flex\">\n                        <ButtonToolbar>\n                          <ButtonGroup>\n                            <Button\n                              variant=\"secondary\"\n                              disabled={i === 0}\n                              onClick={() =>\n                                this.manipulateDeck(\n                                  moveCard(\"planechase\", i, i - 1)\n                                )\n                              }\n                            >\n                              <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n                            </Button>\n                            <Button\n                              variant=\"secondary\"\n                              disabled={i === deck.length - 1}\n                              onClick={() =>\n                                this.manipulateDeck(\n                                  moveCard(\"planechase\", i, i + 1)\n                                )\n                              }\n                            >\n                              <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n                            </Button>\n                          </ButtonGroup>\n                          <ButtonGroup className=\"ml-2\">\n                            <Button\n                              variant=\"secondary\"\n                              disabled={i === 0}\n                              onClick={() =>\n                                this.manipulateDeck(\n                                  findAndPutOnTop(\"planechase\", p.deck_card_id)\n                                )\n                              }\n                            >\n                              <i className=\"ms ms-untap ms-2x ss-mythic ss-grad\" />\n                            </Button>\n                            <Button\n                              variant=\"secondary\"\n                              disabled={i === deck.length - 1}\n                              onClick={() =>\n                                this.manipulateDeck(\n                                  findAndPutOnBottom(\n                                    \"planechase\",\n                                    p.deck_card_id\n                                  )\n                                )\n                              }\n                            >\n                              <i className=\"ms ms-tap ms-2x ss-mythic ss-grad\" />\n                            </Button>\n                          </ButtonGroup>\n                          <ButtonGroup className=\"ml-2\">\n                            <Button\n                              variant=\"danger\"\n                              onClick={() =>\n                                this.manipulateDeck(\n                                  removeCards(\"planechase\", [p])\n                                )\n                              }\n                            >\n                              <i className=\"ss ss-x ss-10e ss-rare ss-grad ss-2x\" />\n                            </Button>\n                          </ButtonGroup>\n                        </ButtonToolbar>\n                      </ListGroup.Item>\n                    </React.Fragment>\n                  ))}\n                </ListGroup>\n              </>\n            )}\n          </div>\n        </Fade>\n      </div>\n    );\n  };\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  };\n\n  renderHistory = () => {\n    const { showHistory } = this.state;\n    const history = getHistory(\"planechase\");\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleHistory} variant=\"secondary\" block>\n          {showHistory ? \"Hide\" : \"Show\"} History\n        </Button>\n        <Fade in={showHistory}>\n          <div>\n            {showHistory && history && (\n              <ListGroup>\n                {history.reverse().map(p => (\n                  <Plane card={p} key={p.deck_card_id} listDisplay={true} />\n                ))}\n              </ListGroup>\n            )}\n          </div>\n        </Fade>\n      </div>\n    );\n  };\n\n  renderChaos(card) {\n    const hasChaos = hasCustomProperty(\"chaos-trigger\", card);\n    if (hasChaos) {\n      return (\n        <Button\n          onClick={() => this.triggerChaos(card)}\n          variant=\"info\"\n          size=\"lg\"\n          className=\"btn-translucent\"\n        >\n          <i className=\"ms ms-chaos ms-2x mx-2\" />\n          <span className=\"mx-2 d-none d-md-inline\">Trigger Chaos</span>\n        </Button>\n      );\n    }\n  }\n\n  renderTwoPlanes() {\n    const { currentCard, additionalCards } = this.state;\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      const revealedPlanes = additionalCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      // TODO chaos etc\n      return (\n        <div>\n          <Alert variant=\"info\" className=\"text-center mb-0\">\n            <i className=\"ms ms-planeswalker mx-2\" />\n            You Are On Both Planes\n            <i className=\"ms ms-planeswalker mx-2\" />\n          </Alert>\n          {revealedPlanes.map(c => (\n            <React.Fragment key={c.deck_card_id}>\n              <Plane card={c} renderActions=\"true\">\n                {this.renderChaos(c)}\n              </Plane>\n            </React.Fragment>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  selectPlane = card => {\n    const { revealedCards } = this.state;\n    removeCards(\"planechase\", revealedCards);\n    addCardsToTop(\"planechase\", [card]);\n    const restCards = revealedCards.filter(\n      c => c.deck_card_id !== card.deck_card_id\n    );\n    const shuffledCards = shuffle(restCards.slice());\n    addCardsToBottom(\"planechase\", shuffledCards);\n    setRevealedCards(\"planechase\", []);\n    this.setState({ planeswalkDisabled: false, revealedCards: [] });\n    this.planeswalk();\n  };\n\n  renderFivePlanes() {\n    const { currentCard, revealedCards } = this.state;\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      console.log(revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      console.log(revealedPlanes);\n      // TODO Countes, chaos etc\n      return (\n        <div>\n          <Alert variant=\"info\" className=\"text-center mb-0\">\n            <i className=\"ms ms-planeswalker mx-2\" />\n            Pick a Plane to Planeswalk To\n            <i className=\"ms ms-planeswalker mx-2\" />\n          </Alert>\n          {revealedPlanes.map(c => (\n            <div key={c.deck_card_id}>\n              <Plane card={c}>\n                <Button\n                  onClick={() => this.selectPlane(c)}\n                  variant=\"primary\"\n                  className=\"btn-translucent\"\n                  size=\"lg\"\n                >\n                  <i className=\"ms ms-planeswalker mx-2\" />\n                  <span className=\"mx-2\">Planeswalk</span>\n                </Button>\n              </Plane>\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  _tripleChaosModalClose = () => {\n    setRevealedCards(\"planechase\", []);\n    this.setState({\n      tripleChaosModalOpen: false,\n      revealedCards: []\n    });\n  };\n\n  _tripleChaosModalToggle = () => {\n    if (this.state.tripleChaosModalOpen) {\n      this._tripleChaosModalClose();\n    }\n  };\n\n  renderTripleChaosModal() {\n    const { revealedCards, tripleChaosModalOpen } = this.state;\n    if (revealedCards && tripleChaosModalOpen) {\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      return (\n        <Modal\n          show={!!tripleChaosModalOpen}\n          onHide={this._tripleChaosModalToggle}\n          size=\"md\"\n          backdrop={true}\n          dialogClassName=\"bg-secondary\"\n        >\n          <Modal.Header className=\"flex-column text-center text-white noselect\">\n            <div className=\"modal-title h5 mx-auto\">\n              <i className=\"ms ms-chaos mr-1\" />\n              <i className=\"ms ms-chaos mr-1\" />\n              <i className=\"ms ms-chaos mr-1\" />\n              <span className=\"mx-1\">Triple Chaos</span>\n              <i className=\"ms ms-chaos ml-1\" />\n              <i className=\"ms ms-chaos ml-1\" />\n              <i className=\"ms ms-chaos ml-1\" />\n            </div>\n            <div className=\"mx-auto\">\n              <small className=\"text-center\">You Pick Order</small>\n            </div>\n          </Modal.Header>\n          <Modal.Body className=\"text-center\">\n            {revealedPlanes.map(c => (\n              <React.Fragment key={c.deck_card_id}>\n                <Plane card={c}>{this.renderChaos(c)}</Plane>\n              </React.Fragment>\n            ))}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"info\"\n              block\n              aria-label=\"Close\"\n              onClick={this._tripleChaosModalClose}\n            >\n              Done\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      );\n    }\n  }\n\n  _scryModalClose = () => {\n    setScryCards(\"planechase\", []);\n    this.setState({\n      scryModalOpen: false,\n      scryCards: []\n    });\n  };\n\n  _scryTop = () => {\n    const { scryCards } = this.state;\n    addCardsToTop(\"planechase\", scryCards);\n    console.log(\"Scry Top\", scryCards);\n    this.refreshDeck();\n    setScryCards(\"planechase\", []);\n    this.setState({ scryCards: [], scryModalOpen: false });\n  };\n\n  _scryBottom = () => {\n    const { scryCards } = this.state;\n    addCardsToBottom(\"planechase\", scryCards);\n    console.log(\"Scry Bottom\", scryCards);\n    this.refreshDeck();\n    setScryCards(\"planechase\", []);\n    this.setState({ scryCards: [], scryModalOpen: false });\n  };\n\n  renderScryModal = () => {\n    const { scryCards, scryModalOpen } = this.state;\n    if (scryCards && scryModalOpen) {\n      return (\n        <Modal\n          show={!!scryModalOpen}\n          size=\"md\"\n          dialogClassName=\"bg-secondary\"\n          variant=\"secondary\"\n          backdrop=\"static\"\n        >\n          <Modal.Header className=\"justify-content-center text-white noselect\">\n            <Modal.Title>\n              <i className=\"ms ms-chaos mx-4\" />\n              Scry Card\n              <i className=\"ms ms-chaos mx-4\" />\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Button variant=\"info\" block onClick={this._scryTop}>\n              Top\n            </Button>\n            {scryCards.map(c => (\n              <Plane card={c} key={c.deck_card_id} />\n            ))}\n            <Button variant=\"info\" block onClick={this._scryBottom}>\n              Bottom\n            </Button>\n          </Modal.Body>\n        </Modal>\n      );\n    }\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport const ArchenemyHelmet = ({ schemes }) => {\n  return (\n    <Helmet title=\"Archenemy\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/archenemy-manifest.json\"}\n      />\n      {schemes &&\n        schemes.map(p => (\n          <link\n            rel=\"preload\"\n            href={p.image_uris[\"large\"]}\n            as=\"image\"\n            key={p.id}\n          />\n        ))}\n    </Helmet>\n  );\n};\n","export const getDeckList = () => {\n  return DECKS.map(s => s.name);\n};\n\nexport const getCardList = (deckname, schemes) => {\n  const deck = DECKS.find(s => s.name === deckname);\n  return deck.cards.map(c => {\n    const scheme = schemes.find(s => s.name === c[0]);\n    const clonedCard = JSON.parse(JSON.stringify(scheme));\n    clonedCard.count = c[1];\n    return clonedCard;\n  });\n};\nconst DECKS = [\n  {\n    name: \"Assemble the Doomsday Machine\",\n    cards: [\n      [\"All in Good Time\", 1],\n      [\"Behold the Power of Destruction\", 1],\n      [\"Embrace My Diabolical Vision\", 1],\n      [\"Feed the Machine\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"I Know All, I See All\", 2],\n      [\"Ignite the Cloneforge!\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"The Iron Guardian Stirs\", 2],\n      [\"My Genius Knows No Bounds\", 1],\n      [\"Nothing Can Stop Me Now\", 1],\n      [\"The Pieces Are Coming Together\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Scorch the World with Dragonfire\",\n    cards: [\n      [\"All Shall Smolder in My Wake\", 2],\n      [\"Approach My Molten Realm\", 1],\n      [\"The Fate of the Flammable\", 1],\n      [\"I Bask in Your Silent Awe\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"Know Naught but Fire\", 1],\n      [\"Look Skyward and Despair\", 2],\n      [\"My Crushing Masterstroke\", 1],\n      [\"My Wish Is Your Command\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Tooth, Claw, and Tail\", 1],\n      [\"Which of You Burns Brightest?\", 2],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Trample Civilization Underfoot\",\n    cards: [\n      [\"Every Last Vestige Shall Rot\", 2],\n      [\"Evil Comes to Fruition\", 1],\n      [\"I Call on the Ancient Magics\", 1],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Into the Earthen Maw\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"May Civilization Collapse\", 1],\n      [\"Nature Demands an Offering\", 2],\n      [\"Nature Shields Its Own\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Roots of All Evil\", 2],\n      [\"The Very Soil Shall Shake\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1],\n      [\"Your Will Is Not Your Own\", 2]\n    ]\n  },\n  {\n    name: \"Bring About the Undead Apocalypse\",\n    cards: [\n      [\"Choose Your Champion\", 2],\n      [\"Dance, Pathetic Marionette\", 1],\n      [\"The Dead Shall Serve\", 2],\n      [\"Every Hope Shall Vanish\", 2],\n      [\"I Delight in Your Convulsions\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"Mortal Flesh Is Weak\", 1],\n      [\"My Undead Horde Awakens\", 1],\n      [\"Only Blood Ends Your Nightmares\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Rotted Ones, Lay Siege\", 2],\n      [\"Surrender Your Thoughts\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Archenemy Nicol Bolas\",\n    cards: [\n      [\"Because I Have Willed It\", 1],\n      [\"Behold My Grandeur\", 1],\n      [\"Bow to My Command\", 1],\n      [\"Choose Your Demise\", 1],\n      [\"Delight in the Hunt\", 1],\n      [\"Every Dream a Nightmare\", 1],\n      [\"For Each of You, a Gift\", 1],\n      [\"Know Evil\", 1],\n      [\"Make Yourself Useful\", 1],\n      [\"The Mighty Will Fall\", 1],\n      [\"My Forces Are Innumerable\", 1],\n      [\"My Laughter Echoes\", 1],\n      [\"No One Will Hear Your Cries\", 1],\n      [\"Pay Tribute to Me\", 1],\n      [\"Power Without Equal\", 1],\n      [\"A Reckoning Approaches\", 1],\n      [\"There Is No Refuge\", 1],\n      [\"This World Belongs to Me\", 1],\n      [\"What's Yours Is Now Mine\", 1],\n      [\"When Will You Learn?\", 1]\n    ]\n  }\n];\n","import React, { Component } from \"react\";\nimport { Card, ListGroup, Modal } from \"react-bootstrap\";\nimport back from \"../../images/archenemy-back.jpg\";\nimport { Counter } from \"./Counter\";\nimport \"./planes.scss\";\n\nimport { hasCustomProperty } from \"../../mtg/card.js\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Scheme extends Component {\n  state = {\n    modalOpen: false\n  };\n\n  toggleModal = () => {\n    console.log(\"Toggle Modal\");\n    this.setState({ modalOpen: !this.state.modalOpen });\n  };\n\n  render() {\n    const { listDisplay, card, children } = this.props;\n    if (listDisplay) {\n      return (\n        <>\n          <ListGroup.Item variant=\"dark\" onClick={this.toggleModal}>\n            {card.name}\n          </ListGroup.Item>\n          <Modal\n            show={this.state.modalOpen}\n            onHide={this.toggleModal}\n            size=\"md\"\n            backdrop={true}\n            dialogClassName=\"modal-content-no-border\"\n          >\n            <Modal.Body className=\"p-0\" centered=\"true\">\n              <Scheme card={card} />\n              {children}\n            </Modal.Body>\n          </Modal>\n        </>\n      );\n    } else {\n      return (\n        <Card bg=\"black\" text=\"light\" className=\"mtg-scheme-card\">\n          {this.renderImage()}\n          {this.renderCounter()}\n          {this.renderChildren()}\n          {this.renderBody()}\n          {this.renderActions()}\n        </Card>\n      );\n    }\n  }\n\n  renderBody() {\n    const text = this.renderText();\n    const hasBody = text;\n\n    return hasBody && <Card.Body>{text}</Card.Body>;\n  }\n\n  renderCounter() {\n    const { card, renderActions } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    const hasCounters = hasCustomProperty(\"counter\", card);\n    if (renderActions && hasCounters) {\n      if (displayImages) {\n        return (\n          <Card.ImgOverlay className=\"text-center scheme-overlay counter-overlay\">\n            <Card.Title className=\"text-center pt-5 mt-sm-5\">\n              <Counter card={card} />\n            </Card.Title>\n          </Card.ImgOverlay>\n        );\n      } else {\n        return (\n          <Card.Body className=\"text-center pb-0\">\n            <Counter card={card} />\n          </Card.Body>\n        );\n      }\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    if (children) {\n      if (displayImages) {\n        return (\n          <Card.ImgOverlay className=\"text-center scheme-overlay child-overlay\">\n            <Card.Title className=\"text-center pt-5 mt-sm-5\">\n              {children}\n            </Card.Title>\n          </Card.ImgOverlay>\n        );\n      } else {\n        return <Card.Body className=\"text-center pb-0\">{children}</Card.Body>;\n      }\n    }\n  }\n\n  renderActions() {\n    const { card } = this.props;\n    const displayGatherer = getSetting(\"displayGatherer\");\n    if (displayGatherer && card) {\n      return (\n        <Card.Footer>\n          <Card.Link\n            href={card.related_uris[\"gatherer\"]}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatherer\n          </Card.Link>\n        </Card.Footer>\n      );\n    }\n  }\n\n  renderText() {\n    const { card } = this.props;\n    const displayText = getSetting(\"displayText\");\n    if (displayText) {\n      if (card) {\n        return (\n          <>\n            <Card.Title>\n              <h5>{card.name}</h5>\n            </Card.Title>\n            <Card.Subtitle>{card.type_line}</Card.Subtitle>\n            <Card.Text dangerouslySetInnerHTML={card.oracle_html} />\n          </>\n        );\n      } else {\n        return <Card.Title>None</Card.Title>;\n      }\n    }\n  }\n\n  renderImage() {\n    const displayImages = getSetting(\"displayImages\");\n    if (displayImages) {\n      return (\n        <Card.Img\n          variant=\"top\"\n          width=\"100%\"\n          src={this.imageURI()}\n          className=\"mtg-card mtg-card-scheme\"\n        />\n      );\n    }\n  }\n\n  imageURI() {\n    const { card } = this.props;\n    if (card) {\n      return card.image_uris[\"large\"];\n    } else {\n      return back;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Accordion,\n  Alert,\n  Badge,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  Fade,\n  ListGroup,\n  Jumbotron,\n  Container\n} from \"react-bootstrap\";\nimport store from \"store\";\n\nimport { ArchenemyHelmet } from \"./Helmet\";\nimport { getDeckList, getCardList } from \"../../mtg/prebuilt-decks\";\nimport { getAllArchenemyCards } from \"../../util/api.js\";\nimport { Scheme } from \"../../components/magic/Scheme\";\nimport { Loading } from \"../../components/Loading\";\nimport { getSetting } from \"../../util/settings.js\";\n\nimport {\n  getCurrentDeck,\n  getOrCreateCurrentDeck,\n  storeCurrentDeck,\n  drawCard,\n  undoDraw,\n  removeCards,\n  getHistory,\n  findAndPutOnBottom,\n  findAndPutOnTop,\n  moveCard\n} from \"../../mtg/deck.js\";\nimport {\n  getCurrentCard,\n  setCurrentCard,\n  hasCustomProperty,\n  setAdditionalCards,\n  getAdditionalCards\n} from \"../../mtg/card.js\";\n\nexport class Archenemy extends Component {\n  state = {\n    loading: true,\n    deck: null,\n    currentCard: null,\n    ongoingSchemes: [],\n    schemes: [],\n    showHistory: false,\n    showDeck: false,\n    showDeckImages: false,\n    abandonedOngoing: false,\n    deckSelection: true,\n    customDeck: null\n  };\n\n  componentDidMount = async () => {\n    const schemes = await getAllArchenemyCards();\n    const deck = getCurrentDeck(\"archenemy\");\n    // TODO switch to selecting deck\n    // const deck = getCurrentDeck(\"archenemy\");\n    const currentCard = getCurrentCard(\"archenemy\");\n    const ongoingSchemes = getAdditionalCards(\"archenemy\") || [];\n    const abandonedOngoing = !!store.get(\"archenemy-abandonedOngoing\");\n    const customDeck = JSON.parse(JSON.stringify(schemes));\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({\n      currentCard,\n      deck,\n      loading: false,\n      ongoingSchemes,\n      schemes,\n      abandonedOngoing,\n      deckSelection: !deck,\n      customDeck\n    });\n  };\n\n  refreshDeck = () => {\n    const deck = getCurrentDeck(\"archenemy\");\n    this.setState({ deck });\n  };\n\n  scheme = () => {\n    const { currentCard, ongoingSchemes } = this.state;\n    if (currentCard) {\n      if (currentCard.type_line === \"Ongoing Scheme\") {\n        ongoingSchemes.push(currentCard);\n      }\n    }\n    const newCard = drawCard(\"archenemy\");\n    setCurrentCard(\"archenemy\", newCard);\n    setAdditionalCards(\"archenemy\", ongoingSchemes);\n    this.refreshDeck();\n    this.setState({\n      currentCard: newCard,\n      ongoingSchemes,\n      abandonedOngoing: store.set(\"archenemy-abandonedOngoing\", false)\n    });\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    // TODO reset to deck selection\n    const schemes = await getAllArchenemyCards();\n    const deck = null;\n    storeCurrentDeck(\"archenemy\", deck);\n    const currentCard = setCurrentCard(\"archenemy\", null);\n    const ongoingSchemes = setAdditionalCards(\"archenemy\", []);\n    const abandonedOngoing = store.set(\"archenemy-abandonedOngoing\", false);\n    const customDeck = JSON.parse(JSON.stringify(schemes));\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({\n      schemes,\n      loading: false,\n      deck,\n      currentCard,\n      ongoingSchemes,\n      abandonedOngoing,\n      deckSelection: true,\n      customDeck\n    });\n  };\n\n  undo = async () => {\n    const currentCard = undoDraw(\"archenemy\");\n    this.refreshDeck();\n    this.setState({ currentCard });\n  };\n  // TODO Cards with same id\n  render() {\n    const { loading, schemes, deckSelection } = this.state;\n\n    return (\n      <div className=\"archenemy\">\n        <ArchenemyHelmet schemes={schemes} />\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : deckSelection ? (\n          this.renderDeckSelect()\n        ) : (\n          this.renderGamePlay()\n        )}\n        {this.renderDevTools()}\n      </div>\n    );\n  }\n\n  renderGamePlay() {\n    const { loading, deck, currentCard, abandonedOngoing } = this.state;\n\n    return (\n      <>\n        <div className=\"fixed-top mt-1 ml-1 w-25 text-left\">\n          <Button\n            onClick={this.scheme}\n            className=\"mb-2\"\n            variant=\"success\"\n            disabled={loading}\n            block\n          >\n            <i className=\"ss ss-arc ss-3x mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Scheme</span>\n          </Button>\n        </div>\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : (\n          <div className=\"pt-2 mb-2 d-flex justify-content-center\">\n            {abandonedOngoing ? (\n              <Jumbotron className=\"bg-danger text-center\" fluid>\n                <Container fluid>\n                  <h1>Current Scheme Has Been Foiled!</h1>\n                </Container>\n              </Jumbotron>\n            ) : currentCard ? (\n              <Fade key={currentCard.deck_card_id} timeout={100}>\n                <Scheme card={currentCard} renderActions=\"true\">\n                  {this.renderAbandon(currentCard)}\n                </Scheme>\n              </Fade>\n            ) : (\n              <Scheme />\n            )}\n          </div>\n        )}\n\n        {this.renderOngoingSchemes()}\n\n        {this.renderHistory()}\n        <p className=\"text-center my-3 noselect\">\n          There are {deck ? deck.length : 0} cards remaining.\n        </p>\n        <Button onClick={this.reset} variant=\"danger\" block>\n          Reset\n        </Button>\n      </>\n    );\n  }\n\n  renderDeckSelect() {\n    const { schemes } = this.state;\n    const deckName = \"All Schemes\";\n    return (\n      <>\n        <Card className=\"noselect\">\n          <Card.Body>\n            {this.deckCardTitle(deckName)}\n            <Button\n              block\n              variant=\"success\"\n              onClick={() => this.selectDeck(\"All\", schemes)}\n            >\n              Use All\n            </Button>\n          </Card.Body>\n        </Card>\n        {this.renderPrebuilts()}\n        {this.renderBuildCustomDeck()}\n      </>\n    );\n  }\n\n  renderOngoingSchemes() {\n    const { ongoingSchemes } = this.state;\n    if (ongoingSchemes && ongoingSchemes.length > 0) {\n      return (\n        <>\n          <Alert variant=\"info\" className=\"text-center\">\n            <h5>Ongoing Schemes</h5>\n          </Alert>\n          <div className=\"d-flex justify-content-center flex-wrap \">\n            {ongoingSchemes.map(c => (\n              <React.Fragment key={c.deck_card_id}>\n                <Scheme card={c} renderActions=\"true\">\n                  {this.renderAbandon(c)}\n                </Scheme>\n              </React.Fragment>\n            ))}\n          </div>\n        </>\n      );\n    }\n  }\n\n  renderDevTools = () => {\n    const devTools = getSetting(\"devTools\");\n    if (devTools) {\n      return (\n        <div className=\"my-4\">\n          <h5 className=\"text-center noselect\">Dev Tools</h5>\n          <Button onClick={this.undo} variant=\"warning\" block>\n            Undo\n          </Button>\n          {this.renderDeck()}\n        </div>\n      );\n    }\n  };\n\n  abandonScheme = card => {\n    const { ongoingSchemes, currentCard } = this.state;\n    if (currentCard.deck_card_id === card.deck_card_id) {\n      console.log(\"Abandon Current Scheme\", card);\n      setCurrentCard(\"archenemy\", null);\n      const abandonedOngoing = store.set(\"archenemy-abandonedOngoing\", true);\n      this.setState({ currentCard: null, abandonedOngoing });\n    } else {\n      console.log(\"Abandon Scheme\", card);\n      let newOngoing = ongoingSchemes.filter(\n        s => s.deck_card_id !== card.deck_card_id\n      );\n      setAdditionalCards(\"archenemy\", newOngoing);\n      this.setState({ ongoingSchemes: newOngoing });\n    }\n  };\n\n  renderAbandon(card) {\n    const isOngoing = card.type_line === \"Ongoing Scheme\";\n    if (isOngoing && !hasCustomProperty(\"unabandonable\", card)) {\n      return (\n        <Button\n          onClick={() => this.abandonScheme(card)}\n          variant=\"danger\"\n          size=\"lg\"\n          className=\"btn-translucent\"\n        >\n          <h2 className=\"mb-0\">\n            <i className=\"ss ss-bok ss-2x ss-grad ss-rare mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Abandon Scheme</span>\n          </h2>\n        </Button>\n      );\n    }\n  }\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  };\n\n  renderHistory = () => {\n    const { showHistory } = this.state;\n    const history = getHistory(\"archenemy\");\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleHistory} block variant=\"secondary\">\n          {showHistory ? \"Hide\" : \"Show\"} History\n        </Button>\n        <Fade in={showHistory}>\n          <div>\n            {showHistory && history && (\n              <ListGroup>\n                {history.reverse().map(p => (\n                  <Scheme card={p} key={p.deck_card_id} listDisplay={true} />\n                ))}\n              </ListGroup>\n            )}\n          </div>\n        </Fade>\n      </div>\n    );\n  };\n\n  selectDeck(name, cards) {\n    console.log(`Selected ${name}`, cards);\n\n    const newCards = name === \"All\" ? cards : [];\n    cards.forEach(c => {\n      for (let i = 0; i < c.count; i++) {\n        newCards.push(c);\n      }\n    });\n\n    const deck = getOrCreateCurrentDeck(\"archenemy\", newCards, true);\n    this.setState({\n      deck,\n      deckSelection: false\n    });\n  }\n\n  incrementCount(card) {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => {\n      if (c.id === card.id) {\n        c.count += 1;\n        c.count = Math.min(c.count, 2);\n      }\n    });\n    this.setState({ customDeck });\n  }\n\n  decrementCount(card) {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => {\n      if (c.id === card.id) {\n        c.count -= 1;\n        c.count = Math.max(c.count, 0);\n      }\n    });\n    this.setState({ customDeck });\n  }\n\n  customDeckSize() {\n    const { customDeck } = this.state;\n    const reducer = (a, b) => a + b;\n    return customDeck.map(c => c.count).reduce(reducer, 0);\n  }\n\n  resetCustomDeck = () => {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({ customDeck });\n  };\n\n  renderBuildCustomDeck() {\n    const { customDeck } = this.state;\n    const deckName = \"Custom Deck\";\n\n    const cardListItems = customDeck.map(card => (\n      <ListGroup.Item key={card.id} variant=\"dark\" className=\"noselect\">\n        <Scheme card={card} />\n        <div className=\"text-center\">\n          <h1>\n            <Badge pill variant={card.count > 0 ? \"success\" : \"dark\"}>\n              x{card.count}\n            </Badge>\n          </h1>\n          <ButtonGroup>\n            <Button\n              disabled={card.count <= 0}\n              onClick={() => this.decrementCount(card)}\n              variant=\"secondary\"\n            >\n              <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n            </Button>\n            <Button\n              disabled={card.count >= 2}\n              onClick={() => this.incrementCount(card)}\n              variant=\"secondary\"\n            >\n              <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n            </Button>\n          </ButtonGroup>\n        </div>\n      </ListGroup.Item>\n    ));\n\n    return (\n      <Accordion>\n        <Card className=\"noselect\">\n          <Card.Body>\n            {this.deckCardTitle(deckName)}\n            <Accordion.Toggle\n              as={Button}\n              block\n              eventKey=\"custom-deck-toggle\"\n              variant=\"secondary\"\n            >\n              Build Custom\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"custom-deck-toggle\">\n              <>\n                <div className=\"fixed-top mt-1 ml-1 text-left\">\n                  <Alert variant=\"info\" className=\"clearfix\">\n                    <h4 className=\"float-left\">\n                      Custom Deck Size: {this.customDeckSize()}\n                    </h4>\n                    <ButtonGroup className=\"float-right\">\n                      <Button variant=\"danger\" onClick={this.resetCustomDeck}>\n                        Reset\n                      </Button>\n                      <Button\n                        variant=\"success\"\n                        onClick={() => this.selectDeck(\"Custom\", customDeck)}\n                      >\n                        Use Deck\n                      </Button>\n                    </ButtonGroup>\n                  </Alert>\n                </div>\n\n                <ListGroup>{cardListItems}</ListGroup>\n              </>\n            </Accordion.Collapse>\n            <Button\n              block\n              variant=\"success\"\n              onClick={() => this.selectDeck(\"Custom\", customDeck)}\n            >\n              Use Custom Deck\n            </Button>\n          </Card.Body>\n        </Card>\n      </Accordion>\n    );\n  }\n\n  deckIcon(name, type = \"ss-mythic ss-grad\") {\n    switch (name) {\n      case \"All Schemes\":\n        return <i className={`ss ${type} ss-lea`}></i>;\n      case \"Custom Deck\":\n        return <i className={`ss ${type} ss-chr`}></i>;\n      case \"Assemble the Doomsday Machine\":\n        return <i className={`ss ${type} ss-usg`}></i>;\n      case \"Scorch the World with Dragonfire\":\n        return <i className={`ss ${type} ss-scg`}></i>;\n      case \"Trample Civilization Underfoot\":\n        return <i className={`ss ${type} ss-c20`}></i>;\n      case \"Bring About the Undead Apocalypse\":\n        return <i className={`ss ${type} ss-pd3`}></i>;\n      case \"Archenemy Nicol Bolas\":\n        return <i className={`ss ${type} ss-hou`}></i>;\n      default:\n        return null;\n    }\n  }\n\n  renderPrebuilts() {\n    const { schemes } = this.state;\n    const prebuilts = getDeckList();\n    const prebuiltItems = prebuilts.map((prebuilt, i) => {\n      const cardList = getCardList(prebuilt, schemes);\n      const cardListItems = cardList.map((card, i) => (\n        <ListGroup.Item key={i} variant=\"dark\">\n          <Scheme card={card} />\n          <h1 className=\"text-center\">\n            <Badge pill variant={card.count > 0 ? \"success\" : \"dark\"}>\n              x{card.count}\n            </Badge>\n          </h1>\n        </ListGroup.Item>\n      ));\n      return (\n        <Accordion key={i}>\n          <Card>\n            <Card.Body>\n              {this.deckCardTitle(prebuilt)}\n              <Accordion.Toggle\n                as={Button}\n                block\n                eventKey={`prebuilt-${i}`}\n                variant=\"secondary\"\n              >\n                Decklist\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey={`prebuilt-${i}`}>\n                <ListGroup>{cardListItems}</ListGroup>\n              </Accordion.Collapse>\n              <Button\n                block\n                variant=\"success\"\n                onClick={() => this.selectDeck(prebuilt, cardList)}\n              >\n                Use Deck\n              </Button>\n            </Card.Body>\n          </Card>\n        </Accordion>\n      );\n    });\n\n    return <>{prebuiltItems}</>;\n  }\n\n  deckCardTitle = name => (\n    <Card.Title className=\"d-flex\">\n      <div className=\"h3 text-center align-self-center\">\n        {this.deckIcon(name)}\n      </div>\n      <div className=\"flex-grow-1\">\n        <h3 className=\"text-center\">{name}</h3>\n      </div>\n      <div className=\"h3 text-center align-self-center\">\n        {this.deckIcon(name)}\n      </div>\n    </Card.Title>\n  );\n\n  toggleDeck = () => {\n    this.setState({ showDeck: !this.state.showDeck });\n  };\n\n  toggleDeckImages = () => {\n    this.setState({ showDeckImages: !this.state.showDeckImages });\n  };\n\n  manipulateDeck = () => {\n    this.refreshDeck();\n  };\n\n  renderDeck = () => {\n    const { deck, showDeck, showDeckImages } = this.state;\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleDeck} block variant=\"secondary\">\n          {showDeck ? \"Hide\" : \"Show\"} Deck\n        </Button>\n        <Fade in={showDeck}>\n          <div>\n            {showDeck && deck && (\n              <>\n                <Button\n                  onClick={this.toggleDeckImages}\n                  block\n                  variant=\"secondary\"\n                >\n                  {showDeckImages ? \"Hide\" : \"Show\"} Full Card\n                </Button>\n                <ListGroup>\n                  {deck.map((p, i) => (\n                    <React.Fragment key={p.deck_card_id}>\n                      <Scheme card={p} listDisplay={!showDeckImages} />\n                      <ListGroup.Item className=\"text-center justify-content-center d-flex\">\n                        <ButtonToolbar>\n                          <ButtonGroup>\n                            <Button\n                              variant=\"secondary\"\n                              disabled={i === 0}\n                              onClick={() =>\n                                this.manipulateDeck(\n                                  moveCard(\"archenemy\", i, i - 1)\n                                )\n                              }\n                            >\n                              <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n                            </Button>\n                            <Button\n                              variant=\"secondary\"\n                              disabled={i === deck.length - 1}\n                              onClick={() =>\n                                this.manipulateDeck(\n                                  moveCard(\"archenemy\", i, i + 1)\n                                )\n                              }\n                            >\n                              <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n                            </Button>\n                          </ButtonGroup>\n                          <ButtonGroup className=\"ml-2\">\n                            <Button\n                              variant=\"secondary\"\n                              disabled={i === 0}\n                              onClick={() =>\n                                this.manipulateDeck(\n                                  findAndPutOnTop(\"archenemy\", p.deck_card_id)\n                                )\n                              }\n                            >\n                              <i className=\"ms ms-untap ms-2x ss-mythic ss-grad\" />\n                            </Button>\n                            <Button\n                              variant=\"secondary\"\n                              disabled={i === deck.length - 1}\n                              onClick={() =>\n                                this.manipulateDeck(\n                                  findAndPutOnBottom(\n                                    \"archenemy\",\n                                    p.deck_card_id\n                                  )\n                                )\n                              }\n                            >\n                              <i className=\"ms ms-tap ms-2x ss-mythic ss-grad\" />\n                            </Button>\n                          </ButtonGroup>\n                          <ButtonGroup className=\"ml-2\">\n                            <Button\n                              variant=\"danger\"\n                              onClick={() =>\n                                this.manipulateDeck(\n                                  removeCards(\"archenemy\", [p])\n                                )\n                              }\n                            >\n                              <i className=\"ss ss-x ss-10e ss-rare ss-grad ss-2x\" />\n                            </Button>\n                          </ButtonGroup>\n                        </ButtonToolbar>\n                      </ListGroup.Item>\n                    </React.Fragment>\n                  ))}\n                </ListGroup>\n              </>\n            )}\n          </div>\n        </Fade>\n      </div>\n    );\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport const SYBHelmet = () => {\n  return (\n    <Helmet title=\"SYB\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/syb-manifest.json\"}\n      />\n    </Helmet>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Button, ButtonGroup, Spinner } from \"react-bootstrap\";\nimport Dialog from \"react-bootstrap-dialog\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport debounce from \"lodash/debounce\";\nimport store from \"store\";\n\nimport { getSetting } from \"../../util/settings.js\";\nimport { shuffle } from \"../../mtg/deck.js\";\n\nimport { DoubleFaceIcon } from \"../../components/magic/DoubleFaceIcon\";\n\nimport { SYBHelmet } from \"./Helmet\";\n\nconst circleLayout = { name: \"circle\", nodeDimensionsIncludeLabels: true };\nconst gridLayout = { name: \"grid\", nodeDimensionsIncludeLabels: true, rows: 2 };\n\nexport class SYB extends Component {\n  state = {\n    playerCount: 4,\n    targets: null,\n    loadingDirection: false,\n    cySet: false,\n    labels: { 0: \"J\" },\n    showTurnEdges: true\n  };\n\n  cy = null;\n  dialog = null;\n\n  componentDidMount = () => {\n    const playerCount = store.get(\"syb-playerCount\") || 4;\n    const targets = store.get(\"syb-targets\") || null;\n    const tableShape = store.get(\"syb-tableShape\") || \"circle\";\n    const labels = store.get(\"syb-labels\") || { 0: \"J\" };\n    this.setState({\n      playerCount,\n      targets,\n      tableShape,\n      labels\n    });\n  };\n\n  generateNodes() {\n    const { playerCount, labels } = this.state;\n    const players = Array.from(Array(playerCount).keys());\n    return players.map(p => {\n      const label = labels[p] || p;\n      return { data: { id: `player-${p}`, label, type: \"triangle-tee\" } };\n    });\n  }\n\n  generateEdges() {\n    const { targets, showTurnEdges } = this.state;\n\n    return !targets\n      ? []\n      : targets\n          .map((player, i) => {\n            const targetIndex = i + 1 >= targets.length ? 0 : i + 1;\n            const target = targets[targetIndex];\n            // const playerContent = this.renderPlayer(player, target, playerCount);\n            return {\n              data: {\n                source: `player-${player}`,\n                target: `player-${target}`,\n                label: `Edge from ${player} to ${target}`\n              },\n              classes: \"screw\"\n            };\n          })\n          .concat(\n            showTurnEdges\n              ? targets.map((_, i) => {\n                  const target = i + 1 >= targets.length ? 0 : i + 1;\n                  return {\n                    data: {\n                      source: `player-${i}`,\n                      target: `player-${target}`,\n                      label: `Turn from ${i} to ${target}`\n                    },\n                    classes: \"turn\"\n                  };\n                })\n              : []\n          );\n  }\n\n  regenerateOrder(c) {\n    const { playerCount } = this.state;\n    const players = Array.from(Array(c || playerCount).keys());\n    const targets = store.set(\"syb-targets\", shuffle(players));\n    this.setState({ targets });\n  }\n\n  handleCy(cy) {\n    const layout = this.isSquare() ? gridLayout : circleLayout;\n    const SELECT_THRESHOLD = 100;\n\n    // Refresh Layout if needed\n    const refreshLayout = debounce(() => {\n      cy.layout(layout).run();\n    }, SELECT_THRESHOLD);\n\n    const nodeClick = debounce(e => {\n      const clickedNode = e.target;\n      this.setLabel(clickedNode.id().split(\"-\")[1]);\n    }, SELECT_THRESHOLD);\n\n    if (!this.state.cySet) {\n      cy.on(\"add remove\", () => {\n        refreshLayout();\n      });\n\n      cy.nodes().on(\"tap click\", nodeClick);\n      this.setState({ cySet: true });\n    }\n    this.cy = cy;\n  }\n\n  setLabel(number) {\n    console.log(\"Setting label\", number);\n    this.dialog.show({\n      title: \"Who is this?\",\n      bsSize: \"sm\",\n      actions: [\n        Dialog.CancelAction(),\n        Dialog.OKAction(a => {\n          const { labels } = this.state;\n          labels[number] = a.value;\n          store.set(\"syb-labels\", labels);\n          this.setState({ labels });\n        })\n      ],\n      prompt: Dialog.TextPrompt({ initialValue: number })\n    });\n  }\n\n  renderCyto() {\n    const layout = this.isSquare() ? gridLayout : circleLayout;\n    const elements = {\n      nodes: this.generateNodes(),\n      edges: this.generateEdges()\n    };\n    const stylesheet = [\n      {\n        selector: \"node\",\n        style: {\n          padding: \"50%\",\n          width: \"50%\",\n          height: \"50%\",\n          \"background-color\": \"#17a2b8\",\n          \"text-valign\": \"center\",\n          \"text-halign\": \"center\",\n          content: \"data(label)\"\n        }\n      },\n      {\n        selector: \"node[label]\",\n        style: {\n          label: \"data(label)\",\n          \"font-size\": \"2em\",\n          color: \"white\"\n        }\n      },\n      {\n        selector: \".screw\",\n        style: {\n          width: \"5%\",\n          \"curve-style\": this.isSquare() ? \"unbundled-bezier\" : \"straight\",\n          \"target-arrow-shape\": \"triangle \",\n          \"arrow-scale\": 2.5,\n          \"target-arrow-color\": \"#FF4444\",\n          \"line-fill\": \"linear-gradient\",\n          \"line-gradient-stop-colors\": [\"#17a2b8\", \"#FF4444\"],\n          \"z-index\": 2\n        }\n      },\n      {\n        selector: \".turn\",\n        style: {\n          width: \"2%\",\n          \"curve-style\": \"unbundled-bezier\",\n          \"control-point-distances\": [-20, -25, -20],\n          \"control-point-weights\": [0.25, 0.5, 0.75],\n          \"target-arrow-shape\": \"vee \",\n          \"line-style\": \"dashed\",\n          \"arrow-scale\": 1.5,\n          \"target-arrow-color\": \"#707070\",\n          \"line-color\": \"#707070\",\n          opacity: 0.5,\n          \"z-index\": 1\n        }\n      }\n    ];\n\n    return (\n      <CytoscapeComponent\n        cy={cy => this.handleCy(cy)}\n        elements={CytoscapeComponent.normalizeElements(elements)}\n        style={{ width: \"100vw\", height: \"100vh\" }}\n        className={\"flex-grow\"}\n        stylesheet={stylesheet}\n        userPanningEnabled={false}\n        layout={layout}\n      />\n    );\n  }\n\n  removeListeners() {\n    this.cy.removeListener(\"add\");\n    this.cy.removeListener(\"remove\");\n    this.cy.nodes().removeListener(\"click\");\n    this.cy.nodes().removeListener(\"tap\");\n    this.setState({ cySet: false });\n  }\n\n  isSquare() {\n    const { tableShape } = this.state;\n    return false && tableShape === \"square\";\n  }\n\n  incrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\"syb-playerCount\", playerCount + 1);\n    this.regenerateOrder(newPlayerCount);\n    this.removeListeners();\n    this.setState({ playerCount: newPlayerCount });\n  }\n\n  decrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\n      \"syb-playerCount\",\n      Math.max(playerCount - 1, 1)\n    );\n    this.regenerateOrder(newPlayerCount);\n    this.removeListeners();\n    this.setState({ playerCount: newPlayerCount });\n  }\n\n  setTableShape(shape) {\n    const tableShape = store.set(\"syb-tableShape\", shape);\n    this.setState({ tableShape });\n  }\n\n  whichWay = () => {\n    const targets = store.set(\"syb-targets\", null);\n    this.setState({ loadingDirection: true, targets });\n\n    setTimeout(() => {\n      this.regenerateOrder();\n      this.setState({ loadingDirection: false });\n    }, 1500);\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    const playerCount = store.set(\"syb-playerCount\", 4);\n    const targets = store.set(\"syb-targets\", null);\n    const tableShape = store.set(\"syb-tableShape\", \"circle\");\n    const labels = store.set(\"syb-labels\", { 0: \"J\" });\n\n    this.removeListeners();\n    this.setState(\n      {\n        playerCount,\n        targets,\n        tableShape,\n        labels\n      },\n      () => this.regenerateOrder(playerCount)\n    );\n  };\n\n  render() {\n    const { playerCount, tableShape, loadingDirection } = this.state;\n    return (\n      <div className=\"syb\">\n        <SYBHelmet />\n        <div className=\"my-4\">\n          <div className=\"text-center\">\n            <h1>{playerCount} Players</h1>\n            <ButtonGroup>\n              <Button\n                disabled={playerCount <= 1}\n                onClick={() => this.decrementCount()}\n                variant=\"secondary\"\n              >\n                <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n              </Button>\n              <Button onClick={() => this.incrementCount()} variant=\"secondary\">\n                <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n              </Button>\n            </ButtonGroup>\n            {false && (\n              <ButtonGroup>\n                <Button\n                  active={tableShape === \"circle\"}\n                  onClick={() => this.setTableShape(\"circle\")}\n                  variant=\"secondary\"\n                >\n                  <i className=\"ss ss-portal ss-2x\" />\n                </Button>\n                <Button\n                  active={tableShape === \"square\"}\n                  onClick={() => this.setTableShape(\"square\")}\n                  variant=\"secondary\"\n                >\n                  <i className=\"ss ss-bfz ss-2x\" />\n                </Button>\n              </ButtonGroup>\n            )}\n          </div>\n        </div>\n        <div className=\"text-center my-2\">\n          <Button\n            variant=\"danger\"\n            onClick={this.whichWay}\n            block\n            disabled={loadingDirection}\n          >\n            {loadingDirection ? \"Calculating...\" : \"Which way are we screwing?\"}\n          </Button>\n        </div>\n        <div className=\"d-flex\">\n          {loadingDirection && (\n            <div\n              className=\"position-absolute w-75 text-center\"\n              style={{ top: \"45%\", left: \"0%\" }}\n            >\n              <Spinner\n                variant=\"danger\"\n                animation=\"grow\"\n                className=\"position-absolute\"\n                style={{ width: \"10rem\", height: \"10rem\" }}\n              />\n            </div>\n          )}\n          {this.renderCyto()}\n        </div>\n        <Button onClick={this.reset} variant=\"danger\" block>\n          Reset\n        </Button>\n\n        {this.renderDevTools()}\n\n        <Dialog\n          ref={component => {\n            this.dialog = component;\n          }}\n        />\n      </div>\n    );\n  }\n\n  toggleTurnEdges = () => {\n    this.setState({ showTurnEdges: !this.state.showTurnEdges });\n  };\n\n  renderDevTools = () => {\n    const devTools = getSetting(\"devTools\");\n    if (devTools) {\n      return (\n        <div className=\"my-4\">\n          <h5 className=\"text-center noselect\">Dev Tools</h5>\n          <Button onClick={this.toggleTurnEdges} block variant=\"secondary\">\n            <span className=\"mr-2\">Turn Edges</span>\n            <DoubleFaceIcon\n              enabled={this.state.showTurnEdges}\n              backdrop={true}\n            />\n          </Button>\n        </div>\n      );\n    }\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport const FormatsHelmet = () => {\n  return (\n    <Helmet title=\"Formats\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_180.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_180.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"192x192\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_192.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"512x512\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_512.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/formats-manifest.json\"}\n      />\n    </Helmet>\n  );\n};\n","export const TAGS = [\n  {\n    name: \"Chode Mode\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Deck Swaps\",\n    defaultEnabled: false\n  },\n  {\n    name: \"Planechase\",\n    defaultEnabled: true\n  },\n  {\n    name: \"EDH\",\n    defaultEnabled: true\n  },\n  {\n    name: \"2 Headed Giant\",\n    defaultEnabled: true\n  },\n  {\n    name: \"SYB\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Range 1\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Free for All\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Pentacle\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Secret Partners\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Archenemy\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Pentacle\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Emperor\",\n    defaultEnabled: true\n  }\n];\n\nconst canAny = p => true;\nconst canEven = p => p % 2 === 0;\nconst can2Hg = p => p > 2 && canEven(p);\nconst canFreeForAll = p => p > 2;\nconst canEmperor = p => p >= 6 && p % 3 === 0;\nconst canSecretPartner = p => p >= 6 && canEven(p);\nconst canRange1 = p => p > 4;\nconst canPentacle = p => p === 5;\n\nexport const FORMATS = [\n  {\n    id: 1,\n    name: \"Chode Mode\",\n    initial: 0.5,\n    tags: [\"Chode Mode\"],\n    players: canAny\n  },\n  {\n    id: 2,\n    name: \"Planechase \",\n    initial: 0.5,\n    tags: [\"Planechase\"],\n    players: canAny\n  },\n  {\n    id: 3,\n    name: \"Planechase EDH\",\n    initial: 0.5,\n    tags: [\"Planechase\", \"EDH\"],\n    players: canAny\n  },\n  {\n    id: 4,\n    name: \"EDH Free for All\",\n    initial: 0.5,\n    tags: [\"EDH\", \"Free for All\"],\n    players: canFreeForAll\n  },\n  {\n    id: 5,\n    name: \"EDH SYB\",\n    initial: 0.5,\n    tags: [\"EDH\", \"SYB\"],\n    showSwaps: true,\n    players: canAny\n  },\n  {\n    id: 6,\n    name: \"EDH SYB Deck Swaps\",\n    displayName: \"EDH SYB\",\n    initial: 0,\n    tags: [\"EDH\", \"SYB\", \"Deck Swaps\"],\n    showSwaps: true,\n    players: canAny\n  },\n  {\n    id: 7,\n    name: \"EDH Emperor\",\n    initial: 0.5,\n    tags: [\"EDH\", \"Emperor\"],\n    showSwaps: true,\n    players: canEmperor\n  },\n  {\n    id: 8,\n    name: \"EDH Emperor Deck Swaps\",\n    displayName: \"EDH Emperor\",\n    initial: 0,\n    tags: [\"EDH\", \"Emperor\", \"Deck Swaps\"],\n    showSwaps: true,\n    players: canEmperor\n  },\n  {\n    id: 9,\n    name: \"2 Headed Giant SYB\",\n    initial: 0.5,\n    tags: [\"2 Headed Giant\", \"SYB\"],\n    players: can2Hg\n  },\n  {\n    id: 10,\n    name: \"2 Headed Giant Free for All\",\n    initial: 0.5,\n    tags: [\"2 Headed Giant\", \"Free for All\"],\n    players: p => can2Hg(p) && canFreeForAll(p)\n  },\n  {\n    id: 11,\n    name: \"Emperor\",\n    initial: 0.5,\n    tags: [\"Emperor\"],\n    showSwaps: true,\n    players: canEmperor\n  },\n  {\n    id: 12,\n    name: \"Emperor Deck Swaps\",\n    displayName: \"Emperor\",\n    initial: 0,\n    tags: [\"Emperor\", \"Deck Swaps\"],\n    showSwaps: true,\n    players: canEmperor\n  },\n  {\n    id: 13,\n    name: \"Range 1\",\n    initial: 0.5,\n    tags: [\"Range 1\"],\n    players: canRange1\n  },\n  {\n    id: 14,\n    name: \"Free for All\",\n    initial: 0.5,\n    tags: [\"Free for All\"],\n    players: canFreeForAll\n  },\n  {\n    id: 15,\n    name: \"SYB\",\n    initial: 0.5,\n    tags: [\"SYB\"],\n    showSwaps: true,\n    players: canAny\n  },\n  {\n    id: 16,\n    name: \"SYB Deck Swaps\",\n    displayName: \"SYB\",\n    initial: 0.5,\n    tags: [\"SYB\", \"Deck Swaps\"],\n    showSwaps: true,\n    players: canAny\n  },\n  {\n    id: 17,\n    name: \"Secret Partners\",\n    initial: 0.5,\n    tags: [\"Secret Partners\"],\n    showSwaps: true,\n    players: canSecretPartner\n  },\n  {\n    id: 18,\n    name: \"Secret Partners Deck Swaps\",\n    displayName: \"Secret Partners\",\n    initial: 0.5,\n    tags: [\"Secret Partners\", \"Deck Swaps\"],\n    showSwaps: true,\n    players: canSecretPartner\n  },\n  {\n    id: 19,\n    name: \"EDH Secret Partners\",\n    initial: 0.5,\n    tags: [\"EDH\", \"Secret Partners\"],\n    showSwaps: true,\n    players: canSecretPartner\n  },\n  {\n    id: 20,\n    name: \"EDH Secret Partners Deck Swaps\",\n    displayName: \"EDH Secret Partners\",\n    initial: 0,\n    tags: [\"EDH\", \"Secret Partners\", \"Deck Swaps\"],\n    showSwaps: true,\n    players: canSecretPartner\n  },\n  {\n    id: 21,\n    name: \"EDH Pentacle\",\n    initial: 0.5,\n    tags: [\"EDH\", \"Pentacle\"],\n    showSwaps: true,\n    players: canPentacle\n  },\n  {\n    id: 22,\n    name: \"EDH Pentacle Deck Swaps\",\n    displayName: \"EDH Pentacle\",\n    initial: 0,\n    tags: [\"EDH\", \"Pentacle\", \"Deck Swaps\"],\n    players: canPentacle\n  },\n  {\n    id: 23,\n    name: \"Pentacle\",\n    initial: 0.5,\n    tags: [\"Pentacle\"],\n    showSwaps: true,\n    players: canPentacle\n  },\n  {\n    id: 24,\n    name: \"Pentacle Deck Swaps\",\n    displayName: \"Pentacle\",\n    initial: 0.5,\n    tags: [\"Pentacle\", \"Deck Swaps\"],\n    showSwaps: true,\n    players: canPentacle\n  },\n  {\n    id: 25,\n    name: \"Archenemy\",\n    initial: 0.5,\n    tags: [\"Archenemy\"],\n    players: p => p === 4\n  }\n];\n","import React, { Component } from \"react\";\nimport { Button, ButtonGroup, Spinner } from \"react-bootstrap\";\nimport store from \"store\";\nimport { FormatsHelmet } from \"./Helmet\";\nimport { TAGS, FORMATS } from \"./formats\";\n\nimport cloneDeep from \"lodash/cloneDeep\";\nimport flatMap from \"lodash/flatMap\";\nimport uniq from \"lodash/uniq\";\n\nimport \"rc-slider/assets/index.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\nimport Slider from \"rc-slider\";\nimport Tooltip from \"rc-tooltip\";\nconst Handle = Slider.Handle;\n\nconst MIN_PLAYERS = 2;\nconst MAX_PLAYERS = 9;\nconst DEFAULT_PLAYERS = 5;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nexport class Formats extends Component {\n  state = {\n    playerCount: DEFAULT_PLAYERS,\n    tags: null,\n    currentFormats: null,\n    activeFormat: null,\n    loadingFormat: false,\n    swapTriggered: false\n  };\n\n  componentDidMount = () => {\n    const playerCount =\n      store.get(\"formats-playerCount\") ||\n      store.set(\"formats-playerCount\", DEFAULT_PLAYERS);\n    const tags =\n      store.get(\"formats-tags\") || store.set(\"formats-tags\", this.createTags());\n    const currentFormats =\n      store.get(\"formats-current\") ||\n      store.set(\"formats-current\", this.createFormats());\n\n    this.setState({\n      playerCount,\n      tags,\n      currentFormats\n    });\n  };\n\n  reset = () => {\n    const playerCount = store.set(\"formats-playerCount\", DEFAULT_PLAYERS);\n    const tags = store.set(\"formats-tags\", this.createTags());\n    const currentFormats = store.set(\"formats-current\", this.createFormats());\n\n    this.setState({\n      playerCount,\n      tags,\n      currentFormats\n    });\n  };\n\n  pickFormat() {\n    console.log(\"Generate Format\");\n    this.setState({ loadingFormat: true, swapTriggered: false });\n    const formats = this.activeFormats();\n    const activeFormat = this.getRandomFormat(formats);\n    console.log(\"picked item\", activeFormat);\n    setTimeout(() => {\n      this.setState({ loadingFormat: false, activeFormat });\n    }, 1000);\n  }\n\n  rand = (min, max) => {\n    return Math.random() * (max - min) + min;\n  };\n\n  getRandomFormat = list => {\n    const totalWeight = list.reduce((result, cur) => {\n      return result + cur.weight;\n    }, 0);\n    const randomNum = this.rand(0, totalWeight);\n    let weightSum = 0;\n\n    return list.find(item => {\n      weightSum += item.weight;\n      return randomNum <= weightSum;\n    });\n  };\n\n  incrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\n      \"formats-playerCount\",\n      Math.min(playerCount + 1, MAX_PLAYERS)\n    );\n\n    this.setState({ playerCount: newPlayerCount, activeFormat: null });\n  }\n\n  decrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\n      \"formats-playerCount\",\n      Math.max(playerCount - 1, MIN_PLAYERS)\n    );\n\n    this.setState({ playerCount: newPlayerCount, activeFormat: null });\n  }\n\n  updateFormatValue = (format, value) => {\n    const { playerCount, currentFormats } = this.state;\n    currentFormats[playerCount].forEach(f => {\n      if (f.name === format.name) {\n        format.weight = value / 100;\n      }\n    });\n    const updatedCurrentFormats = store.set(\"formats-current\", currentFormats);\n    this.setState({ currentFormats: updatedCurrentFormats });\n  };\n\n  render() {\n    const {\n      playerCount,\n      activeFormat,\n      loadingFormat,\n      swapTriggered\n    } = this.state;\n    const showDeckswapButton =\n      !loadingFormat &&\n      !swapTriggered &&\n      activeFormat &&\n      activeFormat.showSwaps &&\n      this.enabledTags().includes(\"Deck Swaps\");\n    return (\n      <div className=\"formats\">\n        <FormatsHelmet />\n        <div className=\"my-4 noselect\">\n          <div className=\"text-center\">\n            <h1>{playerCount} Players</h1>\n            <ButtonGroup className=\"my-4\">\n              <Button\n                disabled={playerCount <= 1}\n                onClick={() => this.decrementCount()}\n                variant=\"secondary\"\n              >\n                <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n              </Button>\n              <Button onClick={() => this.incrementCount()} variant=\"secondary\">\n                <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n              </Button>\n            </ButtonGroup>\n            <div className=\"text-center mb-5\">\n              <Button\n                block\n                variant=\"danger\"\n                onClick={() => this.pickFormat()}\n                disabled={loadingFormat}\n              >\n                {loadingFormat ? \"Computing...\" : \"Which Format?\"}\n              </Button>\n              {loadingFormat ? (\n                <Spinner\n                  size=\"lg\"\n                  animation=\"border\"\n                  variant=\"primary\"\n                  className=\"mt-3 mb-2\"\n                >\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              ) : (\n                <h1 className=\"my-2\">{this.renderActiveFormatName()}</h1>\n              )}\n              {showDeckswapButton && (\n                <Button\n                  onClick={this.triggerSwap}\n                  block\n                  className={\"w-50 mx-auto\"}\n                  variant=\"success\"\n                >\n                  Deckswaps?\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n        <hr className=\"border-info\" />\n        <div className=\"mb-5\">{this.renderFormatToggles()}</div>\n        <div className=\"mb-5 noselect\">{this.renderActiveFormats()}</div>\n        <div className=\"my-3\">\n          <Button variant=\"danger\" onClick={this.reset} block>\n            Reset\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderActiveFormatName() {\n    const { activeFormat, swapTriggered } = this.state;\n\n    if (!activeFormat) {\n      return \"None\";\n    } else {\n      return swapTriggered\n        ? activeFormat.name\n        : activeFormat.displayName || activeFormat.name;\n    }\n  }\n\n  triggerSwap = () => {\n    this.setState({ swapTriggered: true });\n  };\n\n  createFormats() {\n    let formats = {};\n\n    for (let i = MIN_PLAYERS; i <= MAX_PLAYERS; i++) {\n      formats[i] = cloneDeep(FORMATS.filter(f => f.players && f.players(i)));\n      formats[i].forEach(f => (f.weight = f.initial));\n    }\n\n    return formats;\n  }\n\n  activeTags() {\n    const { currentFormats, playerCount } = this.state;\n    return currentFormats\n      ? uniq(\n          flatMap(currentFormats[playerCount], f => {\n            return f.tags;\n          })\n        ).sort()\n      : [];\n  }\n\n  createTags() {\n    return TAGS.map(t => {\n      return { name: t.name, enabled: t.defaultEnabled };\n    });\n  }\n\n  renderFormatToggles() {\n    const { tags } = this.state;\n    if (tags) {\n      const activeTags = this.activeTags();\n      const tagStates = tags.filter(t => activeTags.includes(t.name));\n\n      const values = tagStates.map((t, i) => {\n        return (\n          <div className=\"col-6 col-md-4 col-lg-3 mb-1\" key={i}>\n            <Button\n              size=\"sm\"\n              block\n              onClick={() => {\n                this.toggleTag(t);\n              }}\n              variant={t.enabled ? \"info\" : \"secondary\"}\n            >\n              <div className=\"float-left\">\n                {t.enabled ? (\n                  <i className=\"ms ms-dfc ms-dfc-day text-light\" />\n                ) : (\n                  <i className=\"ms ms-dfc ms-dfc-night text-dark\" />\n                )}\n              </div>\n              <div className=\"d-inline\">{t.name}</div>\n            </Button>\n          </div>\n        );\n      });\n\n      return <div className=\"row\">{values}</div>;\n    }\n  }\n\n  toggleTag = tag => {\n    const { tags } = this.state;\n    tags.forEach(t => {\n      if (t.name === tag.name) {\n        t.enabled = !t.enabled;\n      }\n    });\n    const newTags = store.set(\"formats-tags\", tags);\n    this.setState({ tags: newTags });\n  };\n\n  enabledTags() {\n    const { tags } = this.state;\n    return tags ? tags.filter(t => t.enabled).map(t => t.name) : [];\n  }\n\n  activeFormats() {\n    const { tags, currentFormats, playerCount } = this.state;\n    let formats = null;\n    console.log(\" Player\", playerCount);\n    console.log(\"format\", currentFormats);\n    if (tags && currentFormats && playerCount) {\n      formats = currentFormats[playerCount];\n      const enabledTags = this.enabledTags();\n      console.log(\"enabledTags\", enabledTags);\n      formats = formats.filter(f => f.tags.every(t => enabledTags.includes(t)));\n      // formats.forEach(f => f.weight = f.initial) // Store weights\n      console.log(\"Formats\", formats);\n    }\n    return formats;\n  }\n\n  renderActiveFormats() {\n    const { playerCount } = this.state;\n    const formats = this.activeFormats();\n    if (formats) {\n      const formatTags = formats.map(f => {\n        return (\n          <div\n            className=\"row mb-2\"\n            key={`${playerCount}-${f.id}-${f.weight * 100}`}\n          >\n            <div className=\"col-5\">{f.name}</div>\n            <div className=\"col-7\">\n              <Slider\n                min={0}\n                max={100}\n                marks={{ 25: \"25\", 50: \"50\", 75: \"75\" }}\n                defaultValue={f.weight * 100}\n                included={true}\n                handle={handle}\n                onAfterChange={value => {\n                  this.updateFormatValue(f, value);\n                }}\n              />\n            </div>\n          </div>\n        );\n      });\n      return formatTags;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  NavLink as RRNavLink\n} from \"react-router-dom\";\nimport { Alert, Navbar, Nav, Dropdown } from \"react-bootstrap\";\nimport store from \"store\";\n\nimport \"./App.scss\";\n\nimport { setSetting, getSetting, toggleSetting } from \"./util/settings\";\n\nimport { Home } from \"./pages/home\";\nimport { Planechase } from \"./pages/planechase\";\nimport { Archenemy } from \"./pages/archenemy\";\nimport { SYB } from \"./pages/syb\";\nimport { Formats } from \"./pages/formats\";\nimport { DoubleFaceIcon } from \"./components/magic/DoubleFaceIcon\";\nimport GitInfo from \"react-git-info/macro\";\nconst gitInfo = GitInfo();\n\nclass App extends Component {\n  state = {\n    isOpen: false,\n    disclaimerDismissed: false,\n    displayText: false,\n    displayImages: false,\n    devTools: false,\n    displayGatherer: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  componentDidMount = () => {\n    this.versionCheck();\n    this.setState({\n      disclaimerDismissed: getSetting(\"disclaimerDismissed\"),\n      displayText: getSetting(\"displayText\"),\n      displayImages: getSetting(\"displayImages\"),\n      devTools: getSetting(\"devTools\")\n    });\n  };\n\n  versionCheck = () => {\n    const version = getSetting(\"version\");\n    if (version !== gitInfo.commit.shortHash) {\n      // TODO: Future refine this reset\n      store.clearAll();\n    }\n    setSetting(\"version\", gitInfo.commit.shortHash);\n  };\n\n  dismissDisclaimer = () => {\n    this.setState({\n      disclaimerDismissed: setSetting(\"disclaimerDismissed\", true)\n    });\n  };\n\n  _toggleSetting = setting => {\n    const tempState = {};\n    tempState[setting] = toggleSetting(setting);\n    this.setState(tempState);\n  };\n\n  _mtgToggler = (value, displayText, onClick) => {\n    return (\n      <Dropdown.Item onClick={onClick}>\n        <DoubleFaceIcon enabled={value} />\n        <span className=\"ml-3\">{displayText}</span>\n      </Dropdown.Item>\n    );\n  };\n\n  closeNavbar = () => {\n    if (this.state.isOpen) {\n      this.setState({ isOpen: false });\n    }\n  };\n\n  render() {\n    const {\n      disclaimerDismissed,\n      displayText,\n      displayImages,\n      displayGatherer,\n      devTools\n    } = this.state;\n    return (\n      <BrowserRouter>\n        <HelmetProvider>\n          <Helmet titleTemplate=\"%s - Jibbermaster\" />\n          <Navbar\n            variant=\"dark\"\n            expand=\"md\"\n            className=\"text-right p-1 noselect\"\n            expanded={this.state.isOpen}\n          >\n            <Navbar.Brand />\n            <Navbar.Toggle onClick={this.toggle} />\n            <Navbar.Collapse>\n              <Nav className=\"ml-auto\" navbar>\n                <Nav.Item>\n                  <Nav.Link\n                    as={RRNavLink}\n                    exact\n                    to=\"/\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Home\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    as={RRNavLink}\n                    exact\n                    to=\"/planechase\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Planechase\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    as={RRNavLink}\n                    exact\n                    to=\"/archenemy\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Archenemy\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    as={RRNavLink}\n                    exact\n                    to=\"/syb\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    SYB\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    as={RRNavLink}\n                    exact\n                    to=\"/formats\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Formats\n                  </Nav.Link>\n                </Nav.Item>\n                <Dropdown\n                  navbar\n                  onToggle={isOpen => !isOpen && this.closeNavbar()}\n                >\n                  <Dropdown.Toggle as={Nav.Link}>Settings</Dropdown.Toggle>\n                  <Dropdown.Menu alignRight>\n                    {this._mtgToggler(\n                      disclaimerDismissed,\n                      \"Disclaimer Dismissed\",\n                      () => this._toggleSetting(\"disclaimerDismissed\")\n                    )}\n                    {this._mtgToggler(displayText, \"Display Text\", () =>\n                      this._toggleSetting(\"displayText\")\n                    )}\n                    {this._mtgToggler(displayImages, \"Display Images\", () =>\n                      this._toggleSetting(\"displayImages\")\n                    )}\n                    {this._mtgToggler(displayGatherer, \"Display Gatherer\", () =>\n                      this._toggleSetting(\"displayGatherer\")\n                    )}\n                    {this._mtgToggler(devTools, \"Dev Tools\", () =>\n                      this._toggleSetting(\"devTools\")\n                    )}\n                    <Dropdown.Divider />\n                    <Dropdown.Item onClick={() => store.clearAll()}>\n                      Clear Everything\n                    </Dropdown.Item>\n\n                    {this.state.devTools && (\n                      <>\n                        <Dropdown.Divider />\n                        <Dropdown.Item disabled>\n                          Version {getSetting(\"version\")}\n                        </Dropdown.Item>\n                      </>\n                    )}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          <div className=\"app text-light bg-dark col-md-8 offset-md-2 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3\">\n            <Switch>\n              <Route path=\"/\" exact render={props => <Home {...props} />} />\n              <Route\n                path=\"/archenemy\"\n                exact\n                render={props => <Archenemy {...props} />}\n              />\n              <Route\n                path=\"/planechase\"\n                exact\n                render={props => <Planechase {...props} />}\n              />\n              <Route path=\"/syb\" exact render={props => <SYB {...props} />} />\n              <Route\n                path=\"/formats\"\n                exact\n                render={props => <Formats {...props} />}\n              />\n            </Switch>\n            <Alert\n              variant=\"warning\"\n              className=\"fixed-bottom mb-0 py-1\"\n              show={!this.state.disclaimerDismissed}\n              onClose={this.dismissDisclaimer}\n              dismissible\n            >\n              <h6>Disclaimer</h6>\n              <small className=\"text-muted m-0\">\n                This site is created for personal use. Magic: The Gathering, the\n                mana symbols, the tap symbol and all other related images are\n                owned by Wizards of the Coast. jibbermaster.com is unaffiliated\n                with Wizards of the Coast.\n              </small>\n            </Alert>\n          </div>\n        </HelmetProvider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}