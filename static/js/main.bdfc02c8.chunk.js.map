{"version":3,"sources":["pages/home/index.js","mtg/card.js","pages/planechase/Helmet.js","mtg/deck.js","util/api.js","components/Loading.js","components/magic/Plane.js","components/magic/Counter.js","pages/planechase/index.js","pages/archenemy/Helmet.js","mtg/prebuilt-decks.js","pages/archenemy/index.js","App.js","serviceWorker.js","index.js","images/planechase-back.jpg"],"names":["Home","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Helmet","title","rel","href","Button","tag","NavLink","exact","to","block","color","size","Component","getCurrentCard","prefix","store","get","concat","setCurrentCard","card","set","getRevealedCards","setRevealedCards","cards","hasCustomProperty","property","customProperties","find","p","name","gathererImageURL","multiverse_ids","PlanechaseHelmet","_ref","planes","sizes","map","as","id","getOrCreateCurrentDeck","reset","length","undefined","deck","getCurrentDeck","console","log","shuffle","storeCurrentDeck","drawCard","shift","updateHistory","history","push","getHistory","undoDraw","pop","addCardsToTop","topCards","addCardsToBottom","bottomCards","removeCards","cardsToRemove","filteredDeck","filter","c","r","revealCards","numReveal","onlyPlanes","revealedCards","count","Math","min","tmpCount","i","type_line","search","array","temporaryValue","randomIndex","currentIndex","floor","random","internet","axios","create","getAllPlanechaseCards","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","cached","sent","cache","data","addAdditionalProperties","abrupt","t0","error","stop","properties","Aretopolis","type","Chaotic Aether","Interplanar Tunnel","Kilnspire District","Mount Keralia","Naar Isle","Spatial Merging","Stairs to Infinity","Pools of Becoming","Your Inescapable Doom","time","cacheDate","moment","diff","unix","Loading","props","_this","call","state","dotsCount","start","_this2","_this$props$interval","interval","dotsInterval","setInterval","setState","clearInterval","max","char","numDots","dots","_this$props","_this$props$label","label","_this$props$numDots","getDotString","classes","Plane","_getPrototypeOf2","_len","args","Array","_key","modalOpen","toggleModal","listDisplay","Fragment","ListGroupItem","onClick","Modal","isOpen","toggle","backdrop","ModalBody","centered","Card","inverse","CardBody","renderImage","renderText","CardFooter","renderActions","related_uris","target","_this$props2","displayText","CardTitle","CardSubtitle","CardText","oracle_text","hideImage","CardImg","top","width","src","imageURI","back","Counter","counters","incrementCounter","counterCount","getCounterType","Planechase","loading","currentCard","tripleChaosModalOpen","scryModalOpen","planeswalkDisabled","showHistory","componentDidMount","planeswalk","_callee2","_context2","undo","_callee3","_context3","triggerChaos","shuffledCards","slice","toggleHistory","renderHistory","ListGroup","Plane_Plane","selectPlane","restCards","_tripleChaosModalClose","_tripleChaosModalToggle","_scryModalClose","_scryTop","_scryBottom","renderScryModal","_this$state","onClosed","ModalHeader","_this$state2","Helmet_PlanechaseHelmet","disabled","renderChaos","Loading_Loading","renderTwoPlanes","renderFivePlanes","renderCounter","renderTripleChaosModal","Counter_Counter","_this$state3","revealedPlanes","_this3","_this$state4","_this$state5","ModalFooter","outline","aria-label","ArchenemyHelmet","archenemy","DECKS","Archenemy","Helmet_ArchenemyHelmet","renderPrebuilts","prebuiltItems","s","prebuilt","deckname","cardListIems","App","disclaimerDismissed","dismissed","dismissDiscalimer","react_router_dom","titleTemplate","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","RRNavLink","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","clearAll","react_router","path","render","home_Home","archenemy_Archenemy","planechase_Planechase","Alert","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.bdfc02c8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\n\nexport class Home extends Component {\n  render() {\n    return (\n      <div className=\"home\">\n        <Helmet title=\"Magic\">\n          <link\n            rel=\"manifest\"\n            href={process.env.PUBLIC_URL + \"/manifest.json\"}\n          />\n        </Helmet>\n        <div className=\"mt-4\">\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/planechase\"\n            block\n            color=\"info\"\n            size=\"lg\"\n          >\n            <i className=\"ms ms-planeswalker ms-4x mx-2 d-block\" />\n            <span className=\"d-block\">Planechase</span>\n          </Button>\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/archenemy\"\n            block\n            color=\"danger\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-arc ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">Archenemy</span>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import store from \"store\";\n\nexport const getCurrentCard = prefix => {\n  return store.get(`${prefix}-currentCard`);\n};\n\nexport const setCurrentCard = (prefix, card) => {\n  return store.set(`${prefix}-currentCard`, card);\n};\n\nexport const getRevealedCards = prefix => {\n  return store.get(`${prefix}-revealedCards`);\n};\n\nexport const setRevealedCards = (prefix, cards) => {\n  return store.set(`${prefix}-revealedCards`, cards);\n};\n\nexport const hasCustomProperty = (property, card) => {\n  return card && card.customProperties.find(p => p.name === property);\n};\n\nexport const getCounterType = card => {\n  const property = card.customProperties.find(p => p.name === \"counter\");\n  return property.type;\n};\n\nexport const gathererImageURL = card => {\n  return `http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=${\n    card.multiverse_ids[0]\n  }&type=card`;\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { gathererImageURL } from \"../../mtg/card.js\";\n\nexport const PlanechaseHelmet = ({ planes }) => {\n  return (\n    <Helmet title=\"Planechase\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/planechase-manifest.json\"}\n      />\n      {planes &&\n        planes.map(p => (\n          <link\n            rel=\"preload\"\n            href={gathererImageURL(p)}\n            as=\"image\"\n            key={p.id}\n          />\n        ))}\n    </Helmet>\n  );\n};\n","import store from \"store\";\n\nexport const getOrCreateCurrentDeck = (prefix, cards, reset = false) => {\n  let deck = getCurrentDeck(prefix);\n  if (!deck || reset) {\n    console.log(`Creating New ${prefix} Deck`);\n    deck = shuffle(cards);\n    store.set(`${prefix}-history`, []);\n    storeCurrentDeck(prefix, deck);\n  }\n  return deck;\n};\n\nexport const getCurrentDeck = prefix => {\n  return store.get(`${prefix}-deck`);\n};\n\nexport const storeCurrentDeck = (prefix, deck) => {\n  return store.set(`${prefix}-deck`, deck);\n};\n\nexport const drawCard = prefix => {\n  const deck = getCurrentDeck(prefix);\n  const card = deck.shift();\n  updateHistory(prefix, card);\n  storeCurrentDeck(prefix, deck);\n  return card;\n};\n\nexport const updateHistory = (prefix, card) => {\n  const history = store.get(`${prefix}-history`);\n  history.push(card);\n  store.set(`${prefix}-history`, history);\n};\n\nexport const getHistory = (prefix, card) => {\n  return store.get(`${prefix}-history`);\n};\n\nexport const undoDraw = prefix => {\n  const history = store.get(`${prefix}-history`);\n  const card = history.pop();\n  if (card) {\n    addCardsToTop(prefix, [card]);\n  }\n  store.set(`${prefix}-history`, history);\n  return history[history.length - 1];\n};\n\nexport const addCardsToTop = (prefix, topCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, topCards.concat(deck));\n};\n\nexport const addCardsToBottom = (prefix, bottomCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, deck.concat(bottomCards));\n};\n\nexport const deckSize = prefix => {\n  return getCurrentDeck(prefix).length;\n};\n\nexport const findCard = (prefix, card) => {\n  return findCardById(prefix, card.id);\n};\n\nexport const findCardById = (prefix, cardId) => {\n  const deck = getCurrentDeck(prefix);\n  return deck.find(c => c.id === cardId);\n};\n\nexport const findAndPutOnTop = (prefix, cardId) => {\n  const tmpCard = findCardById(cardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToTop(prefix, [tmpCard]);\n  }\n};\n\nexport const findAndPutOnBottom = (prefix, cardId) => {\n  const tmpCard = findCardById(cardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToBottom(prefix, [tmpCard]);\n  }\n};\n\nexport const removeCards = (prefix, cardsToRemove) => {\n  const deck = getCurrentDeck(prefix);\n  const filteredDeck = deck.filter(\n    c => !cardsToRemove.find(r => r.id === c.id)\n  );\n  storeCurrentDeck(prefix, filteredDeck);\n};\n\nexport const revealCards = (prefix, numReveal, onlyPlanes = false) => {\n  const revealedCards = [];\n  const deck = getCurrentDeck(prefix);\n  const count = Math.min(deck.length, numReveal);\n\n  let planes = 0;\n  let tmpCount = count;\n  for (let i = 0; i < tmpCount; i++) {\n    revealedCards.push(deck[i]);\n\n    if (onlyPlanes) {\n      if (deck[i].type_line.search(\"Plane\") >= 0) {\n        planes++;\n      }\n\n      if (i === tmpCount - 1 && planes < count) {\n        tmpCount++;\n      }\n    }\n  }\n\n  return revealedCards;\n};\n\nexport const shuffle = array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\n// \tfunction showHistory(){\n// \t\tforeach( $_SESSION[ $this->prefix . 'history'] as $card){\n// \t\t\techo Card::displayHoverCardName($card, '', 'card');\n// \t\t}\n//\n// \t}\n//\n// \tfunction showRemainingCards(){\n// \t\tforeach(  $_SESSION[ $this->prefix . 'deck'] as $card){\n// \t\t echo Card::displayHoverCardName($card, $classes='');\n// \t\t}\n// \t}\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport store from \"store\";\n\nexport const internet = axios.create();\n\nconst PLANES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Aplane+or+t%3Aphenomenon&unique=cards\";\n\nconst SCHEMES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Ascheme&unique=cards\";\n\nexport const getAllPlanechaseCards = async () => {\n  try {\n    let planes = cached(\"planes\");\n    if (!planes) {\n      console.log(\"Loading from Axios\");\n      let response = await internet.get(PLANES_URL);\n      planes = response.data.data;\n      planes = planes.map(p => addAdditionalProperties(p));\n      cache(\"planes\", planes);\n      // TODO use the expire store parameter\n    } else {\n      console.log(\"Loaded from store\");\n    }\n    return planes;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nfunction addAdditionalProperties(card) {\n  const properties = {\n    Aretopolis: [{ name: \"counter\", type: \"Scroll\" }],\n    \"Chaotic Aether\": [{ name: \"all-chaos\" }],\n    \"Interplanar Tunnel\": [{ name: \"top-5\" }],\n    \"Kilnspire District\": [{ name: \"counter\", type: \"Charge\" }],\n    \"Mount Keralia\": [{ name: \"counter\", type: \"Pressure\" }],\n    \"Naar Isle\": [{ name: \"counter\", type: \"Flame\" }],\n    \"Spatial Merging\": [{ name: \"two-planes\" }],\n    \"Stairs to Infinity\": [{ name: \"chaos-trigger\" }, { name: \"scry-1\" }],\n    \"Pools of Becoming\": [{ name: \"chaos-trigger\" }, { name: \"triple-chaos\" }],\n    \"Your Inescapable Doom\": [\n      { name: \"unabandonable\" },\n      { name: \"counter\", type: \"Doom\" }\n    ]\n  };\n\n  if (properties[card.name]) {\n    card.customProperties = properties[card.name];\n  } else {\n    card.customProperties = [];\n  }\n\n  return card;\n}\n\nfunction cached(prefix) {\n  let data = store.get(prefix);\n  let cacheDate = store.get(`${prefix}-fetched`);\n  if (data && !old(cacheDate)) {\n    return data;\n  }\n  return null;\n}\n\nfunction cache(prefix, data) {\n  store.set(prefix, data);\n  store.set(`${prefix}-fetched`, moment().unix());\n}\n\nfunction old(time) {\n  return time && moment().diff(moment.unix(time), \"days\") > 5;\n}\n","import React, { Component } from \"react\";\n\nexport class Loading extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dotsCount: props.start || 0\n    };\n  }\n\n  componentDidMount() {\n    const { interval = 500 } = this.props;\n\n    this.dotsInterval = setInterval(() => {\n      this.setState({ dotsCount: this.state.dotsCount + 1 });\n    }, interval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.dotsInterval);\n  }\n\n  getDotString(count, max, char = \".\") {\n    let numDots = count % (max + 1);\n    let dots = \"\";\n\n    for (let i = 0; i < numDots; i++) {\n      dots += char;\n    }\n\n    return dots;\n  }\n\n  render() {\n    const { label = \"Loading\", className, numDots = 3 } = this.props;\n    const { dotsCount } = this.state;\n    let dots = this.getDotString(dotsCount, numDots, \".\");\n    let classes = `loading-dots ${className}`;\n\n    return (\n      <span className={classes}>\n        {label}\n        {dots}\n      </span>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardTitle,\n  CardBody,\n  CardSubtitle,\n  CardText,\n  CardFooter,\n  ListGroupItem,\n  Modal,\n  ModalBody,\n  Button\n} from \"reactstrap\";\nimport { gathererImageURL } from \"../../mtg/card\";\nimport back from \"../../images/planechase-back.jpg\";\n\nimport \"./planes.scss\";\n\nexport class Plane extends Component {\n  state = {\n    modalOpen: false\n  };\n\n  toggleModal = () => {\n    console.log(\"Toggle Modal\");\n    this.setState({ modalOpen: !this.state.modalOpen });\n  };\n\n  render() {\n    const { listDisplay, card } = this.props;\n    if (listDisplay) {\n      return (\n        <>\n          <ListGroupItem color=\"dark\" onClick={this.toggleModal}>\n            {card.name}\n          </ListGroupItem>\n          <Modal\n            isOpen={this.state.modalOpen}\n            toggle={this.toggleModal}\n            size=\"md\"\n            backdrop={true}\n          >\n            <ModalBody className=\"p-0\" centered=\"true\">\n              <Plane card={card} />\n            </ModalBody>\n          </Modal>\n        </>\n      );\n    } else {\n      return (\n        <Card inverse>\n          <CardBody>\n            {this.renderImage()}\n            {this.renderText()}\n          </CardBody>\n          <CardFooter>{this.renderActions()}</CardFooter>\n        </Card>\n      );\n    }\n  }\n\n  renderActions() {\n    const { card } = this.props;\n    if (card) {\n      return (\n        <a\n          href={card.related_uris[\"gatherer\"]}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Gatherer\n        </a>\n      );\n    }\n  }\n\n  renderText() {\n    const { card, displayText } = this.props;\n    if (displayText) {\n      if (card) {\n        return (\n          <>\n            <CardTitle>{card.name}</CardTitle>\n            <CardSubtitle>{card.type_line}</CardSubtitle>\n            <CardText>{card.oracle_text}</CardText>\n          </>\n        );\n      } else {\n        return <CardTitle>None</CardTitle>;\n      }\n    }\n  }\n\n  renderImage() {\n    const { hideImage } = this.props;\n    if (!hideImage) {\n      return (\n        <CardImg top width=\"100%\" src={this.imageURI()} className=\"mtg-card\" />\n      );\n    }\n  }\n\n  imageURI() {\n    const { card } = this.props;\n    if (card) {\n      // Use   Scryfall and rotate or use Gatherer\n      // scryfall (rotated) card.image_uris[\"border_crop\"]\n      return gathererImageURL(card);\n    } else {\n      return back;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { getCounterType } from \"../../mtg/card.js\";\nexport class Counter extends Component {\n  state = {\n    counters: {}\n  };\n\n  incrementCounter = () => {\n    const { card } = this.props;\n    const { counters } = this.state;\n    counters[card.id] = this.counterCount() + 1;\n    this.setState({ counters });\n  };\n\n  counterCount = () => {\n    const { card } = this.props;\n    const { counters } = this.state;\n    return counters[card.id] || 0;\n  };\n\n  componentWillUnmount() {\n    this.setState({ counters: {} });\n  }\n\n  render() {\n    const { card } = this.props;\n    const type = getCounterType(card);\n    return (\n      <div>\n        {this.counterCount()}\n        <Button onClick={this.incrementCounter}>Add {type} Counter</Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { PlanechaseHelmet } from \"./Helmet\";\nimport {\n  getCurrentDeck,\n  getOrCreateCurrentDeck,\n  drawCard,\n  undoDraw,\n  revealCards,\n  addCardsToBottom,\n  removeCards,\n  shuffle,\n  addCardsToTop,\n  getHistory\n} from \"../../mtg/deck.js\";\nimport {\n  getCurrentCard,\n  setCurrentCard,\n  hasCustomProperty,\n  setRevealedCards,\n  getRevealedCards\n} from \"../../mtg/card.js\";\nimport { getAllPlanechaseCards } from \"../../util/api.js\";\nimport { Loading } from \"../../components/Loading\";\nimport { Plane } from \"../../components/magic/Plane\";\nimport {\n  Button,\n  ListGroup,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport { Counter } from \"../../components/magic/Counter\";\n\nexport class Planechase extends Component {\n  state = {\n    loading: false,\n    planes: [],\n    deck: null,\n    currentCard: null,\n    counters: 0,\n    revealedCards: [],\n    tripleChaosModalOpen: false,\n    scryModalOpen: false,\n    planeswalkDisabled: false,\n    showHistory: false\n  };\n\n  componentDidMount = async () => {\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes);\n    const currentCard = getCurrentCard(\"planechase\");\n    const revealedCards = getRevealedCards(\"planechase\") || [];\n    this.setState({ planes, loading: false, deck, currentCard, revealedCards });\n  };\n\n  planeswalk = () => {\n    const currentCard = drawCard(\"planechase\");\n    setCurrentCard(\"planechase\", currentCard);\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      const revealedCards = revealCards(\"planechase\", 2, true);\n      removeCards(\"planechase\", revealedCards);\n      setRevealedCards(\"planechase\", revealedCards);\n      this.setState({ revealedCards });\n    }\n\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      const revealedCards = revealCards(\"planechase\", 5, true);\n      removeCards(\"planechase\", revealedCards);\n      setRevealedCards(\"planechase\", revealedCards);\n      this.setState({ revealedCards, planeswalkDisabled: true });\n    }\n\n    const deck = getCurrentDeck(\"planechase\");\n    this.setState({ currentCard, deck, counters: 0 });\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes, true);\n    const currentCard = setCurrentCard(\"planechase\", null);\n    this.setState({ planes, loading: false, deck, currentCard });\n  };\n\n  undo = async () => {\n    const currentCard = undoDraw(\"planechase\");\n    const deck = getCurrentDeck(\"planechase\");\n    this.setState({ deck, currentCard });\n  };\n\n  triggerChaos = () => {\n    const { currentCard } = this.state;\n    console.log(\"Choas Triggered\");\n    if (hasCustomProperty(\"triple-chaos\", currentCard)) {\n      const revealedCards = revealCards(\"planechase\", 3, true);\n      removeCards(\"planechase\", revealedCards);\n      const shuffledCards = shuffle(revealedCards.slice());\n      addCardsToBottom(\"planechase\", shuffledCards);\n      const deck = getCurrentDeck(\"planechase\");\n      setRevealedCards(\"planechase\", revealCards);\n      this.setState({ revealedCards, tripleChaosModalOpen: true, deck });\n    }\n\n    if (hasCustomProperty(\"scry-1\", currentCard)) {\n      const revealedCards = revealCards(\"planechase\", 1, false);\n      removeCards(\"planechase\", revealedCards);\n      setRevealedCards(\"planechase\", revealCards);\n      this.setState({ revealedCards, scryModalOpen: true });\n    }\n  };\n\n  render() {\n    const {\n      loading,\n      planes,\n      deck,\n      currentCard,\n      planeswalkDisabled\n    } = this.state;\n\n    return (\n      <div className=\"planechase\">\n        <PlanechaseHelmet planes={planes} />\n        <div className=\"fixed-top mt-1 ml-1 w-25 text-left\">\n          <Button\n            onClick={this.planeswalk}\n            className=\"mb-2\"\n            color=\"success\"\n            disabled={planeswalkDisabled}\n            block\n          >\n            <i className=\"ms ms-planeswalker ms-2x mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Planeswalk</span>\n          </Button>\n          {this.renderChaos()}\n        </div>\n\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : (\n          <div>{currentCard ? <Plane card={currentCard} /> : <Plane />}</div>\n        )}\n        <hr />\n        {this.renderTwoPlanes()}\n        {this.renderFivePlanes()}\n        {this.renderCounter(currentCard)}\n        {this.renderTripleChaosModal()}\n        {this.renderScryModal()}\n        <hr />\n        <Button onClick={this.reset} color=\"danger\" block>\n          Reset\n        </Button>\n        <Button onClick={this.undo} color=\"warning\" block>\n          Undo\n        </Button>\n        <p>There are {deck ? deck.length : 0} cards remaining.</p>\n        {this.renderHistory()}\n      </div>\n    );\n  }\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  };\n\n  renderHistory = () => {\n    const { showHistory } = this.state;\n    const history = getHistory(\"planechase\");\n    return (\n      <>\n        <Button onClick={this.toggleHistory} block>\n          {showHistory ? \"Hide\" : \"Show\"} History\n        </Button>\n        <ListGroup>\n          {showHistory &&\n            history &&\n            history.map(p => <Plane card={p} key={p.id} listDisplay={true} />)}\n        </ListGroup>\n      </>\n    );\n  };\n\n  renderChaos() {\n    const { currentCard } = this.state;\n    const hasChaos = hasCustomProperty(\"chaos-trigger\", currentCard);\n    if (hasChaos) {\n      return (\n        <Button onClick={this.triggerChaos} color=\"info\" block>\n          <i className=\"ms ms-chaos ms-2x mx-2\" />\n          <span className=\"mx-2 d-none d-md-inline\">Trigger Chaos</span>\n        </Button>\n      );\n    }\n  }\n\n  renderCounter(card) {\n    // const { currentCard, counters } = this.state;\n    const hasCounters = hasCustomProperty(\"counter\", card);\n    if (hasCounters) {\n      // const counterType = getCounterType(currentCard);\n      return <Counter card={card} />;\n    }\n  }\n\n  renderTwoPlanes() {\n    const { currentCard, revealedCards } = this.state;\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      console.log(revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      // TODO Countes, chaos etc\n      return (\n        <div>\n          <p>Your are on both planes</p>\n          {revealedPlanes.map(c => (\n            <p>\n              {c.name}\n              {this.renderCounter(c)}\n            </p>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  selectPlane = card => {\n    const { revealedCards } = this.state;\n    removeCards(\"planechase\", revealedCards);\n    addCardsToTop(\"planechase\", [card]);\n    const restCards = revealedCards.filter(c => c.id !== card.id);\n    const shuffledCards = shuffle(restCards.slice());\n    addCardsToBottom(\"planechase\", shuffledCards);\n    setRevealedCards(\"planechase\", []);\n    this.setState({ planeswalkDisabled: false, revealedCards: [] });\n    this.planeswalk();\n  };\n\n  renderFivePlanes() {\n    const { currentCard, revealedCards } = this.state;\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      console.log(revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      console.log(revealedPlanes);\n      // TODO Countes, chaos etc\n      return (\n        <div>\n          <h1>Pick A Plane to Planeswalk To</h1>\n          {revealedPlanes.map(c => (\n            <div>\n              <Plane card={c} />\n              <Button block onClick={() => this.selectPlane(c)}>\n                <i className=\"ms ms-planeswalker mx-2\" />\n                <span className=\"mx-2\">{c.name}</span>\n              </Button>\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  _tripleChaosModalClose = () => {\n    setRevealedCards(\"planechase\", []);\n    this.setState({\n      tripleChaosModalOpen: false,\n      revealedCards: []\n    });\n  };\n\n  _tripleChaosModalToggle = () => {\n    if (this.state.tripleChaosModalOpen) {\n      this._tripleChaosModalClose();\n    }\n  };\n\n  renderTripleChaosModal() {\n    const { revealedCards, tripleChaosModalOpen } = this.state;\n    if (revealedCards && tripleChaosModalOpen) {\n      // TODO filter only planes in revealed cards\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      return (\n        <Modal\n          isOpen={!!tripleChaosModalOpen}\n          toggle={this._tripleChaosModalToggle}\n          onClosed={this._tripleChaosModalClose}\n          size=\"lg\"\n          backdrop={true}\n        >\n          <ModalHeader>{`Triple Chaos`}</ModalHeader>\n          <ModalBody>\n            <h1 className=\"text-center\">\n              <i className=\"ms ms-chaos sm-margin\" />\n              <i className=\"ms ms-chaos sm-margin\" />\n              <i className=\"ms ms-chaos sm-margin\" />\n              Triple Chaos - You Pick Order\n              <i className=\"ms ms-chaos sm-margin\" />\n              <i className=\"ms ms-chaos sm-margin\" />\n              <i className=\"ms ms-chaos sm-margin\" />\n            </h1>\n            {revealedPlanes.map(c => (\n              <Plane card={c} />\n            ))}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              outline\n              block\n              aria-label=\"Close\"\n              onClick={this._tripleChaosModalClose}\n            >\n              Done\n            </Button>\n          </ModalFooter>\n        </Modal>\n      );\n    }\n  }\n\n  _scryModalClose = () => {\n    setRevealedCards(\"planechase\", []);\n    this.setState({\n      scryModalOpen: false,\n      revealedCards: []\n    });\n  };\n\n  _scryTop = () => {\n    const { revealedCards } = this.state;\n    addCardsToTop(\"planechase\", revealedCards);\n    console.log(\"Scry Top\", revealedCards);\n    const deck = getCurrentDeck(\"planechase\");\n    setRevealedCards(\"planechase\", []);\n    this.setState({ revealedCards: [], scryModalOpen: false, deck });\n  };\n\n  _scryBottom = () => {\n    const { revealedCards } = this.state;\n    addCardsToBottom(\"planechase\", revealedCards);\n    console.log(\"Scry Bottom\", revealedCards);\n    const deck = getCurrentDeck(\"planechase\");\n    setRevealedCards(\"planechase\", []);\n    this.setState({ revealedCards: [], scryModalOpen: false, deck });\n  };\n\n  renderScryModal = () => {\n    const { revealedCards, scryModalOpen } = this.state;\n    if (revealedCards && scryModalOpen) {\n      return (\n        <Modal\n          isOpen={!!scryModalOpen}\n          onClosed={this._tripleChaosModalClose}\n          size=\"lg\"\n        >\n          <ModalHeader>\n            <i className=\"ms ms-chaos sm-margin\" />\n            Scry Card\n            <i className=\"ms ms-chaos sm-margin\" />\n          </ModalHeader>\n          <ModalBody>\n            <Button color=\"secondary\" block onClick={this._scryTop}>\n              Top\n            </Button>\n            {revealedCards.map(c => (\n              <Plane card={c} />\n            ))}\n            <Button color=\"secondary\" block onClick={this._scryBottom}>\n              Bottom\n            </Button>\n          </ModalBody>\n        </Modal>\n      );\n    }\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport const ArchenemyHelmet = ({ archenemy }) => {\n  return (\n    <Helmet name=\"Archenemy\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/archenemy-manifest.json\"}\n      />\n    </Helmet>\n  );\n};\n","export const getDeckList = () => {\n  return DECKS.map(s => s.name);\n};\n\nexport const getCardList = deckname => {\n  const deck = DECKS.find(s => s.name === deckname);\n  return deck.cards;\n};\nconst DECKS = [\n  {\n    name: \"Assemble the Doomsday Machine\",\n    cards: [\n      [\"All in Good Time\", 1],\n      [\"Behold the Power of Destruction\", 1],\n      [\"Embrace My Diabolical Vision\", 1],\n      [\"Feed the Machine\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"I Know All, I See All\", 2],\n      [\"Ignite the Cloneforge!\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"The Iron Guardian Stirs\", 2],\n      [\"My Genius Knows No Bounds\", 1],\n      [\"Nothing Can Stop Me Now\", 1],\n      [\"The Pieces Are Coming Together\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Scorch the World with Dragonfire\",\n    cards: [\n      [\"All Shall Smolder in My Wake\", 2],\n      [\"Approach My Molten Realm\", 1],\n      [\"The Fate of the Flammable\", 1],\n      [\"I Bask in Your Silent Awe\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"Know Naught but Fire\", 1],\n      [\"Look Skyward and Despair\", 2],\n      [\"My Crushing Masterstroke\", 1],\n      [\"My Wish Is Your Command\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Tooth, Claw, and Tail\", 1],\n      [\"Which of You Burns Brightest?\", 2],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Trample Civilization Underfoot\",\n    cards: [\n      [\"Every Last Vestige Shall Rot\", 2],\n      [\"Evil Comes to Fruition\", 1],\n      [\"I Call on the Ancient Magics\", 1],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Into the Earthen Maw\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"May Civilization Collapse\", 1],\n      [\"Nature Demands an Offering\", 2],\n      [\"Nature Shields Its Own\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Roots of All Evil\", 2],\n      [\"The Very Soil Shall Shake\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1],\n      [\"Your Will Is Not Your Own\", 2]\n    ]\n  },\n  {\n    name: \"Bring About the Undead Apocalypse\",\n    cards: [\n      [\"Choose Your Champion\", 2],\n      [\"Dance, Pathetic Marionette\", 1],\n      [\"The Dead Shall Serve\", 2],\n      [\"Every Hope Shall Vanish\", 2],\n      [\"I Delight in Your Convulsions\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"Mortal Flesh Is Weak\", 1],\n      [\"My Undead Horde Awakens\", 1],\n      [\"Only Blood Ends Your Nightmares\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Rotted Ones, Lay Siege\", 2],\n      [\"Surrender Your Thoughts\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Archenemy Nicol Bolas\",\n    cards: [\n      [\"Because I Have Willed It\", 1],\n      [\"Behold My Grandeur\", 1],\n      [\"Bow to My Command\", 1],\n      [\"Choose Your Demise\", 1],\n      [\"Delight in the Hunt\", 1],\n      [\"Every Dream a Nightmare\", 1],\n      [\"For Each of You, a Gift\", 1],\n      [\"Know Evil\", 1],\n      [\"Make Yourself Useful\", 1],\n      [\"The Mighty Will Fall\", 1],\n      [\"My Forces Are Innumerable\", 1],\n      [\"My Laughter Echoes\", 1],\n      [\"No One Will Hear Your Cries\", 1],\n      [\"Pay Tribute to Me\", 1],\n      [\"Power Without Equal\", 1],\n      [\"A Reckoning Approaches\", 1],\n      [\"There Is No Refuge\", 1],\n      [\"This World Belongs to Me\", 1],\n      [\"What's Yours Is Now Mine\", 1],\n      [\"When Will You Learn?\", 1]\n    ]\n  }\n];\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  ListGroupItem,\n  ListGroup\n} from \"reactstrap\";\nimport { ArchenemyHelmet } from \"./Helmet\";\nimport { getDeckList, getCardList } from \"../../mtg/prebuilt-decks\";\n\nexport class Archenemy extends Component {\n  state = {};\n\n  componentDidMount = () => {};\n\n  render() {\n    return (\n      <div className=\"archenemy\">\n        <ArchenemyHelmet />\n        {this.renderPrebuilts()}\n      </div>\n    );\n  }\n\n  renderPrebuilts() {\n    const prebuilts = getDeckList();\n    const prebuiltItems = prebuilts.map((prebuilt, i) => {\n      const cardList = getCardList(prebuilt);\n      const cardListIems = cardList.map((card, i) => (\n        <ListGroupItem key={i}>{card}</ListGroupItem>\n      ));\n      return (\n        <Card key={i}>\n          <CardBody>\n            <CardTitle>{prebuilt}</CardTitle>\n            <ListGroup className=\"text-dark\">{cardListIems}</ListGroup>\n          </CardBody>\n        </Card>\n      );\n    });\n    return <div>{prebuiltItems}</div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  NavLink as RRNavLink\n} from \"react-router-dom\";\nimport {\n  Alert,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport store from \"store\";\n\nimport \"./App.scss\";\n\nimport { Home } from \"./pages/home\";\nimport { Planechase } from \"./pages/planechase\";\nimport { Archenemy } from \"./pages/archenemy\";\n\nclass App extends Component {\n  state = {\n    isOpen: false,\n    disclaimerDismissed: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  componentDidMount = () => {\n    const dismissed = store.get(\"disclaimer-dismissed\");\n    this.setState({ disclaimerDismissed: !!dismissed });\n  };\n\n  dismissDiscalimer = () => {\n    store.set(\"disclaimer-dismissed\", true);\n    this.setState({ disclaimerDismissed: true });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Helmet titleTemplate=\"%s - Jibbermaster\" />\n        <Navbar color=\"dark\" dark expand=\"md\" className=\"text-right p-1\">\n          <NavbarBrand />\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink tag={RRNavLink} exact to=\"/\" activeClassName=\"active\">\n                  Home\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  tag={RRNavLink}\n                  exact\n                  to=\"/planechase\"\n                  activeClassName=\"active\"\n                >\n                  Planechase\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  tag={RRNavLink}\n                  exact\n                  to=\"/archenemy\"\n                  activeClassName=\"active\"\n                >\n                  Archenemy\n                </NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Options\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>Option 1</DropdownItem>\n                  <DropdownItem>Option 2</DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem onClick={() => store.clearAll()}>\n                    Clear Everything\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n        <div className=\"app text-light bg-dark\">\n          <Switch>\n            <Route path=\"/\" exact render={props => <Home {...props} />} />\n            <Route\n              path=\"/archenemy\"\n              exact\n              render={props => <Archenemy {...props} />}\n            />\n            <Route\n              path=\"/planechase\"\n              exact\n              render={props => <Planechase {...props} />}\n            />\n          </Switch>\n          <Alert\n            color=\"warning\"\n            className=\"fixed-bottom mb-0 py-1\"\n            isOpen={!this.state.disclaimerDismissed}\n            toggle={this.dismissDiscalimer}\n          >\n            <h6>Disclaimer</h6>\n            <small className=\"text-muted m-0\">\n              This site is created for personal use. Magic: The Gathering, the\n              mana symbols, the tap symbol and all other related images are\n              owned by Wizards of the Coast. jibbermaster.com is unaffiliated\n              with Wizards of the Coast.\n            </small>\n          </Alert>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/planechase-back.c7f50007.jpg\";"],"sourceRoot":""}