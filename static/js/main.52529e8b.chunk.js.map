{"version":3,"sources":["images/planechase-back.jpg","images/archenemy-back.jpg","util/settings.js","pages/home/index.js","mtg/card.js","pages/planechase/Helmet.js","mtg/deck.js","util/api.js","components/Loading.js","components/magic/Counter.js","components/magic/Plane.js","pages/planechase/index.js","pages/archenemy/Helmet.js","mtg/prebuilt-decks.js","components/magic/Scheme.js","pages/archenemy/index.js","pages/syb/Helmet.js","pages/syb/index.js","pages/formats/Helmet.js","pages/formats/formats.js","pages/formats/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","store","addPlugin","defaultPlugin","defaults","getSetting","setting","get","setSetting","value","set","Home","Component","componentDidMount","render","className","title","rel","href","Button","tag","NavLink","exact","to","block","color","size","getCurrentCard","prefix","setCurrentCard","card","setRevealedCards","cards","getAdditionalCards","setAdditionalCards","getScryCards","setScryCards","hasCustomProperty","property","customProperties","find","p","name","gathererImageURL","multiverse_ids","PlanechaseHelmet","planes","sizes","map","as","key","id","moveCard","from","deck","getCurrentDeck","splice","storeCurrentDeck","getOrCreateCurrentDeck","reset","console","log","clonedCard","JSON","parse","stringify","forEach","c","deck_card_id","uuidv4","shuffle","drawCard","shift","updateHistory","history","push","getHistory","undoDraw","pop","addCardsToTop","length","topCards","concat","addCardsToBottom","bottomCards","findCardByDeckCardId","deckCardId","findAndPutOnTop","tmpCard","removeCards","findAndPutOnBottom","cardsToRemove","filteredDeck","filter","r","revealCards","numReveal","onlyPlanes","revealedCards","count","Math","min","tmpCount","i","type_line","search","array","temporaryValue","randomIndex","currentIndex","floor","random","internet","axios","create","getAllPlanechaseCards","a","cached","response","cache","data","addAdditionalProperties","error","getAllArchenemyCards","schemes","properties","Aretopolis","type","oracle_html","__html","oracle_text","replace","cacheDate","time","moment","diff","unix","Loading","constructor","props","super","this","state","dotsCount","start","interval","dotsInterval","setInterval","setState","componentWillUnmount","clearInterval","getDotString","max","char","numDots","dots","label","classes","Counter","counter","incrementCounter","getCounterType","onClick","Plane","modalOpen","toggleModal","listDisplay","children","ListGroupItem","Modal","isOpen","toggle","backdrop","contentClassName","ModalBody","centered","Card","inverse","renderImage","renderCounter","renderChildren","renderBody","renderActions","text","renderText","CardBody","displayImages","hasCounters","CardImgOverlay","CardTitle","CardFooter","related_uris","target","CardSubtitle","CardText","dangerouslySetInnerHTML","CardImg","top","width","src","imageURI","back","Planechase","loading","currentCard","additionalCards","scryCards","tripleChaosModalOpen","scryModalOpen","planeswalkDisabled","showHistory","showDeck","showDeckImages","refreshDeck","planeswalk","revealedPlanes","revealedPhenomenon","undo","triggerChaos","newRevealedCards","shuffledCards","slice","newScryCards","renderDevTools","renderDeck","toggleDeck","toggleDeckImages","manipulateDeck","Fade","in","ListGroup","Fragment","ButtonToolbar","ButtonGroup","disabled","toggleHistory","renderHistory","reverse","selectPlane","restCards","_tripleChaosModalClose","_tripleChaosModalToggle","_scryModalClose","_scryTop","_scryBottom","renderScryModal","ModalHeader","timeout","renderChaos","renderTwoPlanes","renderFivePlanes","renderTripleChaosModal","Alert","onClosed","ModalFooter","aria-label","ArchenemyHelmet","image_uris","DECKS","Scheme","Archenemy","ongoingSchemes","abandonedOngoing","deckSelection","customDeck","scheme","newCard","abandonScheme","newOngoing","s","resetCustomDeck","renderDeckSelect","renderGamePlay","Jumbotron","fluid","Container","renderAbandon","renderOngoingSchemes","selectDeck","renderPrebuilts","renderBuildCustomDeck","newCards","incrementCount","decrementCount","customDeckSize","reduce","b","cardListIems","UncontrolledCollapse","toggler","prebuiltItems","prebuilt","cardList","deckname","getCardList","SYBHelmet","circleLayout","nodeDimensionsIncludeLabels","gridLayout","rows","SYB","playerCount","targets","loadingDirection","tableShape","whichWay","setTimeout","regenerateOrder","generateNodes","Array","keys","generateEdges","player","targetIndex","source","players","handleCy","cy","layout","isSquare","refreshLayout","debounce","run","on","renderCyto","elements","nodes","edges","stylesheet","selector","style","padding","height","content","CytoscapeComponent","normalizeElements","userPanningEnabled","newPlayerCount","setTableShape","shape","Spinner","FormatsHelmet","TAGS","FOUR_PLAYER","initial","tags","showSwaps","displayName","FIVE_PLAYER","SIX_PLAYER","Handle","Slider","handle","dragging","index","restProps","prefixCls","overlay","visible","placement","Formats","currentFormats","activeFormat","loadingFormat","swapTriggered","createTags","createFormats","rand","getRandomFormat","list","totalWeight","result","cur","weight","randomNum","weightSum","item","updateFormatValue","format","f","updatedCurrentFormats","triggerSwap","toggleTag","t","enabled","newTags","pickFormat","formats","activeFormats","showDeckswapButton","enabledTags","includes","renderActiveFormatName","renderFormatToggles","renderActiveFormats","4","cloneDeep","5","6","activeTags","uniq","flatMap","sort","values","every","marks","25","50","75","defaultValue","included","onAfterChange","App","disclaimerDismissed","displayText","devTools","displayGatherer","dismissDisclaimer","_toggleSetting","tempState","toggleSetting","_mtgToggler","DropdownItem","closeNavbar","titleTemplate","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","RRNavLink","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","divider","clearAll","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52529e8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/planechase-back.c7f50007.jpg\";","module.exports = __webpack_public_path__ + \"static/media/archenemy-back.2c00b5d4.jpg\";","import store from \"store\";\nimport defaultPlugin from \"store/plugins/defaults\";\n\nstore.addPlugin(defaultPlugin);\n\nconst SETTINGS = {\n  \"setting-disclaimerDismissed\": false,\n  \"setting-displayText\": false,\n  \"setting-displayImages\": true,\n  \"setting-devTools\": false,\n  \"setting-displayGatherer\": false\n};\nstore.defaults(SETTINGS);\n\nexport const getSetting = setting => {\n  return store.get(`setting-${setting}`);\n};\n\nexport const setSetting = (setting, value) => {\n  return store.set(`setting-${setting}`, value);\n};\n\nexport const toggleSetting = setting => {\n  const value = getSetting(setting);\n  return setSetting(setting, !value);\n};\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\n\nexport class Home extends Component {\n  componentDidMount = () => {};\n  render() {\n    return (\n      <div className=\"home\">\n        <Helmet title=\"Magic\">\n          <link\n            rel=\"manifest\"\n            href={process.env.PUBLIC_URL + \"/manifest.json\"}\n          />\n        </Helmet>\n        <div className=\"mt-4\">\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/planechase\"\n            block\n            color=\"info\"\n            size=\"lg\"\n          >\n            <i className=\"ms ms-planeswalker ms-4x mx-2 d-block\" />\n            <span className=\"d-block\">Planechase</span>\n          </Button>\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/archenemy\"\n            block\n            color=\"danger\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-arc ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">Archenemy</span>\n          </Button>\n          <Button tag={NavLink} exact to=\"/syb\" block color=\"success\" size=\"lg\">\n            <i className=\"ss ss-s00 ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">SYB</span>\n          </Button>\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/formats\"\n            block\n            color=\"primary\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-evg ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">Formats</span>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import store from \"store\";\n\nexport const getCurrentCard = prefix => {\n  return store.get(`${prefix}-currentCard`);\n};\n\nexport const setCurrentCard = (prefix, card) => {\n  return store.set(`${prefix}-currentCard`, card);\n};\n\nexport const getRevealedCards = prefix => {\n  return store.get(`${prefix}-revealedCards`);\n};\n\nexport const setRevealedCards = (prefix, cards) => {\n  return store.set(`${prefix}-revealedCards`, cards);\n};\n\nexport const getAdditionalCards = prefix => {\n  return store.get(`${prefix}-additionalCards`);\n};\n\nexport const setAdditionalCards = (prefix, cards) => {\n  return store.set(`${prefix}-additionalCards`, cards);\n};\n\nexport const getScryCards = prefix => {\n  return store.get(`${prefix}-scryCards`);\n};\n\nexport const setScryCards = (prefix, cards) => {\n  return store.set(`${prefix}-scryCards`, cards);\n};\n\nexport const hasCustomProperty = (property, card) => {\n  return card && card.customProperties.find(p => p.name === property);\n};\n\nexport const getCounterType = card => {\n  const property = card.customProperties.find(p => p.name === \"counter\");\n  return property.type;\n};\n\nexport const gathererImageURL = card => {\n  return `http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=${\n    card.multiverse_ids[0]\n  }&type=card`;\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { gathererImageURL } from \"../../mtg/card.js\";\n\nexport const PlanechaseHelmet = ({ planes }) => {\n  return (\n    <Helmet title=\"Planechase\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/planechase-manifest.json\"}\n      />\n      {planes &&\n        planes.map(p => (\n          <link\n            rel=\"preload\"\n            href={gathererImageURL(p)}\n            as=\"image\"\n            key={p.id}\n          />\n        ))}\n    </Helmet>\n  );\n};\n","import store from \"store\";\nimport uuidv4 from \"uuid/v4\";\n\nexport const moveCard = (prefix, from, to) => {\n  const deck = getCurrentDeck(prefix);\n  deck.splice(to, 0, deck.splice(from, 1)[0]);\n  storeCurrentDeck(prefix, deck);\n};\n\nexport const getOrCreateCurrentDeck = (prefix, cards, reset = false) => {\n  let deck = getCurrentDeck(prefix);\n  if (!deck || reset) {\n    console.log(`Creating New ${prefix} Deck`);\n    // Clone all the cards so that we aren't modifying original objects\n    const clonedCard = JSON.parse(JSON.stringify(cards));\n    // Add Deck Card Id so that each card in the deck has a unique value\n    clonedCard.forEach(c => (c.deck_card_id = uuidv4()));\n    deck = shuffle(clonedCard);\n    store.set(`${prefix}-history`, []);\n    storeCurrentDeck(prefix, deck);\n  }\n  return deck;\n};\n\nexport const getCurrentDeck = prefix => {\n  return store.get(`${prefix}-deck`);\n};\n\nexport const storeCurrentDeck = (prefix, deck) => {\n  return store.set(`${prefix}-deck`, deck);\n};\n\nexport const drawCard = prefix => {\n  const deck = getCurrentDeck(prefix);\n  const card = deck.shift();\n  if (card) {\n    updateHistory(prefix, card);\n  }\n  storeCurrentDeck(prefix, deck);\n  return card;\n};\n\nexport const updateHistory = (prefix, card) => {\n  const history = store.get(`${prefix}-history`);\n  history.push(card);\n  store.set(`${prefix}-history`, history);\n};\n\nexport const getHistory = (prefix, card) => {\n  return store.get(`${prefix}-history`);\n};\n\nexport const undoDraw = prefix => {\n  const history = store.get(`${prefix}-history`);\n  const card = history.pop();\n  if (card) {\n    addCardsToTop(prefix, [card]);\n  }\n  store.set(`${prefix}-history`, history);\n  return history[history.length - 1];\n};\n\nexport const addCardsToTop = (prefix, topCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, topCards.concat(deck));\n};\n\nexport const addCardsToBottom = (prefix, bottomCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, deck.concat(bottomCards));\n};\n\nexport const deckSize = prefix => {\n  return getCurrentDeck(prefix).length;\n};\n\nexport const findCard = (prefix, card) => {\n  return findCardByDeckCardId(prefix, card.deck_card_id);\n};\n\nexport const findCardByDeckCardId = (prefix, deckCardId) => {\n  const deck = getCurrentDeck(prefix);\n  return deck.find(c => c.deck_card_id === deckCardId);\n};\n\nexport const findAndPutOnTop = (prefix, deckCardId) => {\n  const tmpCard = findCardByDeckCardId(prefix, deckCardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToTop(prefix, [tmpCard]);\n  }\n};\n\nexport const findAndPutOnBottom = (prefix, deckCardId) => {\n  const tmpCard = findCardByDeckCardId(prefix, deckCardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToBottom(prefix, [tmpCard]);\n  }\n};\n\nexport const removeCards = (prefix, cardsToRemove) => {\n  const deck = getCurrentDeck(prefix);\n  const filteredDeck = deck.filter(\n    c => !cardsToRemove.find(r => r.deck_card_id === c.deck_card_id)\n  );\n  storeCurrentDeck(prefix, filteredDeck);\n};\n\nexport const revealCards = (prefix, numReveal, onlyPlanes = false) => {\n  const revealedCards = [];\n  const deck = getCurrentDeck(prefix);\n  const count = Math.min(deck.length, numReveal);\n\n  let planes = 0;\n  let tmpCount = count;\n  for (let i = 0; i < tmpCount; i++) {\n    revealedCards.push(deck[i]);\n\n    if (onlyPlanes) {\n      if (deck[i].type_line.search(\"Plane\") >= 0) {\n        planes++;\n      }\n\n      if (i === tmpCount - 1 && planes < count) {\n        tmpCount++;\n      }\n    }\n  }\n\n  return revealedCards;\n};\n\nexport const shuffle = array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\n// \tfunction showHistory(){\n// \t\tforeach( $_SESSION[ $this->prefix . 'history'] as $card){\n// \t\t\techo Card::displayHoverCardName($card, '', 'card');\n// \t\t}\n//\n// \t}\n//\n// \tfunction showRemainingCards(){\n// \t\tforeach(  $_SESSION[ $this->prefix . 'deck'] as $card){\n// \t\t echo Card::displayHoverCardName($card, $classes='');\n// \t\t}\n// \t}\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport store from \"store\";\n// TODO use expire store\nexport const internet = axios.create();\n\nconst PLANES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Aplane+or+t%3Aphenomenon&unique=cards\";\n\nconst SCHEMES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Ascheme&unique=cards\";\n\nexport const getAllPlanechaseCards = async () => {\n  try {\n    let planes = cached(\"planes\");\n    if (!planes) {\n      console.log(\"Loading from Axios\");\n      let response = await internet.get(PLANES_URL);\n      planes = response.data.data;\n      planes = planes.map(p => addAdditionalProperties(p));\n      cache(\"planes\", planes);\n      // TODO use the expire store parameter\n    } else {\n      console.log(\"Loaded from store\");\n    }\n    return planes;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const getAllArchenemyCards = async () => {\n  try {\n    let schemes = cached(\"schemes\");\n    if (!schemes) {\n      console.log(\"Loading from Axios\");\n      let response = await internet.get(SCHEMES_URL);\n      schemes = response.data.data;\n      schemes = schemes.map(p => addAdditionalProperties(p));\n      cache(\"schemes\", schemes);\n      // TODO use the expire store parameter\n    } else {\n      console.log(\"Loaded from store\");\n    }\n    return schemes;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nfunction addAdditionalProperties(card) {\n  const properties = {\n    Aretopolis: [{ name: \"counter\", type: \"Scroll\" }],\n    \"Chaotic Aether\": [{ name: \"all-chaos\" }],\n    \"Interplanar Tunnel\": [{ name: \"top-5\" }],\n    \"Kilnspire District\": [{ name: \"counter\", type: \"Charge\" }],\n    \"Mount Keralia\": [{ name: \"counter\", type: \"Pressure\" }],\n    \"Naar Isle\": [{ name: \"counter\", type: \"Flame\" }],\n    \"Spatial Merging\": [{ name: \"two-planes\" }],\n    \"Stairs to Infinity\": [{ name: \"chaos-trigger\" }, { name: \"scry-1\" }],\n    \"Pools of Becoming\": [{ name: \"chaos-trigger\" }, { name: \"triple-chaos\" }],\n    \"Your Inescapable Doom\": [\n      { name: \"unabandonable\" },\n      { name: \"counter\", type: \"Doom\" }\n    ]\n  };\n\n  if (properties[card.name]) {\n    card.customProperties = properties[card.name];\n  } else {\n    card.customProperties = [];\n  }\n\n  card.oracle_html = createMarkup(card.oracle_text);\n\n  return card;\n}\n\nfunction createMarkup(text) {\n  text = text.replace(/\\r\\n/g, \"<br />\").replace(/[\\r\\n]/g, \"<br />\");\n  text = text.replace(/{CHAOS}/g, '<i class=\"ms ms-chaos\"></i>');\n  text = text.replace(/CHAOS/g, '<i class=\"ms ms-chaos\"></i>');\n  text = text.replace(/{W}/g, '<i class=\"ms ms-w ms-cost\"></i>');\n  text = text.replace(/{U}/g, '<i class=\"ms ms-u ms-cost\"></i>');\n  text = text.replace(/{B}/g, '<i class=\"ms ms-b ms-cost\"></i>');\n  text = text.replace(/{R}/g, '<i class=\"ms ms-r ms-cost\"></i>');\n  text = text.replace(/{G}/g, '<i class=\"ms ms-g ms-cost\"></i>');\n  text = text.replace(/\\{1\\}/g, '<i class=\"ms ms-1 ms-cost\"></i>');\n  text = text.replace(/\\{2\\}/g, '<i class=\"ms ms-2 ms-cost\"></i>');\n  text = text.replace(/\\{3\\}/g, '<i class=\"ms ms-3 ms-cost\"></i>');\n  text = text.replace(/\\{T\\}/g, '<i class=\"ms ms-tap\"></i>');\n  text = text.replace(/{X}/g, '<i class=\"ms ms-x ms-cost\"></i>');\n  text = text.replace(/X/g, '<i class=\"ms ms-x\"></i>');\n  text = text.replace(/\\((.*)\\)/g, \"<small><em>($1)</em></small>\");\n  return { __html: text };\n}\n\nfunction cached(prefix) {\n  let data = store.get(prefix);\n  let cacheDate = store.get(`${prefix}-fetched`);\n  if (data && !old(cacheDate)) {\n    return data;\n  }\n  return null;\n}\n\nfunction cache(prefix, data) {\n  store.set(prefix, data);\n  store.set(`${prefix}-fetched`, moment().unix());\n}\n\nfunction old(time) {\n  return time && moment().diff(moment.unix(time), \"days\") > 5;\n}\n","import React, { Component } from \"react\";\n\nexport class Loading extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dotsCount: props.start || 0\n    };\n  }\n\n  componentDidMount() {\n    const { interval = 500 } = this.props;\n\n    this.dotsInterval = setInterval(() => {\n      this.setState({ dotsCount: this.state.dotsCount + 1 });\n    }, interval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.dotsInterval);\n  }\n\n  getDotString(count, max, char = \".\") {\n    let numDots = count % (max + 1);\n    let dots = \"\";\n\n    for (let i = 0; i < numDots; i++) {\n      dots += char;\n    }\n\n    return dots;\n  }\n\n  render() {\n    const { label = \"Loading\", className, numDots = 3 } = this.props;\n    const { dotsCount } = this.state;\n    let dots = this.getDotString(dotsCount, numDots, \".\");\n    let classes = `loading-dots ${className}`;\n\n    return (\n      <span className={classes}>\n        {label}\n        {dots}\n      </span>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { getCounterType } from \"../../mtg/card.js\";\nexport class Counter extends Component {\n  state = {\n    counter: 0\n  };\n\n  incrementCounter = () => {\n    const { counter } = this.state;\n    this.setState({ counter: counter + 1 });\n  };\n\n  render() {\n    const { card } = this.props;\n    const { counter } = this.state;\n    const type = getCounterType(card);\n    return (\n      <div>\n        <h1 className=\"text-shadow noselect\">{counter}</h1>\n        <Button\n          onClick={this.incrementCounter}\n          color=\"dark\"\n          size=\"lg\"\n          className=\"btn-translucent\"\n        >\n          <h3 className=\"mb-0\">Add {type} Counter</h3>\n        </Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardImgOverlay,\n  CardTitle,\n  CardBody,\n  CardSubtitle,\n  CardText,\n  CardFooter,\n  ListGroupItem,\n  Modal,\n  ModalBody\n} from \"reactstrap\";\nimport { gathererImageURL } from \"../../mtg/card\";\nimport back from \"../../images/planechase-back.jpg\";\nimport { Counter } from \"./Counter\";\nimport \"./planes.scss\";\n\nimport { hasCustomProperty } from \"../../mtg/card.js\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Plane extends Component {\n  state = {\n    modalOpen: false\n  };\n\n  toggleModal = () => {\n    console.log(\"Toggle Modal\");\n    this.setState({ modalOpen: !this.state.modalOpen });\n  };\n\n  render() {\n    const { listDisplay, card, children } = this.props;\n    if (listDisplay) {\n      return (\n        <>\n          <ListGroupItem color=\"dark\" onClick={this.toggleModal}>\n            <div>{card.name}</div>\n          </ListGroupItem>\n          <Modal\n            isOpen={this.state.modalOpen}\n            toggle={this.toggleModal}\n            size=\"md\"\n            backdrop={true}\n            contentClassName=\"bg-secondary\"\n          >\n            <ModalBody className=\"p-0\" centered=\"true\">\n              <Plane card={card} />\n              {children}\n            </ModalBody>\n          </Modal>\n        </>\n      );\n    } else {\n      return (\n        <Card inverse className=\"mtg-plane-card\">\n          {this.renderImage()}\n          {this.renderCounter()}\n          {this.renderChildren()}\n          {this.renderBody()}\n          {this.renderActions()}\n        </Card>\n      );\n    }\n  }\n\n  renderBody() {\n    const text = this.renderText();\n    const hasBody = text;\n\n    return hasBody && <CardBody>{text}</CardBody>;\n  }\n\n  renderCounter() {\n    const { card, renderActions } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    const hasCounters = hasCustomProperty(\"counter\", card);\n    if (renderActions && hasCounters) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center plane-overlay counter-overlay\">\n            <CardTitle className=\"text-center\">\n              <Counter card={card} />\n            </CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return (\n          <CardBody className=\"text-center pb-0\">\n            <Counter card={card} />\n          </CardBody>\n        );\n      }\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    if (children) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center plane-overlay child-overlay\">\n            <CardTitle className=\"text-center\">{children}</CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return <CardBody className=\"text-center pb-0\">{children}</CardBody>;\n      }\n    }\n  }\n\n  renderActions() {\n    const { card } = this.props;\n    const displayGatherer = getSetting(\"displayGatherer\");\n    if (displayGatherer && card) {\n      return (\n        <CardFooter>\n          <a\n            href={card.related_uris[\"gatherer\"]}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatherer\n          </a>\n        </CardFooter>\n      );\n    }\n  }\n\n  renderText() {\n    const { card } = this.props;\n    const displayText = getSetting(\"displayText\");\n    if (displayText) {\n      if (card) {\n        return (\n          <>\n            <CardTitle>\n              <h5>{card.name}</h5>\n            </CardTitle>\n            <CardSubtitle>{card.type_line}</CardSubtitle>\n            <CardText dangerouslySetInnerHTML={card.oracle_html} />\n          </>\n        );\n      } else {\n        return <CardTitle>None</CardTitle>;\n      }\n    }\n  }\n\n  renderImage() {\n    const displayImages = getSetting(\"displayImages\");\n    if (displayImages) {\n      return (\n        <CardImg\n          top\n          width=\"100%\"\n          src={this.imageURI()}\n          className=\"mtg-card mtg-card-plane\"\n        />\n      );\n    }\n  }\n\n  imageURI() {\n    const { card } = this.props;\n    if (card) {\n      // Use   Scryfall and rotate or use Gatherer\n      // scryfall (rotated) card.image_uris[\"border_crop\"]\n      return gathererImageURL(card);\n    } else {\n      return back;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Alert,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Fade,\n  ListGroup,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  ListGroupItem\n} from \"reactstrap\";\nimport { PlanechaseHelmet } from \"./Helmet\";\nimport {\n  getCurrentDeck,\n  getOrCreateCurrentDeck,\n  drawCard,\n  undoDraw,\n  revealCards,\n  addCardsToBottom,\n  removeCards,\n  shuffle,\n  addCardsToTop,\n  getHistory,\n  updateHistory,\n  findAndPutOnBottom,\n  findAndPutOnTop,\n  moveCard\n} from \"../../mtg/deck.js\";\nimport {\n  getCurrentCard,\n  setCurrentCard,\n  hasCustomProperty,\n  setRevealedCards,\n  getRevealedCards,\n  setAdditionalCards,\n  getAdditionalCards,\n  setScryCards,\n  getScryCards\n} from \"../../mtg/card.js\";\nimport { getAllPlanechaseCards } from \"../../util/api.js\";\nimport { Loading } from \"../../components/Loading\";\nimport { Plane } from \"../../components/magic/Plane\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Planechase extends Component {\n  state = {\n    loading: false,\n    planes: [],\n    deck: null,\n    currentCard: null,\n    revealedCards: [],\n    additionalCards: [],\n    scryCards: [],\n    tripleChaosModalOpen: false,\n    scryModalOpen: false,\n    planeswalkDisabled: false,\n    showHistory: false,\n    showDeck: false,\n    showDeckImages: false\n  };\n\n  componentDidMount = async () => {\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes);\n    const currentCard = getCurrentCard(\"planechase\");\n    const revealedCards = getRevealedCards(\"planechase\") || [];\n    const scryCards = getScryCards(\"planechase\") || [];\n    const additionalCards = getAdditionalCards(\"planechase\");\n    const planeswalkDisabled = !!hasCustomProperty(\"top-5\", currentCard);\n    const scryModalOpen =\n      scryCards.length > 0 && !!hasCustomProperty(\"scry-1\", currentCard);\n    this.setState({\n      planes,\n      loading: false,\n      deck,\n      currentCard,\n      revealedCards,\n      additionalCards,\n      scryCards,\n      planeswalkDisabled,\n      scryModalOpen\n    });\n  };\n\n  refreshDeck = () => {\n    const deck = getCurrentDeck(\"planechase\");\n    this.setState({ deck });\n  };\n\n  planeswalk = () => {\n    const currentCard = drawCard(\"planechase\");\n    setCurrentCard(\"planechase\", currentCard);\n    let revealedCards = [];\n    let additionalCards = [];\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      revealedCards = revealCards(\"planechase\", 2, true);\n      removeCards(\"planechase\", revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      const revealedPhenomenon = revealedCards.filter(\n        c => c.type_line.search(\"Phenomenon\") >= 0\n      );\n      revealedPlanes.forEach(c => updateHistory(\"planechase\", c));\n      addCardsToBottom(\"planechase\", revealedPhenomenon);\n      revealedCards = [];\n      additionalCards = revealedPlanes;\n    }\n\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      revealedCards = revealCards(\"planechase\", 5, true);\n      removeCards(\"planechase\", revealedCards);\n      this.setState({ planeswalkDisabled: true });\n    }\n\n    setRevealedCards(\"planechase\", revealedCards);\n    setAdditionalCards(\"planechase\", additionalCards);\n    this.refreshDeck();\n    this.setState({ currentCard, revealedCards, additionalCards });\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes, true);\n    const currentCard = setCurrentCard(\"planechase\", null);\n    const revealedCards = setRevealedCards(\"planechase\", []);\n    const scryCards = setScryCards(\"planechase\", []);\n    const additionalCards = setAdditionalCards(\"planechase\", []);\n    this.setState({\n      planes,\n      loading: false,\n      deck,\n      currentCard,\n      revealedCards,\n      scryCards,\n      additionalCards,\n      planeswalkDisabled: false,\n      scryModalOpen: false\n    });\n  };\n\n  undo = async () => {\n    const currentCard = undoDraw(\"planechase\");\n    this.refreshDeck();\n    this.setState({ currentCard });\n  };\n\n  triggerChaos = card => {\n    const { scryCards } = this.state;\n    console.log(\"Chaos Triggered\");\n    if (hasCustomProperty(\"triple-chaos\", card)) {\n      const newRevealedCards = revealCards(\"planechase\", 3, true);\n      removeCards(\"planechase\", newRevealedCards);\n      const shuffledCards = shuffle(newRevealedCards.slice());\n      addCardsToBottom(\"planechase\", shuffledCards);\n      this.refreshDeck();\n      setRevealedCards(\"planechase\", newRevealedCards);\n      this.setState({\n        revealedCards: newRevealedCards,\n        tripleChaosModalOpen: true\n      });\n    }\n\n    if (hasCustomProperty(\"scry-1\", card)) {\n      if (!scryCards || scryCards.length === 0) {\n        const newScryCards = revealCards(\"planechase\", 1, false);\n        removeCards(\"planechase\", newScryCards);\n        setScryCards(\"planechase\", newScryCards);\n        this.setState({ scryCards: newScryCards });\n      }\n      this.setState({ scryModalOpen: true });\n    }\n  };\n\n  render() {\n    const {\n      loading,\n      planes,\n      deck,\n      currentCard,\n      planeswalkDisabled\n    } = this.state;\n\n    return (\n      <div className=\"planechase\">\n        <PlanechaseHelmet planes={planes} />\n        <div className=\"fixed-top mt-1 ml-1 w-25 text-left\">\n          <Button\n            onClick={this.planeswalk}\n            className=\"mb-2\"\n            color=\"success\"\n            disabled={planeswalkDisabled || loading}\n            block\n          >\n            <i className=\"ms ms-planeswalker ms-2x mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Planeswalk</span>\n          </Button>\n        </div>\n\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : (\n          <div className=\"mb-2\">\n            {currentCard ? (\n              <Fade key={currentCard.deck_card_id} timeout={100}>\n                <Plane card={currentCard} renderActions=\"true\">\n                  {this.renderChaos(currentCard)}\n                </Plane>\n              </Fade>\n            ) : (\n              <Plane />\n            )}\n          </div>\n        )}\n        {this.renderTwoPlanes()}\n        {this.renderFivePlanes()}\n        {this.renderTripleChaosModal()}\n        {this.renderScryModal()}\n        {this.renderHistory()}\n\n        <p className=\"text-center my-3 noselect\">\n          There are {deck ? deck.length : 0} cards remaining.\n        </p>\n        <Button onClick={this.reset} color=\"danger\" block>\n          Reset\n        </Button>\n\n        {this.renderDevTools()}\n      </div>\n    );\n  }\n\n  renderDevTools = () => {\n    const devTools = getSetting(\"devTools\");\n    if (devTools) {\n      return (\n        <div className=\"my-4\">\n          <h5 className=\"text-center noselect\">Dev Tools</h5>\n          <Button onClick={this.undo} color=\"warning\" block>\n            Undo\n          </Button>\n          {this.renderDeck()}\n        </div>\n      );\n    }\n  };\n\n  toggleDeck = () => {\n    this.setState({ showDeck: !this.state.showDeck });\n  };\n\n  toggleDeckImages = () => {\n    this.setState({ showDeckImages: !this.state.showDeckImages });\n  };\n\n  manipulateDeck = () => {\n    this.refreshDeck();\n  };\n\n  renderDeck = () => {\n    const { deck, showDeck, showDeckImages } = this.state;\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleDeck} block>\n          {showDeck ? \"Hide\" : \"Show\"} Deck\n        </Button>\n        <Fade in={showDeck}>\n          {showDeck && (\n            <>\n              <Button onClick={this.toggleDeckImages} block>\n                {showDeckImages ? \"Hide\" : \"Show\"} Full Card\n              </Button>\n              <ListGroup>\n                {deck.map((p, i) => (\n                  <React.Fragment key={p.deck_card_id}>\n                    <Plane card={p} listDisplay={!showDeckImages} />\n                    <ListGroupItem className=\"text-center justify-content-center d-flex\">\n                      <ButtonToolbar>\n                        <ButtonGroup>\n                          <Button\n                            disabled={i === 0}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                moveCard(\"planechase\", i, i - 1)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n                          </Button>\n                          <Button\n                            disabled={i === deck.length - 1}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                moveCard(\"planechase\", i, i + 1)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"ml-2\">\n                          <Button\n                            disabled={i === 0}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                findAndPutOnTop(\"planechase\", p.deck_card_id)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-untap ms-2x ss-mythic ss-grad\" />\n                          </Button>\n                          <Button\n                            disabled={i === deck.length - 1}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                findAndPutOnBottom(\"planechase\", p.deck_card_id)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-tap ms-2x ss-mythic ss-grad\" />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"ml-2\">\n                          <Button\n                            color=\"danger\"\n                            onClick={() =>\n                              this.manipulateDeck(\n                                removeCards(\"planechase\", [p])\n                              )\n                            }\n                          >\n                            <i className=\"ss ss-x ss-10e ss-rare ss-grad ss-2x\" />\n                          </Button>\n                        </ButtonGroup>\n                      </ButtonToolbar>\n                    </ListGroupItem>\n                  </React.Fragment>\n                ))}\n              </ListGroup>\n            </>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  };\n\n  renderHistory = () => {\n    const { showHistory } = this.state;\n    const history = getHistory(\"planechase\");\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleHistory} block>\n          {showHistory ? \"Hide\" : \"Show\"} History\n        </Button>\n        <Fade in={showHistory}>\n          {showHistory && history && (\n            <ListGroup>\n              {history.reverse().map(p => (\n                <Plane card={p} key={p.deck_card_id} listDisplay={true} />\n              ))}\n            </ListGroup>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n\n  renderChaos(card) {\n    const hasChaos = hasCustomProperty(\"chaos-trigger\", card);\n    if (hasChaos) {\n      return (\n        <Button\n          onClick={() => this.triggerChaos(card)}\n          color=\"info\"\n          size=\"lg\"\n          className=\"btn-translucent\"\n        >\n          <i className=\"ms ms-chaos ms-2x mx-2\" />\n          <span className=\"mx-2 d-none d-md-inline\">Trigger Chaos</span>\n        </Button>\n      );\n    }\n  }\n\n  renderTwoPlanes() {\n    const { currentCard, additionalCards } = this.state;\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      const revealedPlanes = additionalCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      // TODO chaos etc\n      return (\n        <div>\n          <Alert color=\"info\" className=\"text-center mb-0\">\n            <i className=\"ms ms-planeswalker mx-2\" />\n            You Are On Both Planes\n            <i className=\"ms ms-planeswalker mx-2\" />\n          </Alert>\n          {revealedPlanes.map(c => (\n            <React.Fragment key={c.deck_card_id}>\n              <Plane card={c} renderActions=\"true\">\n                {this.renderChaos(c)}\n              </Plane>\n            </React.Fragment>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  selectPlane = card => {\n    const { revealedCards } = this.state;\n    removeCards(\"planechase\", revealedCards);\n    addCardsToTop(\"planechase\", [card]);\n    const restCards = revealedCards.filter(\n      c => c.deck_card_id !== card.deck_card_id\n    );\n    const shuffledCards = shuffle(restCards.slice());\n    addCardsToBottom(\"planechase\", shuffledCards);\n    setRevealedCards(\"planechase\", []);\n    this.setState({ planeswalkDisabled: false, revealedCards: [] });\n    this.planeswalk();\n  };\n\n  renderFivePlanes() {\n    const { currentCard, revealedCards } = this.state;\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      console.log(revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      console.log(revealedPlanes);\n      // TODO Countes, chaos etc\n      return (\n        <div>\n          <Alert color=\"info\" className=\"text-center mb-0\">\n            <i className=\"ms ms-planeswalker mx-2\" />\n            Pick a Plane to Planeswalk To\n            <i className=\"ms ms-planeswalker mx-2\" />\n          </Alert>\n          {revealedPlanes.map(c => (\n            <div key={c.deck_card_id}>\n              <Plane card={c}>\n                <Button\n                  onClick={() => this.selectPlane(c)}\n                  color=\"primary\"\n                  className=\"btn-translucent\"\n                  size=\"lg\"\n                >\n                  <i className=\"ms ms-planeswalker mx-2\" />\n                  <span className=\"mx-2\">Planeswalk</span>\n                </Button>\n              </Plane>\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  _tripleChaosModalClose = () => {\n    setRevealedCards(\"planechase\", []);\n    this.setState({\n      tripleChaosModalOpen: false,\n      revealedCards: []\n    });\n  };\n\n  _tripleChaosModalToggle = () => {\n    if (this.state.tripleChaosModalOpen) {\n      this._tripleChaosModalClose();\n    }\n  };\n\n  renderTripleChaosModal() {\n    const { revealedCards, tripleChaosModalOpen } = this.state;\n    if (revealedCards && tripleChaosModalOpen) {\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      return (\n        <Modal\n          isOpen={!!tripleChaosModalOpen}\n          toggle={this._tripleChaosModalToggle}\n          onClosed={this._tripleChaosModalClose}\n          size=\"md\"\n          backdrop={true}\n          contentClassName=\"bg-secondary\"\n        >\n          <ModalHeader className=\"justify-content-center text-center text-white\">\n            <div>\n              <i className=\"ms ms-chaos mr-1\" />\n              <i className=\"ms ms-chaos mr-1\" />\n              <i className=\"ms ms-chaos mr-1\" />\n              <span className=\"mx-1\">Triple Chaos</span>\n              <i className=\"ms ms-chaos ml-1\" />\n              <i className=\"ms ms-chaos ml-1\" />\n              <i className=\"ms ms-chaos ml-1\" />\n            </div>\n            <div>\n              <small className=\"text-center\">You Pick Order</small>\n            </div>\n          </ModalHeader>\n          <ModalBody className=\"text-center\">\n            {revealedPlanes.map(c => (\n              <React.Fragment key={c.deck_card_id}>\n                <Plane card={c}>{this.renderChaos(c)}</Plane>\n              </React.Fragment>\n            ))}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"info\"\n              block\n              aria-label=\"Close\"\n              onClick={this._tripleChaosModalClose}\n            >\n              Done\n            </Button>\n          </ModalFooter>\n        </Modal>\n      );\n    }\n  }\n\n  _scryModalClose = () => {\n    setScryCards(\"planechase\", []);\n    this.setState({\n      scryModalOpen: false,\n      scryCards: []\n    });\n  };\n\n  _scryTop = () => {\n    const { scryCards } = this.state;\n    addCardsToTop(\"planechase\", scryCards);\n    console.log(\"Scry Top\", scryCards);\n    this.refreshDeck();\n    setScryCards(\"planechase\", []);\n    this.setState({ scryCards: [], scryModalOpen: false });\n  };\n\n  _scryBottom = () => {\n    const { scryCards } = this.state;\n    addCardsToBottom(\"planechase\", scryCards);\n    console.log(\"Scry Bottom\", scryCards);\n    this.refreshDeck();\n    setScryCards(\"planechase\", []);\n    this.setState({ scryCards: [], scryModalOpen: false });\n  };\n\n  renderScryModal = () => {\n    const { scryCards, scryModalOpen } = this.state;\n    if (scryCards && scryModalOpen) {\n      return (\n        <Modal\n          isOpen={!!scryModalOpen}\n          size=\"md\"\n          contentClassName=\"bg-secondary\"\n        >\n          <ModalHeader className=\"justify-content-center text-white\">\n            <i className=\"ms ms-chaos mx-4\" />\n            Scry Card\n            <i className=\"ms ms-chaos mx-4\" />\n          </ModalHeader>\n          <ModalBody>\n            <Button color=\"info\" block onClick={this._scryTop}>\n              Top\n            </Button>\n            {scryCards.map(c => (\n              <Plane card={c} key={c.deck_card_id} />\n            ))}\n            <Button color=\"info\" block onClick={this._scryBottom}>\n              Bottom\n            </Button>\n          </ModalBody>\n        </Modal>\n      );\n    }\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport const ArchenemyHelmet = ({ schemes }) => {\n  return (\n    <Helmet title=\"Archenemy\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/archenemy-manifest.json\"}\n      />\n      {schemes &&\n        schemes.map(p => (\n          <link\n            rel=\"preload\"\n            href={p.image_uris[\"large\"]}\n            as=\"image\"\n            key={p.id}\n          />\n        ))}\n    </Helmet>\n  );\n};\n","export const getDeckList = () => {\n  return DECKS.map(s => s.name);\n};\n\nexport const getCardList = (deckname, schemes) => {\n  const deck = DECKS.find(s => s.name === deckname);\n  return deck.cards.map(c => {\n    const scheme = schemes.find(s => s.name === c[0]);\n    const clonedCard = JSON.parse(JSON.stringify(scheme));\n    clonedCard.count = c[1];\n    return clonedCard;\n  });\n};\nconst DECKS = [\n  {\n    name: \"Assemble the Doomsday Machine\",\n    cards: [\n      [\"All in Good Time\", 1],\n      [\"Behold the Power of Destruction\", 1],\n      [\"Embrace My Diabolical Vision\", 1],\n      [\"Feed the Machine\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"I Know All, I See All\", 2],\n      [\"Ignite the Cloneforge!\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"The Iron Guardian Stirs\", 2],\n      [\"My Genius Knows No Bounds\", 1],\n      [\"Nothing Can Stop Me Now\", 1],\n      [\"The Pieces Are Coming Together\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Scorch the World with Dragonfire\",\n    cards: [\n      [\"All Shall Smolder in My Wake\", 2],\n      [\"Approach My Molten Realm\", 1],\n      [\"The Fate of the Flammable\", 1],\n      [\"I Bask in Your Silent Awe\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"Know Naught but Fire\", 1],\n      [\"Look Skyward and Despair\", 2],\n      [\"My Crushing Masterstroke\", 1],\n      [\"My Wish Is Your Command\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Tooth, Claw, and Tail\", 1],\n      [\"Which of You Burns Brightest?\", 2],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Trample Civilization Underfoot\",\n    cards: [\n      [\"Every Last Vestige Shall Rot\", 2],\n      [\"Evil Comes to Fruition\", 1],\n      [\"I Call on the Ancient Magics\", 1],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Into the Earthen Maw\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"May Civilization Collapse\", 1],\n      [\"Nature Demands an Offering\", 2],\n      [\"Nature Shields Its Own\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Roots of All Evil\", 2],\n      [\"The Very Soil Shall Shake\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1],\n      [\"Your Will Is Not Your Own\", 2]\n    ]\n  },\n  {\n    name: \"Bring About the Undead Apocalypse\",\n    cards: [\n      [\"Choose Your Champion\", 2],\n      [\"Dance, Pathetic Marionette\", 1],\n      [\"The Dead Shall Serve\", 2],\n      [\"Every Hope Shall Vanish\", 2],\n      [\"I Delight in Your Convulsions\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"Mortal Flesh Is Weak\", 1],\n      [\"My Undead Horde Awakens\", 1],\n      [\"Only Blood Ends Your Nightmares\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Rotted Ones, Lay Siege\", 2],\n      [\"Surrender Your Thoughts\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Archenemy Nicol Bolas\",\n    cards: [\n      [\"Because I Have Willed It\", 1],\n      [\"Behold My Grandeur\", 1],\n      [\"Bow to My Command\", 1],\n      [\"Choose Your Demise\", 1],\n      [\"Delight in the Hunt\", 1],\n      [\"Every Dream a Nightmare\", 1],\n      [\"For Each of You, a Gift\", 1],\n      [\"Know Evil\", 1],\n      [\"Make Yourself Useful\", 1],\n      [\"The Mighty Will Fall\", 1],\n      [\"My Forces Are Innumerable\", 1],\n      [\"My Laughter Echoes\", 1],\n      [\"No One Will Hear Your Cries\", 1],\n      [\"Pay Tribute to Me\", 1],\n      [\"Power Without Equal\", 1],\n      [\"A Reckoning Approaches\", 1],\n      [\"There Is No Refuge\", 1],\n      [\"This World Belongs to Me\", 1],\n      [\"What's Yours Is Now Mine\", 1],\n      [\"When Will You Learn?\", 1]\n    ]\n  }\n];\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardImgOverlay,\n  CardTitle,\n  CardBody,\n  CardSubtitle,\n  CardText,\n  CardFooter,\n  ListGroupItem,\n  Modal,\n  ModalBody\n} from \"reactstrap\";\nimport back from \"../../images/archenemy-back.jpg\";\nimport { Counter } from \"./Counter\";\nimport \"./planes.scss\";\n\nimport { hasCustomProperty } from \"../../mtg/card.js\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Scheme extends Component {\n  state = {\n    modalOpen: false\n  };\n\n  toggleModal = () => {\n    console.log(\"Toggle Modal\");\n    this.setState({ modalOpen: !this.state.modalOpen });\n  };\n\n  render() {\n    const { listDisplay, card, children } = this.props;\n    if (listDisplay) {\n      return (\n        <>\n          <ListGroupItem color=\"dark\" onClick={this.toggleModal}>\n            {card.name}\n          </ListGroupItem>\n          <Modal\n            isOpen={this.state.modalOpen}\n            toggle={this.toggleModal}\n            size=\"md\"\n            backdrop={true}\n            contentClassName=\"bg-secondary\"\n          >\n            <ModalBody className=\"p-0\" centered=\"true\">\n              <Scheme card={card} />\n              {children}\n            </ModalBody>\n          </Modal>\n        </>\n      );\n    } else {\n      return (\n        <Card inverse className=\"mtg-scheme-card\">\n          {this.renderImage()}\n          {this.renderCounter()}\n          {this.renderChildren()}\n          {this.renderBody()}\n          {this.renderActions()}\n        </Card>\n      );\n    }\n  }\n\n  renderBody() {\n    const text = this.renderText();\n    const hasBody = text;\n\n    return hasBody && <CardBody>{text}</CardBody>;\n  }\n\n  renderCounter() {\n    const { card, renderActions } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    const hasCounters = hasCustomProperty(\"counter\", card);\n    if (renderActions && hasCounters) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center scheme-overlay counter-overlay\">\n            <CardTitle className=\"text-center pt-5 mt-sm-5\">\n              <Counter card={card} />\n            </CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return (\n          <CardBody className=\"text-center pb-0\">\n            <Counter card={card} />\n          </CardBody>\n        );\n      }\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    if (children) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center scheme-overlay child-overlay\">\n            <CardTitle className=\"text-center pt-5 mt-sm-5\">\n              {children}\n            </CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return <CardBody className=\"text-center pb-0\">{children}</CardBody>;\n      }\n    }\n  }\n\n  renderActions() {\n    const { card } = this.props;\n    const displayGatherer = getSetting(\"displayGatherer\");\n    if (displayGatherer && card) {\n      return (\n        <CardFooter>\n          <a\n            href={card.related_uris[\"gatherer\"]}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatherer\n          </a>\n        </CardFooter>\n      );\n    }\n  }\n\n  renderText() {\n    const { card } = this.props;\n    const displayText = getSetting(\"displayText\");\n    if (displayText) {\n      if (card) {\n        return (\n          <>\n            <CardTitle>\n              <h5>{card.name}</h5>\n            </CardTitle>\n            <CardSubtitle>{card.type_line}</CardSubtitle>\n            <CardText dangerouslySetInnerHTML={card.oracle_html} />\n          </>\n        );\n      } else {\n        return <CardTitle>None</CardTitle>;\n      }\n    }\n  }\n\n  renderImage() {\n    const displayImages = getSetting(\"displayImages\");\n    if (displayImages) {\n      return (\n        <CardImg\n          top\n          width=\"100%\"\n          src={this.imageURI()}\n          className=\"mtg-card mtg-card-scheme\"\n        />\n      );\n    }\n  }\n\n  imageURI() {\n    const { card } = this.props;\n    if (card) {\n      return card.image_uris[\"large\"];\n    } else {\n      return back;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Alert,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardTitle,\n  Fade,\n  ListGroup,\n  ListGroupItem,\n  Jumbotron,\n  Container,\n  UncontrolledCollapse\n} from \"reactstrap\";\nimport store from \"store\";\n\nimport { ArchenemyHelmet } from \"./Helmet\";\nimport { getDeckList, getCardList } from \"../../mtg/prebuilt-decks\";\nimport { getAllArchenemyCards } from \"../../util/api.js\";\nimport { Scheme } from \"../../components/magic/Scheme\";\nimport { Loading } from \"../../components/Loading\";\nimport { getSetting } from \"../../util/settings.js\";\n\nimport {\n  getCurrentDeck,\n  getOrCreateCurrentDeck,\n  storeCurrentDeck,\n  drawCard,\n  undoDraw,\n  removeCards,\n  getHistory,\n  findAndPutOnBottom,\n  findAndPutOnTop,\n  moveCard\n} from \"../../mtg/deck.js\";\nimport {\n  getCurrentCard,\n  setCurrentCard,\n  hasCustomProperty,\n  setAdditionalCards,\n  getAdditionalCards\n} from \"../../mtg/card.js\";\n\nexport class Archenemy extends Component {\n  state = {\n    loading: true,\n    deck: null,\n    currentCard: null,\n    ongoingSchemes: [],\n    schemes: [],\n    showHistory: false,\n    showDeck: false,\n    showDeckImages: false,\n    abandonedOngoing: false,\n    deckSelection: true,\n    customDeck: null\n  };\n\n  componentDidMount = async () => {\n    const schemes = await getAllArchenemyCards();\n    const deck = getCurrentDeck(\"archenemy\");\n    // TODO switch to selecting deck\n    // const deck = getCurrentDeck(\"archenemy\");\n    const currentCard = getCurrentCard(\"archenemy\");\n    const ongoingSchemes = getAdditionalCards(\"archenemy\") || [];\n    const abandonedOngoing = !!store.get(\"archenemy-abandonedOngoing\");\n    const customDeck = JSON.parse(JSON.stringify(schemes));\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({\n      currentCard,\n      deck,\n      loading: false,\n      ongoingSchemes,\n      schemes,\n      abandonedOngoing,\n      deckSelection: !deck,\n      customDeck\n    });\n  };\n\n  refreshDeck = () => {\n    const deck = getCurrentDeck(\"archenemy\");\n    this.setState({ deck });\n  };\n\n  scheme = () => {\n    const { currentCard, ongoingSchemes } = this.state;\n    if (currentCard) {\n      if (currentCard.type_line === \"Ongoing Scheme\") {\n        ongoingSchemes.push(currentCard);\n      }\n    }\n    const newCard = drawCard(\"archenemy\");\n    setCurrentCard(\"archenemy\", newCard);\n    setAdditionalCards(\"archenemy\", ongoingSchemes);\n    this.refreshDeck();\n    this.setState({\n      currentCard: newCard,\n      ongoingSchemes,\n      abandonedOngoing: store.set(\"archenemy-abandonedOngoing\", false)\n    });\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    // TODO reset to deck selection\n    const schemes = await getAllArchenemyCards();\n    const deck = null;\n    storeCurrentDeck(\"archenemy\", deck);\n    const currentCard = setCurrentCard(\"archenemy\", null);\n    const ongoingSchemes = setAdditionalCards(\"archenemy\", []);\n    const abandonedOngoing = store.set(\"archenemy-abandonedOngoing\", false);\n    const customDeck = JSON.parse(JSON.stringify(schemes));\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({\n      schemes,\n      loading: false,\n      deck,\n      currentCard,\n      ongoingSchemes,\n      abandonedOngoing,\n      deckSelection: true,\n      customDeck\n    });\n  };\n\n  undo = async () => {\n    const currentCard = undoDraw(\"archenemy\");\n    this.refreshDeck();\n    this.setState({ currentCard });\n  };\n  // TODO Cards with same id\n  render() {\n    const { loading, schemes, deckSelection } = this.state;\n\n    return (\n      <div className=\"archenemy\">\n        <ArchenemyHelmet schemes={schemes} />\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : deckSelection ? (\n          this.renderDeckSelect()\n        ) : (\n          this.renderGamePlay()\n        )}\n        {this.renderDevTools()}\n      </div>\n    );\n  }\n\n  renderGamePlay() {\n    const { loading, deck, currentCard, abandonedOngoing } = this.state;\n\n    return (\n      <>\n        <div className=\"fixed-top mt-1 ml-1 w-25 text-left\">\n          <Button\n            onClick={this.scheme}\n            className=\"mb-2\"\n            color=\"success\"\n            disabled={loading}\n            block\n          >\n            <i className=\"ss ss-arc ss-3x mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Scheme</span>\n          </Button>\n        </div>\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : (\n          <div className=\"mb-2 d-flex justify-content-center\">\n            {abandonedOngoing ? (\n              <Jumbotron className=\"bg-danger text-center\" fluid>\n                <Container fluid>\n                  <h1>Current Scheme Has Been Foiled!</h1>\n                </Container>\n              </Jumbotron>\n            ) : currentCard ? (\n              <Fade key={currentCard.deck_card_id} timeout={100}>\n                <Scheme card={currentCard} renderActions=\"true\">\n                  {this.renderAbandon(currentCard)}\n                </Scheme>\n              </Fade>\n            ) : (\n              <Scheme />\n            )}\n          </div>\n        )}\n\n        {this.renderOngoingSchemes()}\n\n        {this.renderHistory()}\n        <p className=\"text-center my-3 noselect\">\n          There are {deck ? deck.length : 0} cards remaining.\n        </p>\n        <Button onClick={this.reset} color=\"danger\" block>\n          Reset\n        </Button>\n      </>\n    );\n  }\n\n  renderDeckSelect() {\n    const { schemes } = this.state;\n    return (\n      <>\n        <Card>\n          <CardBody>\n            <CardTitle>\n              <h3 className=\"text-center\">All Schemes</h3>\n            </CardTitle>\n            <Button\n              block\n              color=\"success\"\n              onClick={() => this.selectDeck(\"All\", schemes)}\n            >\n              Use All\n            </Button>\n          </CardBody>\n        </Card>\n        {this.renderPrebuilts()}\n        {this.renderBuildCustomDeck()}\n      </>\n    );\n  }\n\n  renderOngoingSchemes() {\n    const { ongoingSchemes } = this.state;\n    if (ongoingSchemes && ongoingSchemes.length > 0) {\n      return (\n        <>\n          <Alert color=\"info\" className=\"text-center\">\n            <h5>Ongoing Schemes</h5>\n          </Alert>\n          <div className=\"d-flex justify-content-center flex-wrap \">\n            {ongoingSchemes.map(c => (\n              <React.Fragment key={c.deck_card_id}>\n                <Scheme card={c} renderActions=\"true\">\n                  {this.renderAbandon(c)}\n                </Scheme>\n              </React.Fragment>\n            ))}\n          </div>\n        </>\n      );\n    }\n  }\n\n  renderDevTools = () => {\n    const devTools = getSetting(\"devTools\");\n    if (devTools) {\n      return (\n        <div className=\"my-4\">\n          <h5 className=\"text-center noselect\">Dev Tools</h5>\n          <Button onClick={this.undo} color=\"warning\" block>\n            Undo\n          </Button>\n          {this.renderDeck()}\n        </div>\n      );\n    }\n  };\n\n  abandonScheme = card => {\n    const { ongoingSchemes, currentCard } = this.state;\n    if (currentCard.deck_card_id === card.deck_card_id) {\n      console.log(\"Abandon Current Scheme\", card);\n      setCurrentCard(\"archenemy\", null);\n      const abandonedOngoing = store.set(\"archenemy-abandonedOngoing\", true);\n      this.setState({ currentCard: null, abandonedOngoing });\n    } else {\n      console.log(\"Abandon Scheme\", card);\n      let newOngoing = ongoingSchemes.filter(\n        s => s.deck_card_id !== card.deck_card_id\n      );\n      setAdditionalCards(\"archenemy\", newOngoing);\n      this.setState({ ongoingSchemes: newOngoing });\n    }\n  };\n\n  renderAbandon(card) {\n    const isOngoing = card.type_line === \"Ongoing Scheme\";\n    if (isOngoing && !hasCustomProperty(\"unabandonable\", card)) {\n      return (\n        <Button\n          onClick={() => this.abandonScheme(card)}\n          color=\"danger\"\n          size=\"lg\"\n          className=\"btn-translucent\"\n        >\n          <h2 className=\"mb-0\">\n            <i className=\"ss ss-bok ss-2x ss-grad ss-rare mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Abandon Scheme</span>\n          </h2>\n        </Button>\n      );\n    }\n  }\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  };\n\n  renderHistory = () => {\n    const { showHistory } = this.state;\n    const history = getHistory(\"archenemy\");\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleHistory} block>\n          {showHistory ? \"Hide\" : \"Show\"} History\n        </Button>\n        <Fade in={showHistory}>\n          {showHistory && history && (\n            <ListGroup>\n              {history.reverse().map(p => (\n                <Scheme card={p} key={p.deck_card_id} listDisplay={true} />\n              ))}\n            </ListGroup>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n\n  selectDeck(name, cards) {\n    console.log(`Selected ${name}`, cards);\n\n    const newCards = name === \"All\" ? cards : [];\n    cards.forEach(c => {\n      for (let i = 0; i < c.count; i++) {\n        newCards.push(c);\n      }\n    });\n\n    const deck = getOrCreateCurrentDeck(\"archenemy\", newCards, true);\n    this.setState({\n      deck,\n      deckSelection: false\n    });\n  }\n\n  incrementCount(card) {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => {\n      if (c.id === card.id) {\n        c.count += 1;\n        c.count = Math.min(c.count, 2);\n      }\n    });\n    this.setState({ customDeck });\n  }\n\n  decrementCount(card) {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => {\n      if (c.id === card.id) {\n        c.count -= 1;\n        c.count = Math.max(c.count, 0);\n      }\n    });\n    this.setState({ customDeck });\n  }\n\n  customDeckSize() {\n    const { customDeck } = this.state;\n    const reducer = (a, b) => a + b;\n    return customDeck.map(c => c.count).reduce(reducer, 0);\n  }\n\n  resetCustomDeck = () => {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({ customDeck });\n  };\n\n  renderBuildCustomDeck() {\n    const { customDeck } = this.state;\n\n    const cardListIems = customDeck.map(card => (\n      <ListGroupItem key={card.id} color=\"dark\">\n        <Scheme card={card} />\n        <div className=\"text-center\">\n          <h1>x{card.count}</h1>\n          <ButtonGroup>\n            <Button\n              disabled={card.count <= 0}\n              onClick={() => this.decrementCount(card)}\n            >\n              <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n            </Button>\n            <Button\n              disabled={card.count >= 2}\n              onClick={() => this.incrementCount(card)}\n            >\n              <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n            </Button>\n          </ButtonGroup>\n        </div>\n      </ListGroupItem>\n    ));\n\n    return (\n      <>\n        <Card>\n          <CardBody>\n            <CardTitle>\n              <h3 className=\"text-center\">Custom Deck</h3>\n            </CardTitle>\n            <Button block id=\"custom-deck-toggle\">\n              Build Custom\n            </Button>\n            <UncontrolledCollapse toggler=\"custom-deck-toggle\">\n              <div className=\"fixed-top mt-1 ml-1 text-left\">\n                <Alert color=\"info\" className=\"clearfix\">\n                  <h4 className=\"float-left\">\n                    Custom Deck Size: {this.customDeckSize()}\n                  </h4>\n                  <ButtonGroup className=\"float-right\">\n                    <Button color=\"danger\" onClick={this.resetCustomDeck}>\n                      Reset\n                    </Button>\n                    <Button\n                      color=\"success\"\n                      onClick={() => this.selectDeck(\"Custom\", customDeck)}\n                    >\n                      Use Deck\n                    </Button>\n                  </ButtonGroup>\n                </Alert>\n              </div>\n\n              <ListGroup>{cardListIems}</ListGroup>\n            </UncontrolledCollapse>\n            <Button\n              block\n              color=\"success\"\n              onClick={() => this.selectDeck(\"Custom\", customDeck)}\n            >\n              Use Deck\n            </Button>\n          </CardBody>\n        </Card>\n      </>\n    );\n  }\n\n  renderPrebuilts() {\n    const { schemes } = this.state;\n    const prebuilts = getDeckList();\n    const prebuiltItems = prebuilts.map((prebuilt, i) => {\n      const cardList = getCardList(prebuilt, schemes);\n      const cardListIems = cardList.map((card, i) => (\n        <ListGroupItem key={i} color=\"dark\">\n          <Scheme card={card} />\n          <h1 className=\"text-center\">x{card.count}</h1>\n        </ListGroupItem>\n      ));\n      return (\n        <Card key={i}>\n          <CardBody>\n            <CardTitle>\n              <h3 className=\"text-center\">{prebuilt}</h3>\n            </CardTitle>\n            <Button block id={`prebuilt-${i}`}>\n              Decklist\n            </Button>\n            <UncontrolledCollapse toggler={`#prebuilt-${i}`}>\n              <ListGroup>{cardListIems}</ListGroup>\n            </UncontrolledCollapse>\n            <Button\n              block\n              color=\"success\"\n              onClick={() => this.selectDeck(prebuilt, cardList)}\n            >\n              Use Deck\n            </Button>\n          </CardBody>\n        </Card>\n      );\n    });\n\n    return <>{prebuiltItems}</>;\n  }\n\n  toggleDeck = () => {\n    this.setState({ showDeck: !this.state.showDeck });\n  };\n\n  toggleDeckImages = () => {\n    this.setState({ showDeckImages: !this.state.showDeckImages });\n  };\n\n  manipulateDeck = () => {\n    this.refreshDeck();\n  };\n\n  renderDeck = () => {\n    const { deck, showDeck, showDeckImages } = this.state;\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleDeck} block>\n          {showDeck ? \"Hide\" : \"Show\"} Deck\n        </Button>\n        <Fade in={showDeck}>\n          {showDeck && deck && (\n            <>\n              <Button onClick={this.toggleDeckImages} block>\n                {showDeckImages ? \"Hide\" : \"Show\"} Full Card\n              </Button>\n              <ListGroup>\n                {deck.map((p, i) => (\n                  <React.Fragment key={p.deck_card_id}>\n                    <Scheme card={p} listDisplay={!showDeckImages} />\n                    <ListGroupItem className=\"text-center justify-content-center d-flex\">\n                      <ButtonToolbar>\n                        <ButtonGroup>\n                          <Button\n                            disabled={i === 0}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                moveCard(\"archenemy\", i, i - 1)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n                          </Button>\n                          <Button\n                            disabled={i === deck.length - 1}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                moveCard(\"archenemy\", i, i + 1)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"ml-2\">\n                          <Button\n                            disabled={i === 0}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                findAndPutOnTop(\"archenemy\", p.deck_card_id)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-untap ms-2x ss-mythic ss-grad\" />\n                          </Button>\n                          <Button\n                            disabled={i === deck.length - 1}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                findAndPutOnBottom(\"archenemy\", p.deck_card_id)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-tap ms-2x ss-mythic ss-grad\" />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"ml-2\">\n                          <Button\n                            color=\"danger\"\n                            onClick={() =>\n                              this.manipulateDeck(removeCards(\"archenemy\", [p]))\n                            }\n                          >\n                            <i className=\"ss ss-x ss-10e ss-rare ss-grad ss-2x\" />\n                          </Button>\n                        </ButtonGroup>\n                      </ButtonToolbar>\n                    </ListGroupItem>\n                  </React.Fragment>\n                ))}\n              </ListGroup>\n            </>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport const SYBHelmet = () => {\n  return (\n    <Helmet title=\"SYB\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/syb-manifest.json\"}\n      />\n    </Helmet>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Button, ButtonGroup, Spinner } from \"reactstrap\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport debounce from \"lodash/debounce\";\nimport store from \"store\";\n\nimport { shuffle } from \"../../mtg/deck.js\";\n\nimport { SYBHelmet } from \"./Helmet\";\n\nconst circleLayout = { name: \"circle\", nodeDimensionsIncludeLabels: true };\nconst gridLayout = { name: \"grid\", nodeDimensionsIncludeLabels: true, rows: 2 };\n\nexport class SYB extends Component {\n  state = {\n    playerCount: 4,\n    targets: null,\n    loadingDirection: false\n  };\n\n  componentDidMount = () => {\n    const playerCount = store.get(\"syb-playerCount\") || 4;\n    const targets = store.get(\"syb-targets\") || null;\n    const tableShape = store.get(\"syb-tableShape\") || \"circle\";\n    this.setState({\n      playerCount,\n      targets,\n      tableShape\n    });\n  };\n\n  generateNodes() {\n    const { playerCount } = this.state;\n    const players = Array.from(Array(playerCount).keys());\n    return players.map(p => {\n      const label = p === 0 ? \"J\" : p;\n      return { data: { id: `player-${p}`, label, type: \"triangle-tee\" } };\n    });\n  }\n\n  generateEdges() {\n    const { targets } = this.state;\n\n    return !targets\n      ? []\n      : targets.map((player, i) => {\n          const targetIndex = i + 1 >= targets.length ? 0 : i + 1;\n          const target = targets[targetIndex];\n          // const playerContent = this.renderPlayer(player, target, playerCount);\n          return {\n            data: {\n              source: `player-${player}`,\n              target: `player-${target}`,\n              label: `Edge from ${player} to ${target}`\n            }\n          };\n        });\n  }\n\n  regenerateOrder(c) {\n    const { playerCount } = this.state;\n    const players = Array.from(Array(c || playerCount).keys());\n    const targets = store.set(\"syb-targets\", shuffle(players));\n    this.setState({ targets });\n  }\n\n  handleCy(cy) {\n    const layout = this.isSquare() ? gridLayout : circleLayout;\n    const SELECT_THRESHOLD = 100;\n\n    // Refresh Layout if needed\n    const refreshLayout = debounce(() => {\n      cy.layout(layout).run();\n    }, SELECT_THRESHOLD);\n\n    cy.on(\"add remove\", () => {\n      refreshLayout();\n    });\n  }\n\n  renderCyto() {\n    const layout = this.isSquare() ? gridLayout : circleLayout;\n    const elements = {\n      nodes: this.generateNodes(),\n      edges: this.generateEdges()\n    };\n    const stylesheet = [\n      {\n        selector: \"node\",\n        style: {\n          padding: \"50%\",\n          width: \"50%\",\n          height: \"50%\",\n          \"background-color\": \"#17a2b8\",\n          \"text-valign\": \"center\",\n          \"text-halign\": \"center\",\n          content: \"data(label)\"\n        }\n      },\n      {\n        selector: \"node[label]\",\n        style: {\n          label: \"data(label)\",\n          \"font-size\": \"2em\",\n          color: \"white\"\n        }\n      },\n      {\n        selector: \"edge\",\n        style: {\n          width: \"5%\",\n          \"curve-style\": this.isSquare() ? \"unbundled-bezier\" : \"straight\",\n          \"target-arrow-shape\": \"triangle \",\n          \"arrow-scale\": 2.5,\n          \"target-arrow-color\": \"#FF4444\",\n          \"line-fill\": \"linear-gradient\",\n          \"line-gradient-stop-colors\": [\"#17a2b8\", \"#FF4444\"]\n        }\n      }\n    ];\n\n    return (\n      <CytoscapeComponent\n        cy={cy => this.handleCy(cy)}\n        elements={CytoscapeComponent.normalizeElements(elements)}\n        style={{ width: \"100vw\", height: \"100vh\" }}\n        className={\"flex-grow\"}\n        stylesheet={stylesheet}\n        userPanningEnabled={false}\n        layout={layout}\n      />\n    );\n  }\n\n  isSquare() {\n    const { tableShape } = this.state;\n    return false && tableShape === \"square\";\n  }\n\n  incrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\"syb-playerCount\", playerCount + 1);\n    this.regenerateOrder(newPlayerCount);\n    this.setState({ playerCount: newPlayerCount });\n  }\n\n  decrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\n      \"syb-playerCount\",\n      Math.max(playerCount - 1, 1)\n    );\n    this.regenerateOrder(newPlayerCount);\n    this.setState({ playerCount: newPlayerCount });\n  }\n\n  setTableShape(shape) {\n    const tableShape = store.set(\"syb-tableShape\", shape);\n    this.setState({ tableShape });\n  }\n\n  whichWay = () => {\n    const targets = store.set(\"syb-targets\", null);\n    this.setState({ loadingDirection: true, targets });\n\n    setTimeout(() => {\n      this.regenerateOrder();\n      this.setState({ loadingDirection: false });\n    }, 1500);\n  };\n\n  render() {\n    const { playerCount, tableShape, loadingDirection } = this.state;\n    return (\n      <div className=\"syb\">\n        <SYBHelmet />\n        <div className=\"my-4\">\n          <div className=\"text-center\">\n            <h1>{playerCount} Players</h1>\n            <ButtonGroup>\n              <Button\n                disabled={playerCount <= 1}\n                onClick={() => this.decrementCount()}\n              >\n                <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n              </Button>\n              <Button onClick={() => this.incrementCount()}>\n                <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n              </Button>\n            </ButtonGroup>\n            {false && (\n              <ButtonGroup>\n                <Button\n                  active={tableShape === \"circle\"}\n                  onClick={() => this.setTableShape(\"circle\")}\n                >\n                  <i className=\"ss ss-portal ss-2x\" />\n                </Button>\n                <Button\n                  active={tableShape === \"square\"}\n                  onClick={() => this.setTableShape(\"square\")}\n                >\n                  <i className=\"ss ss-bfz ss-2x\" />\n                </Button>\n              </ButtonGroup>\n            )}\n          </div>\n        </div>\n        <div className=\"text-center my-2\">\n          <Button\n            color=\"danger\"\n            onClick={this.whichWay}\n            block\n            disabled={loadingDirection}\n          >\n            {loadingDirection ? \"Calculating...\" : \"Which way are we screwing?\"}\n          </Button>\n        </div>\n        <div className=\"d-flex\">\n          {loadingDirection && (\n            <div\n              className=\"position-absolute w-75 text-center\"\n              style={{ top: \"50%\" }}\n            >\n              <Spinner\n                color=\"danger\"\n                type=\"grow\"\n                className=\"position-absolute\"\n                style={{ width: \"10rem\", height: \"10rem\" }}\n              />\n            </div>\n          )}\n          {this.renderCyto()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport const FormatsHelmet = () => {\n  return (\n    <Helmet title=\"Formats\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_180.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_180.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"192x192\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_192.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"512x512\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_512.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/formats-manifest.json\"}\n      />\n    </Helmet>\n  );\n};\n","export const TAGS = [\n  \"Chode Mode\",\n  \"Deck Swaps\",\n  \"Planechase\",\n  \"EDH\",\n  \"2 Headed Giant\",\n  \"SYB\",\n  \"Range 1\",\n  \"Free for All\",\n  \"Pentacle\",\n  \"Secret Partners\",\n  \"Archenemy\",\n  \"Pentacle\",\n  \"Emperor\"\n];\n\nexport const FOUR_PLAYER = [\n  { id: 1, name: \"Chode Mode\", initial: 0.05, tags: [\"Chode Mode\"] },\n  { id: 2, name: \"Planechase\", initial: 0.15, tags: [\"Planechase\"] },\n  { id: 3, name: \"Planechase EDH\", initial: 0.1, tags: [\"Planechase\", \"EDH\"] },\n  {\n    id: 4,\n    name: \"EDH Free for All\",\n    initial: 0.02,\n    tags: [\"EDH\", \"Free for All\"]\n  },\n  {\n    id: 5,\n    name: \"EDH SYB\",\n    initial: 0.15,\n    tags: [\"EDH\", \"SYB\"],\n    showSwaps: true\n  },\n  {\n    id: 6,\n    name: \"EDH SYB Deck Swaps\",\n    displayName: \"EDH SYB\",\n    initial: 0.02,\n    tags: [\"EDH\", \"SYB\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  { id: 7, name: \"2 Headed Giant\", initial: 0.2, tags: [\"2 Headed Giant\"] },\n  { id: 8, name: \"Archenemy\", initial: 0.02, tags: [\"Archenemy\"] },\n  { id: 9, name: \"Range 1\", initial: 0.1, tags: [\"Range 1\"] },\n  { id: 10, name: \"Free for All\", initial: 0.02, tags: [\"Free for All\"] },\n  { id: 11, name: \"SYB\", initial: 0.15, tags: [\"SYB\"], showSwaps: true },\n  {\n    id: 12,\n    name: \"SYB Deck Swaps\",\n    displayName: \"SYB\",\n    initial: 0.02,\n    tags: [\"SYB\", \"Deck Swaps\"],\n    showSwaps: true\n  }\n];\n\nexport const FIVE_PLAYER = [\n  { id: 1, name: \"Chode Mode\", initial: 0.05, tags: [\"Chode Mode\"] },\n  { id: 2, name: \"Planechase \", initial: 0.01, tags: [\"Planechase\"] },\n  { id: 3, name: \"Planechase EDH\", initial: 0.05, tags: [\"Planechase\", \"EDH\"] },\n  {\n    id: 4,\n    name: \"EDH Free for All\",\n    initial: 0.02,\n    tags: [\"EDH\", \"Free for All\"]\n  },\n  {\n    id: 5,\n    name: \"EDH SYB\",\n    initial: 0.09,\n    tags: [\"EDH\", \"SYB\"],\n    showSwaps: true\n  },\n  {\n    id: 6,\n    name: \"EDH SYB Deck Swaps\",\n    displayName: \"SYB\",\n    initial: 0.02,\n    tags: [\"EDH\", \"SYB\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  {\n    id: 7,\n    name: \"EDH Pentacle\",\n    initial: 0.09,\n    tags: [\"EDH\", \"Pentacle\"],\n    showSwaps: true\n  },\n  {\n    id: 8,\n    name: \"EDH Pentacle Deck Swaps\",\n    displayName: \"EDH Pentacle\",\n    initial: 0.02,\n    tags: [\"EDH\", \"Pentacle\", \"Deck Swaps\"]\n  },\n  {\n    id: 9,\n    name: \"Pentacle\",\n    initial: 0.02,\n    tags: [\"Pentacle\"],\n    showSwaps: true\n  },\n  {\n    id: 10,\n    name: \"Pentacle Deck Swaps\",\n    displayName: \"Pentacle\",\n    initial: 0.02,\n    tags: [\"Pentacle\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  { id: 11, name: \"Range 1\", initial: 0.01, tags: [\"Range 1\"] },\n  { id: 12, name: \"SYB\", initial: 0.02, tags: [\"SYB\"], showSwaps: true },\n  {\n    id: 13,\n    name: \"SYB Deck Swaps\",\n    displayName: \"SYB\",\n    initial: 0.02,\n    tags: [\"SYB\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  { id: 14, name: \"Free for All\", initial: 0.02, tags: [\"Free for All\"] }\n];\n\nexport const SIX_PLAYER = [\n  { id: 1, name: \"Chode Mode\", initial: 0.15, tags: [\"Chode Mode\"] },\n  { id: 2, name: \"Planechase \", initial: 0.85, tags: [\"Planechase\"] },\n  { id: 3, name: \"Planechase EDH\", initial: 0.15, tags: [\"Planechase\", \"EDH\"] },\n  {\n    id: 4,\n    name: \"EDH Free for All\",\n    initial: 0.15,\n    tags: [\"EDH\", \"Free for All\"]\n  },\n  {\n    id: 5,\n    name: \"EDH SYB\",\n    initial: 0.85,\n    tags: [\"EDH\", \"SYB\"],\n    showSwaps: true\n  },\n  {\n    id: 6,\n    name: \"EDH SYB Deck Swaps\",\n    displayName: \"EDH SYB\",\n    initial: 0.15,\n    tags: [\"EDH\", \"SYB\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  {\n    id: 7,\n    name: \"EDH Emperor\",\n    initial: 0.85,\n    tags: [\"EDH\", \"Emperor\"],\n    showSwaps: true\n  },\n  {\n    id: 8,\n    name: \"EDH Emperor Deck Swaps\",\n    displayName: \"EDH Emperor\",\n    initial: 0.15,\n    tags: [\"EDH\", \"Emperor\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  {\n    id: 9,\n    name: \"2 Headed Giant SYB\",\n    initial: 0.1275,\n    tags: [\"2 Headed Giant\", \"SYB\"]\n  },\n  {\n    id: 10,\n    name: \"2 Headed Giant Free for All\",\n    initial: 0.15,\n    tags: [\"2 Headed Giant\", \"Free for All\"]\n  },\n  {\n    id: 11,\n    name: \"Emperor\",\n    initial: 0.1275,\n    tags: [\"Emperor\"],\n    showSwaps: true\n  },\n  {\n    id: 12,\n    name: \"Emperor Deck Swaps\",\n    displayName: \"Emperor\",\n    initial: 0.15,\n    tags: [\"Emperor\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  { id: 13, name: \"Range 1\", initial: 0.85, tags: [\"Range 1\"] },\n  { id: 14, name: \"Free for All\", initial: 0.15, tags: [\"Free for All\"] },\n  { id: 15, name: \"SYB\", initial: 0.1275, tags: [\"SYB\"], showSwaps: true },\n  {\n    id: 16,\n    name: \"SYB Deck Swaps\",\n    displayName: \"SYB\",\n    initial: 0.15,\n    tags: [\"SYB\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  {\n    id: 17,\n    name: \"Secret Partners Deck Swaps\",\n    displayName: \"Secret Partners\",\n    initial: 0.15,\n    tags: [\"Secret Partners\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  {\n    id: 18,\n    name: \"Secret Partners\",\n    initial: 0.1275,\n    tags: [\"Secret Partners\"],\n    showSwaps: true\n  }\n];\n","import React, { Component } from \"react\";\nimport { Button, ButtonGroup, Spinner } from \"reactstrap\";\nimport store from \"store\";\nimport { FormatsHelmet } from \"./Helmet\";\nimport { TAGS, FOUR_PLAYER, FIVE_PLAYER, SIX_PLAYER } from \"./formats\";\n\nimport cloneDeep from \"lodash/cloneDeep\";\nimport flatMap from \"lodash/flatMap\";\nimport uniq from \"lodash/uniq\";\n\nimport \"rc-slider/assets/index.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\nimport Slider from \"rc-slider\";\nimport Tooltip from \"rc-tooltip\";\nconst Handle = Slider.Handle;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nexport class Formats extends Component {\n  state = {\n    playerCount: 4,\n    tags: null,\n    currentFormats: null,\n    activeFormat: null,\n    loadingFormat: false,\n    swapTriggered: false\n  };\n\n  componentDidMount = () => {\n    const playerCount =\n      store.get(\"formats-playerCount\") || store.set(\"formats-playerCount\", 4);\n    const tags =\n      store.get(\"formats-tags\") || store.set(\"formats-tags\", this.createTags());\n    const currentFormats =\n      store.get(\"formats-current\") ||\n      store.set(\"formats-current\", this.createFormats());\n\n    this.setState({\n      playerCount,\n      tags,\n      currentFormats\n    });\n  };\n\n  reset = () => {\n    const playerCount = store.set(\"formats-playerCount\", 4);\n    const tags = store.set(\"formats-tags\", this.createTags());\n    const currentFormats = store.set(\"formats-current\", this.createFormats());\n\n    this.setState({\n      playerCount,\n      tags,\n      currentFormats\n    });\n  };\n\n  pickFormat() {\n    console.log(\"Generate Format\");\n    this.setState({ loadingFormat: true, swapTriggered: false });\n    const formats = this.activeFormats();\n    const activeFormat = this.getRandomFormat(formats);\n    console.log(\"picked item\", activeFormat);\n    setTimeout(() => {\n      this.setState({ loadingFormat: false, activeFormat });\n    }, 1000);\n  }\n\n  rand = (min, max) => {\n    return Math.random() * (max - min) + min;\n  };\n\n  getRandomFormat = list => {\n    const totalWeight = list.reduce((result, cur) => {\n      return result + cur.weight;\n    }, 0);\n    const randomNum = this.rand(0, totalWeight);\n    let weightSum = 0;\n\n    return list.find(item => {\n      weightSum += item.weight;\n      return randomNum <= weightSum;\n    });\n  };\n\n  incrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\n      \"formats-playerCount\",\n      Math.min(playerCount + 1, 6)\n    );\n\n    this.setState({ playerCount: newPlayerCount, activeFormat: null });\n  }\n\n  decrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\n      \"formats-playerCount\",\n      Math.max(playerCount - 1, 4)\n    );\n\n    this.setState({ playerCount: newPlayerCount, activeFormat: null });\n  }\n\n  updateFormatValue = (format, value) => {\n    const { playerCount, currentFormats } = this.state;\n    currentFormats[playerCount].forEach(f => {\n      if (f.name === format.name) {\n        format.weight = value / 100;\n      }\n    });\n    const updatedCurrentFormats = store.set(\"formats-current\", currentFormats);\n    this.setState({ currentFormats: updatedCurrentFormats });\n  };\n\n  render() {\n    const {\n      playerCount,\n      activeFormat,\n      loadingFormat,\n      swapTriggered\n    } = this.state;\n    const showDeckswapButton =\n      !loadingFormat &&\n      !swapTriggered &&\n      activeFormat &&\n      activeFormat.showSwaps &&\n      this.enabledTags().includes(\"Deck Swaps\");\n    return (\n      <div className=\"formats\">\n        <FormatsHelmet />\n        <div className=\"my-4\">\n          <div className=\"text-center\">\n            <h1>{playerCount} Players</h1>\n            <ButtonGroup className=\"my-4\">\n              <Button\n                disabled={playerCount <= 1}\n                onClick={() => this.decrementCount()}\n              >\n                <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n              </Button>\n              <Button onClick={() => this.incrementCount()}>\n                <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n              </Button>\n            </ButtonGroup>\n            <div className=\"text-center mb-5\">\n              <Button\n                block\n                color=\"danger\"\n                onClick={() => this.pickFormat()}\n                disabled={loadingFormat}\n              >\n                {loadingFormat ? \"Computing...\" : \"Which Format?\"}\n              </Button>\n              {loadingFormat ? (\n                <Spinner size=\"lg\" color=\"primary\" className=\"mt-3 mb-2\">\n                  Loading...\n                </Spinner>\n              ) : (\n                <h1 className=\"my-2\">{this.renderActiveFormatName()}</h1>\n              )}\n              {showDeckswapButton && (\n                <Button\n                  onClick={this.triggerSwap}\n                  block\n                  className={\"w-50 mx-auto\"}\n                  color=\"success\"\n                >\n                  Deckswaps?\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n        <hr className=\"border-info\" />\n        <div className=\"mb-5\">{this.renderFormatToggles()}</div>\n        <div className=\"mb-5\">{this.renderActiveFormats()}</div>\n        <div className=\"my-3\">\n          <Button color=\"danger\" onClick={this.reset} block>\n            Reset\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderActiveFormatName() {\n    const { activeFormat, swapTriggered } = this.state;\n\n    if (!activeFormat) {\n      return \"None\";\n    } else {\n      return swapTriggered\n        ? activeFormat.name\n        : activeFormat.displayName || activeFormat.name;\n    }\n  }\n\n  triggerSwap = () => {\n    this.setState({ swapTriggered: true });\n  };\n\n  createFormats() {\n    let formats = {\n      4: cloneDeep(FOUR_PLAYER),\n      5: cloneDeep(FIVE_PLAYER),\n      6: cloneDeep(SIX_PLAYER)\n    };\n    formats[4].forEach(f => (f.weight = 0.5) /* f.initial */);\n    formats[5].forEach(f => (f.weight = 0.5) /* f.initial */);\n    formats[6].forEach(f => (f.weight = 0.5) /* f.initial */);\n    return formats;\n  }\n\n  activeTags() {\n    const { currentFormats, playerCount } = this.state;\n    return currentFormats\n      ? uniq(\n          flatMap(currentFormats[playerCount], f => {\n            return f.tags;\n          })\n        ).sort()\n      : [];\n  }\n\n  createTags() {\n    return TAGS.map(t => {\n      return { name: t, enabled: true };\n    });\n  }\n\n  renderFormatToggles() {\n    const { tags } = this.state;\n    if (tags) {\n      const activeTags = this.activeTags();\n      const tagStates = tags.filter(t => activeTags.includes(t.name));\n\n      const values = tagStates.map((t, i) => {\n        return (\n          <div className=\"col-6 col-md-4 col-lg-3 mb-1\" key={i}>\n            <Button\n              size=\"sm\"\n              block\n              onClick={() => {\n                this.toggleTag(t);\n              }}\n              color={t.enabled ? \"info\" : \"secondary\"}\n            >\n              <div className=\"float-left\">\n                {t.enabled ? (\n                  <i className=\"ms ms-dfc ms-dfc-day text-light\" />\n                ) : (\n                  <i className=\"ms ms-dfc ms-dfc-night text-dark\" />\n                )}\n              </div>\n              <div className=\"d-inline\">{t.name}</div>\n            </Button>\n          </div>\n        );\n      });\n\n      return <div className=\"row\">{values}</div>;\n    }\n  }\n\n  toggleTag = tag => {\n    const { tags } = this.state;\n    tags.forEach(t => {\n      if (t.name === tag.name) {\n        t.enabled = !t.enabled;\n      }\n    });\n    const newTags = store.set(\"formats-tags\", tags);\n    this.setState({ tags: newTags });\n  };\n\n  enabledTags() {\n    const { tags } = this.state;\n    return tags ? tags.filter(t => t.enabled).map(t => t.name) : [];\n  }\n\n  activeFormats() {\n    const { tags, currentFormats, playerCount } = this.state;\n    let formats = null;\n    console.log(\" Player\", playerCount);\n    console.log(\"format\", currentFormats);\n    if (tags && currentFormats && playerCount) {\n      formats = currentFormats[playerCount];\n      const enabledTags = this.enabledTags();\n      console.log(\"enabledTags\", enabledTags);\n      formats = formats.filter(f => f.tags.every(t => enabledTags.includes(t)));\n      // formats.forEach(f => f.weight = f.initial) // Store weights\n      console.log(\"Formats\", formats);\n    }\n    return formats;\n  }\n\n  renderActiveFormats() {\n    const { playerCount } = this.state;\n    const formats = this.activeFormats();\n    if (formats) {\n      const formatTags = formats.map(f => {\n        return (\n          <div\n            className=\"row mb-2\"\n            key={`${playerCount}-${f.id}-${f.weight * 100}`}\n          >\n            <div className=\"col-5\">{f.name}</div>\n            <div className=\"col-7\">\n              <Slider\n                min={0}\n                max={100}\n                marks={{ 25: \"25\", 50: \"50\", 75: \"75\" }}\n                defaultValue={f.weight * 100}\n                included={true}\n                handle={handle}\n                onAfterChange={value => {\n                  this.updateFormatValue(f, value);\n                }}\n              />\n            </div>\n          </div>\n        );\n      });\n      return formatTags;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  NavLink as RRNavLink\n} from \"react-router-dom\";\nimport {\n  Alert,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport store from \"store\";\n\nimport \"./App.scss\";\n\nimport { setSetting, getSetting, toggleSetting } from \"./util/settings\";\n\nimport { Home } from \"./pages/home\";\nimport { Planechase } from \"./pages/planechase\";\nimport { Archenemy } from \"./pages/archenemy\";\nimport { SYB } from \"./pages/syb\";\nimport { Formats } from \"./pages/formats\";\n\nclass App extends Component {\n  state = {\n    isOpen: false,\n    disclaimerDismissed: false,\n    displayText: false,\n    displayImages: false,\n    devTools: false,\n    displayGatherer: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  componentDidMount = () => {\n    this.setState({\n      disclaimerDismissed: getSetting(\"disclaimerDismissed\"),\n      displayText: getSetting(\"displayText\"),\n      displayImages: getSetting(\"displayImages\"),\n      devTools: getSetting(\"devTools\")\n    });\n  };\n\n  dismissDisclaimer = () => {\n    this.setState({\n      disclaimerDismissed: setSetting(\"disclaimerDismissed\", true)\n    });\n  };\n\n  _toggleSetting = setting => {\n    const tempState = {};\n    tempState[setting] = toggleSetting(setting);\n    this.setState(tempState);\n  };\n\n  _mtgToggler = (value, displayText, onClick) => {\n    return (\n      <DropdownItem toggle={false} onClick={onClick}>\n        <span>\n          {value ? (\n            <i className=\"ms ms-dfc ms-dfc-day\" />\n          ) : (\n            <i className=\"ms ms-dfc ms-dfc-night\" />\n          )}\n        </span>\n        <span className=\"ml-3\">{displayText}</span>\n      </DropdownItem>\n    );\n  };\n\n  closeNavbar = () => {\n    if (this.state.isOpen) {\n      this.setState({ isOpen: false });\n    }\n  };\n\n  render() {\n    const {\n      disclaimerDismissed,\n      displayText,\n      displayImages,\n      displayGatherer,\n      devTools\n    } = this.state;\n    return (\n      <BrowserRouter>\n        <HelmetProvider>\n          <Helmet titleTemplate=\"%s - Jibbermaster\" />\n          <Navbar\n            color=\"dark\"\n            dark\n            expand=\"md\"\n            className=\"text-right p-1 noselect\"\n          >\n            <NavbarBrand />\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink\n                    tag={RRNavLink}\n                    exact\n                    to=\"/\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    tag={RRNavLink}\n                    exact\n                    to=\"/planechase\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Planechase\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    tag={RRNavLink}\n                    exact\n                    to=\"/archenemy\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Archenemy\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    tag={RRNavLink}\n                    exact\n                    to=\"/syb\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    SYB\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    tag={RRNavLink}\n                    exact\n                    to=\"/formats\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Formats\n                  </NavLink>\n                </NavItem>\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret>\n                    Settings\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {this._mtgToggler(\n                      disclaimerDismissed,\n                      \"Disclaimer Dismissed\",\n                      () => this._toggleSetting(\"disclaimerDismissed\")\n                    )}\n                    {this._mtgToggler(displayText, \"Display Text\", () =>\n                      this._toggleSetting(\"displayText\")\n                    )}\n                    {this._mtgToggler(displayImages, \"Display Images\", () =>\n                      this._toggleSetting(\"displayImages\")\n                    )}\n                    {this._mtgToggler(displayGatherer, \"Display Gatherer\", () =>\n                      this._toggleSetting(\"displayGatherer\")\n                    )}\n                    {this._mtgToggler(devTools, \"Dev Tools\", () =>\n                      this._toggleSetting(\"devTools\")\n                    )}\n                    <DropdownItem divider />\n                    <DropdownItem\n                      toggle={false}\n                      onClick={() => store.clearAll()}\n                    >\n                      Clear Everything\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </Nav>\n            </Collapse>\n          </Navbar>\n          <div className=\"app text-light bg-dark col-md-8 offset-md-2 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3\">\n            <Switch>\n              <Route path=\"/\" exact render={props => <Home {...props} />} />\n              <Route\n                path=\"/archenemy\"\n                exact\n                render={props => <Archenemy {...props} />}\n              />\n              <Route\n                path=\"/planechase\"\n                exact\n                render={props => <Planechase {...props} />}\n              />\n              <Route path=\"/syb\" exact render={props => <SYB {...props} />} />\n              <Route\n                path=\"/formats\"\n                exact\n                render={props => <Formats {...props} />}\n              />\n            </Switch>\n            <Alert\n              color=\"warning\"\n              className=\"fixed-bottom mb-0 py-1\"\n              isOpen={!this.state.disclaimerDismissed}\n              toggle={this.dismissDisclaimer}\n            >\n              <h6>Disclaimer</h6>\n              <small className=\"text-muted m-0\">\n                This site is created for personal use. Magic: The Gathering, the\n                mana symbols, the tap symbol and all other related images are\n                owned by Wizards of the Coast. jibbermaster.com is unaffiliated\n                with Wizards of the Coast.\n              </small>\n            </Alert>\n          </div>\n        </HelmetProvider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}