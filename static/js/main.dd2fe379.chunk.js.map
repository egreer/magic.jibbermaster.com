{"version":3,"sources":["images/planechase-back.jpg","images/archenemy-back.jpg","util/settings.js","pages/home/index.js","mtg/card.js","pages/planechase/Helmet.js","mtg/deck.js","util/api.js","components/Loading.js","components/magic/Counter.js","components/magic/Plane.js","pages/planechase/index.js","pages/archenemy/Helmet.js","mtg/prebuilt-decks.js","components/magic/Scheme.js","pages/archenemy/index.js","pages/syb/Helmet.js","pages/syb/index.js","pages/formats/Helmet.js","pages/formats/formats.js","pages/formats/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","store","addPlugin","defaultPlugin","defaults","getSetting","setting","get","setSetting","value","set","toggleSetting","Home","componentDidMount","className","title","rel","href","Button","tag","NavLink","exact","to","block","color","size","Component","getCurrentCard","prefix","setCurrentCard","card","getRevealedCards","setRevealedCards","cards","getAdditionalCards","setAdditionalCards","getScryCards","setScryCards","hasCustomProperty","property","customProperties","find","p","name","gathererImageURL","multiverse_ids","PlanechaseHelmet","planes","sizes","map","as","key","id","moveCard","from","deck","getCurrentDeck","splice","storeCurrentDeck","getOrCreateCurrentDeck","reset","console","log","clonedCard","JSON","parse","stringify","forEach","c","deck_card_id","uuidv4","shuffle","drawCard","shift","updateHistory","history","push","getHistory","undoDraw","pop","addCardsToTop","length","topCards","concat","addCardsToBottom","bottomCards","findCardByDeckCardId","deckCardId","findAndPutOnTop","tmpCard","removeCards","findAndPutOnBottom","cardsToRemove","filteredDeck","filter","r","revealCards","numReveal","onlyPlanes","revealedCards","count","Math","min","tmpCount","i","type_line","search","array","temporaryValue","randomIndex","currentIndex","floor","random","internet","axios","create","getAllPlanechaseCards","a","async","cached","response","cache","data","addAdditionalProperties","error","getAllArchenemyCards","schemes","properties","Aretopolis","type","oracle_html","__html","oracle_text","replace","time","cacheDate","moment","diff","unix","Loading","props","state","dotsCount","start","this","interval","dotsInterval","setInterval","setState","clearInterval","max","char","numDots","dots","label","getDotString","classes","Counter","counter","incrementCounter","getCounterType","onClick","Plane","modalOpen","toggleModal","listDisplay","children","ListGroupItem","Modal","isOpen","toggle","backdrop","contentClassName","ModalBody","centered","Card","inverse","renderImage","renderCounter","renderChildren","renderBody","renderActions","text","renderText","CardBody","displayImages","hasCounters","CardImgOverlay","CardTitle","CardFooter","related_uris","target","CardSubtitle","CardText","dangerouslySetInnerHTML","CardImg","top","width","src","imageURI","back","Planechase","loading","currentCard","additionalCards","scryCards","tripleChaosModalOpen","scryModalOpen","planeswalkDisabled","showHistory","showDeck","showDeckImages","refreshDeck","planeswalk","revealedPlanes","revealedPhenomenon","undo","triggerChaos","newRevealedCards","shuffledCards","slice","newScryCards","renderDevTools","renderDeck","toggleDeck","toggleDeckImages","manipulateDeck","Fade","in","ListGroup","Fragment","ButtonToolbar","ButtonGroup","disabled","toggleHistory","renderHistory","reverse","selectPlane","restCards","_tripleChaosModalClose","_tripleChaosModalToggle","_scryModalClose","_scryTop","_scryBottom","renderScryModal","ModalHeader","timeout","renderChaos","renderTwoPlanes","renderFivePlanes","renderTripleChaosModal","Alert","onClosed","ModalFooter","aria-label","ArchenemyHelmet","image_uris","DECKS","Scheme","Archenemy","ongoingSchemes","abandonedOngoing","deckSelection","customDeck","scheme","newCard","abandonScheme","newOngoing","s","resetCustomDeck","renderDeckSelect","renderGamePlay","Jumbotron","fluid","Container","renderAbandon","renderOngoingSchemes","selectDeck","renderPrebuilts","renderBuildCustomDeck","newCards","reduce","b","cardListIems","decrementCount","incrementCount","UncontrolledCollapse","toggler","customDeckSize","prebuiltItems","prebuilt","cardList","deckname","getCardList","SYBHelmet","circleLayout","nodeDimensionsIncludeLabels","gridLayout","rows","SYB","playerCount","targets","loadingDirection","tableShape","whichWay","setTimeout","regenerateOrder","Array","keys","player","targetIndex","source","players","cy","layout","isSquare","refreshLayout","debounce","run","on","elements","nodes","generateNodes","edges","generateEdges","stylesheet","selector","style","padding","height","content","handleCy","CytoscapeComponent","normalizeElements","userPanningEnabled","newPlayerCount","shape","Spinner","renderCyto","FormatsHelmet","TAGS","FOUR_PLAYER","initial","tags","showSwaps","displayName","FIVE_PLAYER","SIX_PLAYER","Handle","Slider","handle","dragging","index","restProps","prefixCls","overlay","visible","placement","Formats","currentFormats","activeFormat","loadingFormat","swapTriggered","createTags","createFormats","rand","getRandomFormat","list","totalWeight","result","cur","weight","randomNum","weightSum","item","updateFormatValue","format","f","updatedCurrentFormats","triggerSwap","toggleTag","t","enabled","newTags","formats","activeFormats","showDeckswapButton","enabledTags","includes","pickFormat","renderActiveFormatName","renderFormatToggles","renderActiveFormats","4","cloneDeep","5","6","uniq","flatMap","sort","activeTags","values","every","marks","25","50","75","defaultValue","included","onAfterChange","App","disclaimerDismissed","displayText","devTools","displayGatherer","dismissDisclaimer","_toggleSetting","tempState","_mtgToggler","DropdownItem","closeNavbar","titleTemplate","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","RRNavLink","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","divider","clearAll","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd2fe379.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/planechase-back.c7f50007.jpg\";","module.exports = __webpack_public_path__ + \"static/media/archenemy-back.2c00b5d4.jpg\";","import store from \"store\";\nimport defaultPlugin from \"store/plugins/defaults\";\n\nstore.addPlugin(defaultPlugin);\n\nconst SETTINGS = {\n  \"setting-disclaimerDismissed\": false,\n  \"setting-displayText\": false,\n  \"setting-displayImages\": true,\n  \"setting-devTools\": false,\n  \"setting-displayGatherer\": false\n};\nstore.defaults(SETTINGS);\n\nexport const getSetting = setting => {\n  return store.get(`setting-${setting}`);\n};\n\nexport const setSetting = (setting, value) => {\n  return store.set(`setting-${setting}`, value);\n};\n\nexport const toggleSetting = setting => {\n  const value = getSetting(setting);\n  return setSetting(setting, !value);\n};\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\n\nexport class Home extends Component {\n  componentDidMount = () => {};\n  render() {\n    return (\n      <div className=\"home\">\n        <Helmet title=\"Magic\">\n          <link\n            rel=\"manifest\"\n            href={process.env.PUBLIC_URL + \"/manifest.json\"}\n          />\n        </Helmet>\n        <div className=\"mt-4\">\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/planechase\"\n            block\n            color=\"info\"\n            size=\"lg\"\n          >\n            <i className=\"ms ms-planeswalker ms-4x mx-2 d-block\" />\n            <span className=\"d-block\">Planechase</span>\n          </Button>\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/archenemy\"\n            block\n            color=\"danger\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-arc ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">Archenemy</span>\n          </Button>\n          <Button tag={NavLink} exact to=\"/syb\" block color=\"success\" size=\"lg\">\n            <i className=\"ss ss-s00 ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">SYB</span>\n          </Button>\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/formats\"\n            block\n            color=\"primary\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-evg ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">Formats</span>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import store from \"store\";\n\nexport const getCurrentCard = prefix => {\n  return store.get(`${prefix}-currentCard`);\n};\n\nexport const setCurrentCard = (prefix, card) => {\n  return store.set(`${prefix}-currentCard`, card);\n};\n\nexport const getRevealedCards = prefix => {\n  return store.get(`${prefix}-revealedCards`);\n};\n\nexport const setRevealedCards = (prefix, cards) => {\n  return store.set(`${prefix}-revealedCards`, cards);\n};\n\nexport const getAdditionalCards = prefix => {\n  return store.get(`${prefix}-additionalCards`);\n};\n\nexport const setAdditionalCards = (prefix, cards) => {\n  return store.set(`${prefix}-additionalCards`, cards);\n};\n\nexport const getScryCards = prefix => {\n  return store.get(`${prefix}-scryCards`);\n};\n\nexport const setScryCards = (prefix, cards) => {\n  return store.set(`${prefix}-scryCards`, cards);\n};\n\nexport const hasCustomProperty = (property, card) => {\n  return card && card.customProperties.find(p => p.name === property);\n};\n\nexport const getCounterType = card => {\n  const property = card.customProperties.find(p => p.name === \"counter\");\n  return property.type;\n};\n\nexport const gathererImageURL = card => {\n  return `http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=${\n    card.multiverse_ids[0]\n  }&type=card`;\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { gathererImageURL } from \"../../mtg/card.js\";\n\nexport const PlanechaseHelmet = ({ planes }) => {\n  return (\n    <Helmet title=\"Planechase\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/planechase-manifest.json\"}\n      />\n      {planes &&\n        planes.map(p => (\n          <link\n            rel=\"preload\"\n            href={gathererImageURL(p)}\n            as=\"image\"\n            key={p.id}\n          />\n        ))}\n    </Helmet>\n  );\n};\n","import store from \"store\";\nimport uuidv4 from \"uuid/v4\";\n\nexport const moveCard = (prefix, from, to) => {\n  const deck = getCurrentDeck(prefix);\n  deck.splice(to, 0, deck.splice(from, 1)[0]);\n  storeCurrentDeck(prefix, deck);\n};\n\nexport const getOrCreateCurrentDeck = (prefix, cards, reset = false) => {\n  let deck = getCurrentDeck(prefix);\n  if (!deck || reset) {\n    console.log(`Creating New ${prefix} Deck`);\n    // Clone all the cards so that we aren't modifying original objects\n    const clonedCard = JSON.parse(JSON.stringify(cards));\n    // Add Deck Card Id so that each card in the deck has a unique value\n    clonedCard.forEach(c => (c.deck_card_id = uuidv4()));\n    deck = shuffle(clonedCard);\n    store.set(`${prefix}-history`, []);\n    storeCurrentDeck(prefix, deck);\n  }\n  return deck;\n};\n\nexport const getCurrentDeck = prefix => {\n  return store.get(`${prefix}-deck`);\n};\n\nexport const storeCurrentDeck = (prefix, deck) => {\n  return store.set(`${prefix}-deck`, deck);\n};\n\nexport const drawCard = prefix => {\n  const deck = getCurrentDeck(prefix);\n  const card = deck.shift();\n  if (card) {\n    updateHistory(prefix, card);\n  }\n  storeCurrentDeck(prefix, deck);\n  return card;\n};\n\nexport const updateHistory = (prefix, card) => {\n  const history = store.get(`${prefix}-history`);\n  history.push(card);\n  store.set(`${prefix}-history`, history);\n};\n\nexport const getHistory = (prefix, card) => {\n  return store.get(`${prefix}-history`);\n};\n\nexport const undoDraw = prefix => {\n  const history = store.get(`${prefix}-history`);\n  const card = history.pop();\n  if (card) {\n    addCardsToTop(prefix, [card]);\n  }\n  store.set(`${prefix}-history`, history);\n  return history[history.length - 1];\n};\n\nexport const addCardsToTop = (prefix, topCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, topCards.concat(deck));\n};\n\nexport const addCardsToBottom = (prefix, bottomCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, deck.concat(bottomCards));\n};\n\nexport const deckSize = prefix => {\n  return getCurrentDeck(prefix).length;\n};\n\nexport const findCard = (prefix, card) => {\n  return findCardByDeckCardId(prefix, card.deck_card_id);\n};\n\nexport const findCardByDeckCardId = (prefix, deckCardId) => {\n  const deck = getCurrentDeck(prefix);\n  return deck.find(c => c.deck_card_id === deckCardId);\n};\n\nexport const findAndPutOnTop = (prefix, deckCardId) => {\n  const tmpCard = findCardByDeckCardId(prefix, deckCardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToTop(prefix, [tmpCard]);\n  }\n};\n\nexport const findAndPutOnBottom = (prefix, deckCardId) => {\n  const tmpCard = findCardByDeckCardId(prefix, deckCardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToBottom(prefix, [tmpCard]);\n  }\n};\n\nexport const removeCards = (prefix, cardsToRemove) => {\n  const deck = getCurrentDeck(prefix);\n  const filteredDeck = deck.filter(\n    c => !cardsToRemove.find(r => r.deck_card_id === c.deck_card_id)\n  );\n  storeCurrentDeck(prefix, filteredDeck);\n};\n\nexport const revealCards = (prefix, numReveal, onlyPlanes = false) => {\n  const revealedCards = [];\n  const deck = getCurrentDeck(prefix);\n  const count = Math.min(deck.length, numReveal);\n\n  let planes = 0;\n  let tmpCount = count;\n  for (let i = 0; i < tmpCount; i++) {\n    revealedCards.push(deck[i]);\n\n    if (onlyPlanes) {\n      if (deck[i].type_line.search(\"Plane\") >= 0) {\n        planes++;\n      }\n\n      if (i === tmpCount - 1 && planes < count) {\n        tmpCount++;\n      }\n    }\n  }\n\n  return revealedCards;\n};\n\nexport const shuffle = array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\n// \tfunction showHistory(){\n// \t\tforeach( $_SESSION[ $this->prefix . 'history'] as $card){\n// \t\t\techo Card::displayHoverCardName($card, '', 'card');\n// \t\t}\n//\n// \t}\n//\n// \tfunction showRemainingCards(){\n// \t\tforeach(  $_SESSION[ $this->prefix . 'deck'] as $card){\n// \t\t echo Card::displayHoverCardName($card, $classes='');\n// \t\t}\n// \t}\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport store from \"store\";\n// TODO use expire store\nexport const internet = axios.create();\n\nconst PLANES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Aplane+or+t%3Aphenomenon&unique=cards\";\n\nconst SCHEMES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Ascheme&unique=cards\";\n\nexport const getAllPlanechaseCards = async () => {\n  try {\n    let planes = cached(\"planes\");\n    if (!planes) {\n      console.log(\"Loading from Axios\");\n      let response = await internet.get(PLANES_URL);\n      planes = response.data.data;\n      planes = planes.map(p => addAdditionalProperties(p));\n      cache(\"planes\", planes);\n      // TODO use the expire store parameter\n    } else {\n      console.log(\"Loaded from store\");\n    }\n    return planes;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const getAllArchenemyCards = async () => {\n  try {\n    let schemes = cached(\"schemes\");\n    if (!schemes) {\n      console.log(\"Loading from Axios\");\n      let response = await internet.get(SCHEMES_URL);\n      schemes = response.data.data;\n      schemes = schemes.map(p => addAdditionalProperties(p));\n      cache(\"schemes\", schemes);\n      // TODO use the expire store parameter\n    } else {\n      console.log(\"Loaded from store\");\n    }\n    return schemes;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nfunction addAdditionalProperties(card) {\n  const properties = {\n    Aretopolis: [{ name: \"counter\", type: \"Scroll\" }],\n    \"Chaotic Aether\": [{ name: \"all-chaos\" }],\n    \"Interplanar Tunnel\": [{ name: \"top-5\" }],\n    \"Kilnspire District\": [{ name: \"counter\", type: \"Charge\" }],\n    \"Mount Keralia\": [{ name: \"counter\", type: \"Pressure\" }],\n    \"Naar Isle\": [{ name: \"counter\", type: \"Flame\" }],\n    \"Spatial Merging\": [{ name: \"two-planes\" }],\n    \"Stairs to Infinity\": [{ name: \"chaos-trigger\" }, { name: \"scry-1\" }],\n    \"Pools of Becoming\": [{ name: \"chaos-trigger\" }, { name: \"triple-chaos\" }],\n    \"Your Inescapable Doom\": [\n      { name: \"unabandonable\" },\n      { name: \"counter\", type: \"Doom\" }\n    ]\n  };\n\n  if (properties[card.name]) {\n    card.customProperties = properties[card.name];\n  } else {\n    card.customProperties = [];\n  }\n\n  card.oracle_html = createMarkup(card.oracle_text);\n\n  return card;\n}\n\nfunction createMarkup(text) {\n  text = text.replace(/\\r\\n/g, \"<br />\").replace(/[\\r\\n]/g, \"<br />\");\n  text = text.replace(/{CHAOS}/g, '<i class=\"ms ms-chaos\"></i>');\n  text = text.replace(/CHAOS/g, '<i class=\"ms ms-chaos\"></i>');\n  text = text.replace(/{W}/g, '<i class=\"ms ms-w ms-cost\"></i>');\n  text = text.replace(/{U}/g, '<i class=\"ms ms-u ms-cost\"></i>');\n  text = text.replace(/{B}/g, '<i class=\"ms ms-b ms-cost\"></i>');\n  text = text.replace(/{R}/g, '<i class=\"ms ms-r ms-cost\"></i>');\n  text = text.replace(/{G}/g, '<i class=\"ms ms-g ms-cost\"></i>');\n  text = text.replace(/\\{1\\}/g, '<i class=\"ms ms-1 ms-cost\"></i>');\n  text = text.replace(/\\{2\\}/g, '<i class=\"ms ms-2 ms-cost\"></i>');\n  text = text.replace(/\\{3\\}/g, '<i class=\"ms ms-3 ms-cost\"></i>');\n  text = text.replace(/\\{T\\}/g, '<i class=\"ms ms-tap\"></i>');\n  text = text.replace(/{X}/g, '<i class=\"ms ms-x ms-cost\"></i>');\n  text = text.replace(/X/g, '<i class=\"ms ms-x\"></i>');\n  text = text.replace(/\\((.*)\\)/g, \"<small><em>($1)</em></small>\");\n  return { __html: text };\n}\n\nfunction cached(prefix) {\n  let data = store.get(prefix);\n  let cacheDate = store.get(`${prefix}-fetched`);\n  if (data && !old(cacheDate)) {\n    return data;\n  }\n  return null;\n}\n\nfunction cache(prefix, data) {\n  store.set(prefix, data);\n  store.set(`${prefix}-fetched`, moment().unix());\n}\n\nfunction old(time) {\n  return time && moment().diff(moment.unix(time), \"days\") > 5;\n}\n","import React, { Component } from \"react\";\n\nexport class Loading extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dotsCount: props.start || 0\n    };\n  }\n\n  componentDidMount() {\n    const { interval = 500 } = this.props;\n\n    this.dotsInterval = setInterval(() => {\n      this.setState({ dotsCount: this.state.dotsCount + 1 });\n    }, interval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.dotsInterval);\n  }\n\n  getDotString(count, max, char = \".\") {\n    let numDots = count % (max + 1);\n    let dots = \"\";\n\n    for (let i = 0; i < numDots; i++) {\n      dots += char;\n    }\n\n    return dots;\n  }\n\n  render() {\n    const { label = \"Loading\", className, numDots = 3 } = this.props;\n    const { dotsCount } = this.state;\n    let dots = this.getDotString(dotsCount, numDots, \".\");\n    let classes = `loading-dots ${className}`;\n\n    return (\n      <span className={classes}>\n        {label}\n        {dots}\n      </span>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { getCounterType } from \"../../mtg/card.js\";\nexport class Counter extends Component {\n  state = {\n    counter: 0\n  };\n\n  incrementCounter = () => {\n    const { counter } = this.state;\n    this.setState({ counter: counter + 1 });\n  };\n\n  render() {\n    const { card } = this.props;\n    const { counter } = this.state;\n    const type = getCounterType(card);\n    return (\n      <div>\n        <h1 className=\"text-shadow noselect\">{counter}</h1>\n        <Button\n          onClick={this.incrementCounter}\n          color=\"dark\"\n          size=\"lg\"\n          className=\"btn-translucent\"\n        >\n          <h3 className=\"mb-0\">Add {type} Counter</h3>\n        </Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardImgOverlay,\n  CardTitle,\n  CardBody,\n  CardSubtitle,\n  CardText,\n  CardFooter,\n  ListGroupItem,\n  Modal,\n  ModalBody\n} from \"reactstrap\";\nimport { gathererImageURL } from \"../../mtg/card\";\nimport back from \"../../images/planechase-back.jpg\";\nimport { Counter } from \"./Counter\";\nimport \"./planes.scss\";\n\nimport { hasCustomProperty } from \"../../mtg/card.js\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Plane extends Component {\n  state = {\n    modalOpen: false\n  };\n\n  toggleModal = () => {\n    console.log(\"Toggle Modal\");\n    this.setState({ modalOpen: !this.state.modalOpen });\n  };\n\n  render() {\n    const { listDisplay, card, children } = this.props;\n    if (listDisplay) {\n      return (\n        <>\n          <ListGroupItem color=\"dark\" onClick={this.toggleModal}>\n            <div>{card.name}</div>\n          </ListGroupItem>\n          <Modal\n            isOpen={this.state.modalOpen}\n            toggle={this.toggleModal}\n            size=\"md\"\n            backdrop={true}\n            contentClassName=\"bg-secondary\"\n          >\n            <ModalBody className=\"p-0\" centered=\"true\">\n              <Plane card={card} />\n              {children}\n            </ModalBody>\n          </Modal>\n        </>\n      );\n    } else {\n      return (\n        <Card inverse className=\"mtg-plane-card\">\n          {this.renderImage()}\n          {this.renderCounter()}\n          {this.renderChildren()}\n          {this.renderBody()}\n          {this.renderActions()}\n        </Card>\n      );\n    }\n  }\n\n  renderBody() {\n    const text = this.renderText();\n    const hasBody = text;\n\n    return hasBody && <CardBody>{text}</CardBody>;\n  }\n\n  renderCounter() {\n    const { card, renderActions } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    const hasCounters = hasCustomProperty(\"counter\", card);\n    if (renderActions && hasCounters) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center plane-overlay counter-overlay\">\n            <CardTitle className=\"text-center\">\n              <Counter card={card} />\n            </CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return (\n          <CardBody className=\"text-center pb-0\">\n            <Counter card={card} />\n          </CardBody>\n        );\n      }\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    if (children) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center plane-overlay child-overlay\">\n            <CardTitle className=\"text-center\">{children}</CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return <CardBody className=\"text-center pb-0\">{children}</CardBody>;\n      }\n    }\n  }\n\n  renderActions() {\n    const { card } = this.props;\n    const displayGatherer = getSetting(\"displayGatherer\");\n    if (displayGatherer && card) {\n      return (\n        <CardFooter>\n          <a\n            href={card.related_uris[\"gatherer\"]}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatherer\n          </a>\n        </CardFooter>\n      );\n    }\n  }\n\n  renderText() {\n    const { card } = this.props;\n    const displayText = getSetting(\"displayText\");\n    if (displayText) {\n      if (card) {\n        return (\n          <>\n            <CardTitle>\n              <h5>{card.name}</h5>\n            </CardTitle>\n            <CardSubtitle>{card.type_line}</CardSubtitle>\n            <CardText dangerouslySetInnerHTML={card.oracle_html} />\n          </>\n        );\n      } else {\n        return <CardTitle>None</CardTitle>;\n      }\n    }\n  }\n\n  renderImage() {\n    const displayImages = getSetting(\"displayImages\");\n    if (displayImages) {\n      return (\n        <CardImg\n          top\n          width=\"100%\"\n          src={this.imageURI()}\n          className=\"mtg-card mtg-card-plane\"\n        />\n      );\n    }\n  }\n\n  imageURI() {\n    const { card } = this.props;\n    if (card) {\n      // Use   Scryfall and rotate or use Gatherer\n      // scryfall (rotated) card.image_uris[\"border_crop\"]\n      return gathererImageURL(card);\n    } else {\n      return back;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Alert,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Fade,\n  ListGroup,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  ListGroupItem\n} from \"reactstrap\";\nimport { PlanechaseHelmet } from \"./Helmet\";\nimport {\n  getCurrentDeck,\n  getOrCreateCurrentDeck,\n  drawCard,\n  undoDraw,\n  revealCards,\n  addCardsToBottom,\n  removeCards,\n  shuffle,\n  addCardsToTop,\n  getHistory,\n  updateHistory,\n  findAndPutOnBottom,\n  findAndPutOnTop,\n  moveCard\n} from \"../../mtg/deck.js\";\nimport {\n  getCurrentCard,\n  setCurrentCard,\n  hasCustomProperty,\n  setRevealedCards,\n  getRevealedCards,\n  setAdditionalCards,\n  getAdditionalCards,\n  setScryCards,\n  getScryCards\n} from \"../../mtg/card.js\";\nimport { getAllPlanechaseCards } from \"../../util/api.js\";\nimport { Loading } from \"../../components/Loading\";\nimport { Plane } from \"../../components/magic/Plane\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Planechase extends Component {\n  state = {\n    loading: false,\n    planes: [],\n    deck: null,\n    currentCard: null,\n    revealedCards: [],\n    additionalCards: [],\n    scryCards: [],\n    tripleChaosModalOpen: false,\n    scryModalOpen: false,\n    planeswalkDisabled: false,\n    showHistory: false,\n    showDeck: false,\n    showDeckImages: false\n  };\n\n  componentDidMount = async () => {\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes);\n    const currentCard = getCurrentCard(\"planechase\");\n    const revealedCards = getRevealedCards(\"planechase\") || [];\n    const scryCards = getScryCards(\"planechase\") || [];\n    const additionalCards = getAdditionalCards(\"planechase\");\n    const planeswalkDisabled = !!hasCustomProperty(\"top-5\", currentCard);\n    const scryModalOpen =\n      scryCards.length > 0 && !!hasCustomProperty(\"scry-1\", currentCard);\n    this.setState({\n      planes,\n      loading: false,\n      deck,\n      currentCard,\n      revealedCards,\n      additionalCards,\n      scryCards,\n      planeswalkDisabled,\n      scryModalOpen\n    });\n  };\n\n  refreshDeck = () => {\n    const deck = getCurrentDeck(\"planechase\");\n    this.setState({ deck });\n  };\n\n  planeswalk = () => {\n    const currentCard = drawCard(\"planechase\");\n    setCurrentCard(\"planechase\", currentCard);\n    let revealedCards = [];\n    let additionalCards = [];\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      revealedCards = revealCards(\"planechase\", 2, true);\n      removeCards(\"planechase\", revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      const revealedPhenomenon = revealedCards.filter(\n        c => c.type_line.search(\"Phenomenon\") >= 0\n      );\n      revealedPlanes.forEach(c => updateHistory(\"planechase\", c));\n      addCardsToBottom(\"planechase\", revealedPhenomenon);\n      revealedCards = [];\n      additionalCards = revealedPlanes;\n    }\n\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      revealedCards = revealCards(\"planechase\", 5, true);\n      removeCards(\"planechase\", revealedCards);\n      this.setState({ planeswalkDisabled: true });\n    }\n\n    setRevealedCards(\"planechase\", revealedCards);\n    setAdditionalCards(\"planechase\", additionalCards);\n    this.refreshDeck();\n    this.setState({ currentCard, revealedCards, additionalCards });\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes, true);\n    const currentCard = setCurrentCard(\"planechase\", null);\n    const revealedCards = setRevealedCards(\"planechase\", []);\n    const scryCards = setScryCards(\"planechase\", []);\n    const additionalCards = setAdditionalCards(\"planechase\", []);\n    this.setState({\n      planes,\n      loading: false,\n      deck,\n      currentCard,\n      revealedCards,\n      scryCards,\n      additionalCards,\n      planeswalkDisabled: false,\n      scryModalOpen: false\n    });\n  };\n\n  undo = async () => {\n    const currentCard = undoDraw(\"planechase\");\n    this.refreshDeck();\n    this.setState({ currentCard });\n  };\n\n  triggerChaos = card => {\n    const { scryCards } = this.state;\n    console.log(\"Chaos Triggered\");\n    if (hasCustomProperty(\"triple-chaos\", card)) {\n      const newRevealedCards = revealCards(\"planechase\", 3, true);\n      removeCards(\"planechase\", newRevealedCards);\n      const shuffledCards = shuffle(newRevealedCards.slice());\n      addCardsToBottom(\"planechase\", shuffledCards);\n      this.refreshDeck();\n      setRevealedCards(\"planechase\", newRevealedCards);\n      this.setState({\n        revealedCards: newRevealedCards,\n        tripleChaosModalOpen: true\n      });\n    }\n\n    if (hasCustomProperty(\"scry-1\", card)) {\n      if (!scryCards || scryCards.length === 0) {\n        const newScryCards = revealCards(\"planechase\", 1, false);\n        removeCards(\"planechase\", newScryCards);\n        setScryCards(\"planechase\", newScryCards);\n        this.setState({ scryCards: newScryCards });\n      }\n      this.setState({ scryModalOpen: true });\n    }\n  };\n\n  render() {\n    const {\n      loading,\n      planes,\n      deck,\n      currentCard,\n      planeswalkDisabled\n    } = this.state;\n\n    return (\n      <div className=\"planechase\">\n        <PlanechaseHelmet planes={planes} />\n        <div className=\"fixed-top mt-1 ml-1 w-25 text-left\">\n          <Button\n            onClick={this.planeswalk}\n            className=\"mb-2\"\n            color=\"success\"\n            disabled={planeswalkDisabled || loading}\n            block\n          >\n            <i className=\"ms ms-planeswalker ms-2x mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Planeswalk</span>\n          </Button>\n        </div>\n\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : (\n          <div className=\"mb-2\">\n            {currentCard ? (\n              <Fade key={currentCard.deck_card_id} timeout={100}>\n                <Plane card={currentCard} renderActions=\"true\">\n                  {this.renderChaos(currentCard)}\n                </Plane>\n              </Fade>\n            ) : (\n              <Plane />\n            )}\n          </div>\n        )}\n        {this.renderTwoPlanes()}\n        {this.renderFivePlanes()}\n        {this.renderTripleChaosModal()}\n        {this.renderScryModal()}\n        {this.renderHistory()}\n\n        <p className=\"text-center my-3 noselect\">\n          There are {deck ? deck.length : 0} cards remaining.\n        </p>\n        <Button onClick={this.reset} color=\"danger\" block>\n          Reset\n        </Button>\n\n        {this.renderDevTools()}\n      </div>\n    );\n  }\n\n  renderDevTools = () => {\n    const devTools = getSetting(\"devTools\");\n    if (devTools) {\n      return (\n        <div className=\"my-4\">\n          <h5 className=\"text-center noselect\">Dev Tools</h5>\n          <Button onClick={this.undo} color=\"warning\" block>\n            Undo\n          </Button>\n          {this.renderDeck()}\n        </div>\n      );\n    }\n  };\n\n  toggleDeck = () => {\n    this.setState({ showDeck: !this.state.showDeck });\n  };\n\n  toggleDeckImages = () => {\n    this.setState({ showDeckImages: !this.state.showDeckImages });\n  };\n\n  manipulateDeck = () => {\n    this.refreshDeck();\n  };\n\n  renderDeck = () => {\n    const { deck, showDeck, showDeckImages } = this.state;\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleDeck} block>\n          {showDeck ? \"Hide\" : \"Show\"} Deck\n        </Button>\n        <Fade in={showDeck}>\n          {showDeck && (\n            <>\n              <Button onClick={this.toggleDeckImages} block>\n                {showDeckImages ? \"Hide\" : \"Show\"} Full Card\n              </Button>\n              <ListGroup>\n                {deck.map((p, i) => (\n                  <React.Fragment key={p.deck_card_id}>\n                    <Plane card={p} listDisplay={!showDeckImages} />\n                    <ListGroupItem className=\"text-center justify-content-center d-flex\">\n                      <ButtonToolbar>\n                        <ButtonGroup>\n                          <Button\n                            disabled={i === 0}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                moveCard(\"planechase\", i, i - 1)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n                          </Button>\n                          <Button\n                            disabled={i === deck.length - 1}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                moveCard(\"planechase\", i, i + 1)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"ml-2\">\n                          <Button\n                            disabled={i === 0}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                findAndPutOnTop(\"planechase\", p.deck_card_id)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-untap ms-2x ss-mythic ss-grad\" />\n                          </Button>\n                          <Button\n                            disabled={i === deck.length - 1}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                findAndPutOnBottom(\"planechase\", p.deck_card_id)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-tap ms-2x ss-mythic ss-grad\" />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"ml-2\">\n                          <Button\n                            color=\"danger\"\n                            onClick={() =>\n                              this.manipulateDeck(\n                                removeCards(\"planechase\", [p])\n                              )\n                            }\n                          >\n                            <i className=\"ss ss-x ss-10e ss-rare ss-grad ss-2x\" />\n                          </Button>\n                        </ButtonGroup>\n                      </ButtonToolbar>\n                    </ListGroupItem>\n                  </React.Fragment>\n                ))}\n              </ListGroup>\n            </>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  };\n\n  renderHistory = () => {\n    const { showHistory } = this.state;\n    const history = getHistory(\"planechase\");\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleHistory} block>\n          {showHistory ? \"Hide\" : \"Show\"} History\n        </Button>\n        <Fade in={showHistory}>\n          {showHistory && history && (\n            <ListGroup>\n              {history.reverse().map(p => (\n                <Plane card={p} key={p.deck_card_id} listDisplay={true} />\n              ))}\n            </ListGroup>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n\n  renderChaos(card) {\n    const hasChaos = hasCustomProperty(\"chaos-trigger\", card);\n    if (hasChaos) {\n      return (\n        <Button\n          onClick={() => this.triggerChaos(card)}\n          color=\"info\"\n          size=\"lg\"\n          className=\"btn-translucent\"\n        >\n          <i className=\"ms ms-chaos ms-2x mx-2\" />\n          <span className=\"mx-2 d-none d-md-inline\">Trigger Chaos</span>\n        </Button>\n      );\n    }\n  }\n\n  renderTwoPlanes() {\n    const { currentCard, additionalCards } = this.state;\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      const revealedPlanes = additionalCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      // TODO chaos etc\n      return (\n        <div>\n          <Alert color=\"info\" className=\"text-center mb-0\">\n            <i className=\"ms ms-planeswalker mx-2\" />\n            You Are On Both Planes\n            <i className=\"ms ms-planeswalker mx-2\" />\n          </Alert>\n          {revealedPlanes.map(c => (\n            <React.Fragment key={c.deck_card_id}>\n              <Plane card={c} renderActions=\"true\">\n                {this.renderChaos(c)}\n              </Plane>\n            </React.Fragment>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  selectPlane = card => {\n    const { revealedCards } = this.state;\n    removeCards(\"planechase\", revealedCards);\n    addCardsToTop(\"planechase\", [card]);\n    const restCards = revealedCards.filter(\n      c => c.deck_card_id !== card.deck_card_id\n    );\n    const shuffledCards = shuffle(restCards.slice());\n    addCardsToBottom(\"planechase\", shuffledCards);\n    setRevealedCards(\"planechase\", []);\n    this.setState({ planeswalkDisabled: false, revealedCards: [] });\n    this.planeswalk();\n  };\n\n  renderFivePlanes() {\n    const { currentCard, revealedCards } = this.state;\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      console.log(revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      console.log(revealedPlanes);\n      // TODO Countes, chaos etc\n      return (\n        <div>\n          <Alert color=\"info\" className=\"text-center mb-0\">\n            <i className=\"ms ms-planeswalker mx-2\" />\n            Pick a Plane to Planeswalk To\n            <i className=\"ms ms-planeswalker mx-2\" />\n          </Alert>\n          {revealedPlanes.map(c => (\n            <div key={c.deck_card_id}>\n              <Plane card={c}>\n                <Button\n                  onClick={() => this.selectPlane(c)}\n                  color=\"primary\"\n                  className=\"btn-translucent\"\n                  size=\"lg\"\n                >\n                  <i className=\"ms ms-planeswalker mx-2\" />\n                  <span className=\"mx-2\">Planeswalk</span>\n                </Button>\n              </Plane>\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  _tripleChaosModalClose = () => {\n    setRevealedCards(\"planechase\", []);\n    this.setState({\n      tripleChaosModalOpen: false,\n      revealedCards: []\n    });\n  };\n\n  _tripleChaosModalToggle = () => {\n    if (this.state.tripleChaosModalOpen) {\n      this._tripleChaosModalClose();\n    }\n  };\n\n  renderTripleChaosModal() {\n    const { revealedCards, tripleChaosModalOpen } = this.state;\n    if (revealedCards && tripleChaosModalOpen) {\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      return (\n        <Modal\n          isOpen={!!tripleChaosModalOpen}\n          toggle={this._tripleChaosModalToggle}\n          onClosed={this._tripleChaosModalClose}\n          size=\"md\"\n          backdrop={true}\n          contentClassName=\"bg-secondary\"\n        >\n          <ModalHeader className=\"justify-content-center text-center text-white\">\n            <div>\n              <i className=\"ms ms-chaos mr-1\" />\n              <i className=\"ms ms-chaos mr-1\" />\n              <i className=\"ms ms-chaos mr-1\" />\n              <span className=\"mx-1\">Triple Chaos</span>\n              <i className=\"ms ms-chaos ml-1\" />\n              <i className=\"ms ms-chaos ml-1\" />\n              <i className=\"ms ms-chaos ml-1\" />\n            </div>\n            <div>\n              <small className=\"text-center\">You Pick Order</small>\n            </div>\n          </ModalHeader>\n          <ModalBody className=\"text-center\">\n            {revealedPlanes.map(c => (\n              <React.Fragment key={c.deck_card_id}>\n                <Plane card={c}>{this.renderChaos(c)}</Plane>\n              </React.Fragment>\n            ))}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"info\"\n              block\n              aria-label=\"Close\"\n              onClick={this._tripleChaosModalClose}\n            >\n              Done\n            </Button>\n          </ModalFooter>\n        </Modal>\n      );\n    }\n  }\n\n  _scryModalClose = () => {\n    setScryCards(\"planechase\", []);\n    this.setState({\n      scryModalOpen: false,\n      scryCards: []\n    });\n  };\n\n  _scryTop = () => {\n    const { scryCards } = this.state;\n    addCardsToTop(\"planechase\", scryCards);\n    console.log(\"Scry Top\", scryCards);\n    this.refreshDeck();\n    setScryCards(\"planechase\", []);\n    this.setState({ scryCards: [], scryModalOpen: false });\n  };\n\n  _scryBottom = () => {\n    const { scryCards } = this.state;\n    addCardsToBottom(\"planechase\", scryCards);\n    console.log(\"Scry Bottom\", scryCards);\n    this.refreshDeck();\n    setScryCards(\"planechase\", []);\n    this.setState({ scryCards: [], scryModalOpen: false });\n  };\n\n  renderScryModal = () => {\n    const { scryCards, scryModalOpen } = this.state;\n    if (scryCards && scryModalOpen) {\n      return (\n        <Modal\n          isOpen={!!scryModalOpen}\n          size=\"md\"\n          contentClassName=\"bg-secondary\"\n        >\n          <ModalHeader className=\"justify-content-center text-white\">\n            <i className=\"ms ms-chaos mx-4\" />\n            Scry Card\n            <i className=\"ms ms-chaos mx-4\" />\n          </ModalHeader>\n          <ModalBody>\n            <Button color=\"info\" block onClick={this._scryTop}>\n              Top\n            </Button>\n            {scryCards.map(c => (\n              <Plane card={c} key={c.deck_card_id} />\n            ))}\n            <Button color=\"info\" block onClick={this._scryBottom}>\n              Bottom\n            </Button>\n          </ModalBody>\n        </Modal>\n      );\n    }\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport const ArchenemyHelmet = ({ schemes }) => {\n  return (\n    <Helmet title=\"Archenemy\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/archenemy-manifest.json\"}\n      />\n      {schemes &&\n        schemes.map(p => (\n          <link\n            rel=\"preload\"\n            href={p.image_uris[\"large\"]}\n            as=\"image\"\n            key={p.id}\n          />\n        ))}\n    </Helmet>\n  );\n};\n","export const getDeckList = () => {\n  return DECKS.map(s => s.name);\n};\n\nexport const getCardList = (deckname, schemes) => {\n  const deck = DECKS.find(s => s.name === deckname);\n  return deck.cards.map(c => {\n    const scheme = schemes.find(s => s.name === c[0]);\n    const clonedCard = JSON.parse(JSON.stringify(scheme));\n    clonedCard.count = c[1];\n    return clonedCard;\n  });\n};\nconst DECKS = [\n  {\n    name: \"Assemble the Doomsday Machine\",\n    cards: [\n      [\"All in Good Time\", 1],\n      [\"Behold the Power of Destruction\", 1],\n      [\"Embrace My Diabolical Vision\", 1],\n      [\"Feed the Machine\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"I Know All, I See All\", 2],\n      [\"Ignite the Cloneforge!\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"The Iron Guardian Stirs\", 2],\n      [\"My Genius Knows No Bounds\", 1],\n      [\"Nothing Can Stop Me Now\", 1],\n      [\"The Pieces Are Coming Together\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Scorch the World with Dragonfire\",\n    cards: [\n      [\"All Shall Smolder in My Wake\", 2],\n      [\"Approach My Molten Realm\", 1],\n      [\"The Fate of the Flammable\", 1],\n      [\"I Bask in Your Silent Awe\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"Know Naught but Fire\", 1],\n      [\"Look Skyward and Despair\", 2],\n      [\"My Crushing Masterstroke\", 1],\n      [\"My Wish Is Your Command\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Tooth, Claw, and Tail\", 1],\n      [\"Which of You Burns Brightest?\", 2],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Trample Civilization Underfoot\",\n    cards: [\n      [\"Every Last Vestige Shall Rot\", 2],\n      [\"Evil Comes to Fruition\", 1],\n      [\"I Call on the Ancient Magics\", 1],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Into the Earthen Maw\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"May Civilization Collapse\", 1],\n      [\"Nature Demands an Offering\", 2],\n      [\"Nature Shields Its Own\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Roots of All Evil\", 2],\n      [\"The Very Soil Shall Shake\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1],\n      [\"Your Will Is Not Your Own\", 2]\n    ]\n  },\n  {\n    name: \"Bring About the Undead Apocalypse\",\n    cards: [\n      [\"Choose Your Champion\", 2],\n      [\"Dance, Pathetic Marionette\", 1],\n      [\"The Dead Shall Serve\", 2],\n      [\"Every Hope Shall Vanish\", 2],\n      [\"I Delight in Your Convulsions\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"Mortal Flesh Is Weak\", 1],\n      [\"My Undead Horde Awakens\", 1],\n      [\"Only Blood Ends Your Nightmares\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Rotted Ones, Lay Siege\", 2],\n      [\"Surrender Your Thoughts\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Archenemy Nicol Bolas\",\n    cards: [\n      [\"Because I Have Willed It\", 1],\n      [\"Behold My Grandeur\", 1],\n      [\"Bow to My Command\", 1],\n      [\"Choose Your Demise\", 1],\n      [\"Delight in the Hunt\", 1],\n      [\"Every Dream a Nightmare\", 1],\n      [\"For Each of You, a Gift\", 1],\n      [\"Know Evil\", 1],\n      [\"Make Yourself Useful\", 1],\n      [\"The Mighty Will Fall\", 1],\n      [\"My Forces Are Innumerable\", 1],\n      [\"My Laughter Echoes\", 1],\n      [\"No One Will Hear Your Cries\", 1],\n      [\"Pay Tribute to Me\", 1],\n      [\"Power Without Equal\", 1],\n      [\"A Reckoning Approaches\", 1],\n      [\"There Is No Refuge\", 1],\n      [\"This World Belongs to Me\", 1],\n      [\"What's Yours Is Now Mine\", 1],\n      [\"When Will You Learn?\", 1]\n    ]\n  }\n];\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardImgOverlay,\n  CardTitle,\n  CardBody,\n  CardSubtitle,\n  CardText,\n  CardFooter,\n  ListGroupItem,\n  Modal,\n  ModalBody\n} from \"reactstrap\";\nimport back from \"../../images/archenemy-back.jpg\";\nimport { Counter } from \"./Counter\";\nimport \"./planes.scss\";\n\nimport { hasCustomProperty } from \"../../mtg/card.js\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Scheme extends Component {\n  state = {\n    modalOpen: false\n  };\n\n  toggleModal = () => {\n    console.log(\"Toggle Modal\");\n    this.setState({ modalOpen: !this.state.modalOpen });\n  };\n\n  render() {\n    const { listDisplay, card, children } = this.props;\n    if (listDisplay) {\n      return (\n        <>\n          <ListGroupItem color=\"dark\" onClick={this.toggleModal}>\n            {card.name}\n          </ListGroupItem>\n          <Modal\n            isOpen={this.state.modalOpen}\n            toggle={this.toggleModal}\n            size=\"md\"\n            backdrop={true}\n            contentClassName=\"bg-secondary\"\n          >\n            <ModalBody className=\"p-0\" centered=\"true\">\n              <Scheme card={card} />\n              {children}\n            </ModalBody>\n          </Modal>\n        </>\n      );\n    } else {\n      return (\n        <Card inverse className=\"mtg-scheme-card\">\n          {this.renderImage()}\n          {this.renderCounter()}\n          {this.renderChildren()}\n          {this.renderBody()}\n          {this.renderActions()}\n        </Card>\n      );\n    }\n  }\n\n  renderBody() {\n    const text = this.renderText();\n    const hasBody = text;\n\n    return hasBody && <CardBody>{text}</CardBody>;\n  }\n\n  renderCounter() {\n    const { card, renderActions } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    const hasCounters = hasCustomProperty(\"counter\", card);\n    if (renderActions && hasCounters) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center scheme-overlay counter-overlay\">\n            <CardTitle className=\"text-center pt-5 mt-sm-5\">\n              <Counter card={card} />\n            </CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return (\n          <CardBody className=\"text-center pb-0\">\n            <Counter card={card} />\n          </CardBody>\n        );\n      }\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    if (children) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center scheme-overlay child-overlay\">\n            <CardTitle className=\"text-center pt-5 mt-sm-5\">\n              {children}\n            </CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return <CardBody className=\"text-center pb-0\">{children}</CardBody>;\n      }\n    }\n  }\n\n  renderActions() {\n    const { card } = this.props;\n    const displayGatherer = getSetting(\"displayGatherer\");\n    if (displayGatherer && card) {\n      return (\n        <CardFooter>\n          <a\n            href={card.related_uris[\"gatherer\"]}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatherer\n          </a>\n        </CardFooter>\n      );\n    }\n  }\n\n  renderText() {\n    const { card } = this.props;\n    const displayText = getSetting(\"displayText\");\n    if (displayText) {\n      if (card) {\n        return (\n          <>\n            <CardTitle>\n              <h5>{card.name}</h5>\n            </CardTitle>\n            <CardSubtitle>{card.type_line}</CardSubtitle>\n            <CardText dangerouslySetInnerHTML={card.oracle_html} />\n          </>\n        );\n      } else {\n        return <CardTitle>None</CardTitle>;\n      }\n    }\n  }\n\n  renderImage() {\n    const displayImages = getSetting(\"displayImages\");\n    if (displayImages) {\n      return (\n        <CardImg\n          top\n          width=\"100%\"\n          src={this.imageURI()}\n          className=\"mtg-card mtg-card-scheme\"\n        />\n      );\n    }\n  }\n\n  imageURI() {\n    const { card } = this.props;\n    if (card) {\n      return card.image_uris[\"large\"];\n    } else {\n      return back;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Alert,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardTitle,\n  Fade,\n  ListGroup,\n  ListGroupItem,\n  Jumbotron,\n  Container,\n  UncontrolledCollapse\n} from \"reactstrap\";\nimport store from \"store\";\n\nimport { ArchenemyHelmet } from \"./Helmet\";\nimport { getDeckList, getCardList } from \"../../mtg/prebuilt-decks\";\nimport { getAllArchenemyCards } from \"../../util/api.js\";\nimport { Scheme } from \"../../components/magic/Scheme\";\nimport { Loading } from \"../../components/Loading\";\nimport { getSetting } from \"../../util/settings.js\";\n\nimport {\n  getCurrentDeck,\n  getOrCreateCurrentDeck,\n  storeCurrentDeck,\n  drawCard,\n  undoDraw,\n  removeCards,\n  getHistory,\n  findAndPutOnBottom,\n  findAndPutOnTop,\n  moveCard\n} from \"../../mtg/deck.js\";\nimport {\n  getCurrentCard,\n  setCurrentCard,\n  hasCustomProperty,\n  setAdditionalCards,\n  getAdditionalCards\n} from \"../../mtg/card.js\";\n\nexport class Archenemy extends Component {\n  state = {\n    loading: true,\n    deck: null,\n    currentCard: null,\n    ongoingSchemes: [],\n    schemes: [],\n    showHistory: false,\n    showDeck: false,\n    showDeckImages: false,\n    abandonedOngoing: false,\n    deckSelection: true,\n    customDeck: null\n  };\n\n  componentDidMount = async () => {\n    const schemes = await getAllArchenemyCards();\n    const deck = getCurrentDeck(\"archenemy\");\n    // TODO switch to selecting deck\n    // const deck = getCurrentDeck(\"archenemy\");\n    const currentCard = getCurrentCard(\"archenemy\");\n    const ongoingSchemes = getAdditionalCards(\"archenemy\") || [];\n    const abandonedOngoing = !!store.get(\"archenemy-abandonedOngoing\");\n    const customDeck = JSON.parse(JSON.stringify(schemes));\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({\n      currentCard,\n      deck,\n      loading: false,\n      ongoingSchemes,\n      schemes,\n      abandonedOngoing,\n      deckSelection: !deck,\n      customDeck\n    });\n  };\n\n  refreshDeck = () => {\n    const deck = getCurrentDeck(\"archenemy\");\n    this.setState({ deck });\n  };\n\n  scheme = () => {\n    const { currentCard, ongoingSchemes } = this.state;\n    if (currentCard) {\n      if (currentCard.type_line === \"Ongoing Scheme\") {\n        ongoingSchemes.push(currentCard);\n      }\n    }\n    const newCard = drawCard(\"archenemy\");\n    setCurrentCard(\"archenemy\", newCard);\n    setAdditionalCards(\"archenemy\", ongoingSchemes);\n    this.refreshDeck();\n    this.setState({\n      currentCard: newCard,\n      ongoingSchemes,\n      abandonedOngoing: store.set(\"archenemy-abandonedOngoing\", false)\n    });\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    // TODO reset to deck selection\n    const schemes = await getAllArchenemyCards();\n    const deck = null;\n    storeCurrentDeck(\"archenemy\", deck);\n    const currentCard = setCurrentCard(\"archenemy\", null);\n    const ongoingSchemes = setAdditionalCards(\"archenemy\", []);\n    const abandonedOngoing = store.set(\"archenemy-abandonedOngoing\", false);\n    const customDeck = JSON.parse(JSON.stringify(schemes));\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({\n      schemes,\n      loading: false,\n      deck,\n      currentCard,\n      ongoingSchemes,\n      abandonedOngoing,\n      deckSelection: true,\n      customDeck\n    });\n  };\n\n  undo = async () => {\n    const currentCard = undoDraw(\"archenemy\");\n    this.refreshDeck();\n    this.setState({ currentCard });\n  };\n  // TODO Cards with same id\n  render() {\n    const { loading, schemes, deckSelection } = this.state;\n\n    return (\n      <div className=\"archenemy\">\n        <ArchenemyHelmet schemes={schemes} />\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : deckSelection ? (\n          this.renderDeckSelect()\n        ) : (\n          this.renderGamePlay()\n        )}\n        {this.renderDevTools()}\n      </div>\n    );\n  }\n\n  renderGamePlay() {\n    const { loading, deck, currentCard, abandonedOngoing } = this.state;\n\n    return (\n      <>\n        <div className=\"fixed-top mt-1 ml-1 w-25 text-left\">\n          <Button\n            onClick={this.scheme}\n            className=\"mb-2\"\n            color=\"success\"\n            disabled={loading}\n            block\n          >\n            <i className=\"ss ss-arc ss-3x mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Scheme</span>\n          </Button>\n        </div>\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : (\n          <div className=\"mb-2 d-flex justify-content-center\">\n            {abandonedOngoing ? (\n              <Jumbotron className=\"bg-danger text-center\" fluid>\n                <Container fluid>\n                  <h1>Current Scheme Has Been Foiled!</h1>\n                </Container>\n              </Jumbotron>\n            ) : currentCard ? (\n              <Fade key={currentCard.deck_card_id} timeout={100}>\n                <Scheme card={currentCard} renderActions=\"true\">\n                  {this.renderAbandon(currentCard)}\n                </Scheme>\n              </Fade>\n            ) : (\n              <Scheme />\n            )}\n          </div>\n        )}\n\n        {this.renderOngoingSchemes()}\n\n        {this.renderHistory()}\n        <p className=\"text-center my-3 noselect\">\n          There are {deck ? deck.length : 0} cards remaining.\n        </p>\n        <Button onClick={this.reset} color=\"danger\" block>\n          Reset\n        </Button>\n      </>\n    );\n  }\n\n  renderDeckSelect() {\n    const { schemes } = this.state;\n    return (\n      <>\n        <Card>\n          <CardBody>\n            <CardTitle>\n              <h3 className=\"text-center\">All Schemes</h3>\n            </CardTitle>\n            <Button\n              block\n              color=\"success\"\n              onClick={() => this.selectDeck(\"All\", schemes)}\n            >\n              Use All\n            </Button>\n          </CardBody>\n        </Card>\n        {this.renderPrebuilts()}\n        {this.renderBuildCustomDeck()}\n      </>\n    );\n  }\n\n  renderOngoingSchemes() {\n    const { ongoingSchemes } = this.state;\n    if (ongoingSchemes && ongoingSchemes.length > 0) {\n      return (\n        <>\n          <Alert color=\"info\" className=\"text-center\">\n            <h5>Ongoing Schemes</h5>\n          </Alert>\n          <div className=\"d-flex justify-content-center flex-wrap \">\n            {ongoingSchemes.map(c => (\n              <React.Fragment key={c.deck_card_id}>\n                <Scheme card={c} renderActions=\"true\">\n                  {this.renderAbandon(c)}\n                </Scheme>\n              </React.Fragment>\n            ))}\n          </div>\n        </>\n      );\n    }\n  }\n\n  renderDevTools = () => {\n    const devTools = getSetting(\"devTools\");\n    if (devTools) {\n      return (\n        <div className=\"my-4\">\n          <h5 className=\"text-center noselect\">Dev Tools</h5>\n          <Button onClick={this.undo} color=\"warning\" block>\n            Undo\n          </Button>\n          {this.renderDeck()}\n        </div>\n      );\n    }\n  };\n\n  abandonScheme = card => {\n    const { ongoingSchemes, currentCard } = this.state;\n    if (currentCard.deck_card_id === card.deck_card_id) {\n      console.log(\"Abandon Current Scheme\", card);\n      setCurrentCard(\"archenemy\", null);\n      const abandonedOngoing = store.set(\"archenemy-abandonedOngoing\", true);\n      this.setState({ currentCard: null, abandonedOngoing });\n    } else {\n      console.log(\"Abandon Scheme\", card);\n      let newOngoing = ongoingSchemes.filter(\n        s => s.deck_card_id !== card.deck_card_id\n      );\n      setAdditionalCards(\"archenemy\", newOngoing);\n      this.setState({ ongoingSchemes: newOngoing });\n    }\n  };\n\n  renderAbandon(card) {\n    const isOngoing = card.type_line === \"Ongoing Scheme\";\n    if (isOngoing && !hasCustomProperty(\"unabandonable\", card)) {\n      return (\n        <Button\n          onClick={() => this.abandonScheme(card)}\n          color=\"danger\"\n          size=\"lg\"\n          className=\"btn-translucent\"\n        >\n          <h2 className=\"mb-0\">\n            <i className=\"ss ss-bok ss-2x ss-grad ss-rare mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Abandon Scheme</span>\n          </h2>\n        </Button>\n      );\n    }\n  }\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  };\n\n  renderHistory = () => {\n    const { showHistory } = this.state;\n    const history = getHistory(\"archenemy\");\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleHistory} block>\n          {showHistory ? \"Hide\" : \"Show\"} History\n        </Button>\n        <Fade in={showHistory}>\n          {showHistory && history && (\n            <ListGroup>\n              {history.reverse().map(p => (\n                <Scheme card={p} key={p.deck_card_id} listDisplay={true} />\n              ))}\n            </ListGroup>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n\n  selectDeck(name, cards) {\n    console.log(`Selected ${name}`, cards);\n\n    const newCards = name === \"All\" ? cards : [];\n    cards.forEach(c => {\n      for (let i = 0; i < c.count; i++) {\n        newCards.push(c);\n      }\n    });\n\n    const deck = getOrCreateCurrentDeck(\"archenemy\", newCards, true);\n    this.setState({\n      deck,\n      deckSelection: false\n    });\n  }\n\n  incrementCount(card) {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => {\n      if (c.id === card.id) {\n        c.count += 1;\n        c.count = Math.min(c.count, 2);\n      }\n    });\n    this.setState({ customDeck });\n  }\n\n  decrementCount(card) {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => {\n      if (c.id === card.id) {\n        c.count -= 1;\n        c.count = Math.max(c.count, 0);\n      }\n    });\n    this.setState({ customDeck });\n  }\n\n  customDeckSize() {\n    const { customDeck } = this.state;\n    const reducer = (a, b) => a + b;\n    return customDeck.map(c => c.count).reduce(reducer, 0);\n  }\n\n  resetCustomDeck = () => {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({ customDeck });\n  };\n\n  renderBuildCustomDeck() {\n    const { customDeck } = this.state;\n\n    const cardListIems = customDeck.map(card => (\n      <ListGroupItem key={card.id} color=\"dark\">\n        <Scheme card={card} />\n        <div className=\"text-center\">\n          <h1>x{card.count}</h1>\n          <ButtonGroup>\n            <Button\n              disabled={card.count <= 0}\n              onClick={() => this.decrementCount(card)}\n            >\n              <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n            </Button>\n            <Button\n              disabled={card.count >= 2}\n              onClick={() => this.incrementCount(card)}\n            >\n              <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n            </Button>\n          </ButtonGroup>\n        </div>\n      </ListGroupItem>\n    ));\n\n    return (\n      <>\n        <Card>\n          <CardBody>\n            <CardTitle>\n              <h3 className=\"text-center\">Custom Deck</h3>\n            </CardTitle>\n            <Button block id=\"custom-deck-toggle\">\n              Build Custom\n            </Button>\n            <UncontrolledCollapse toggler=\"custom-deck-toggle\">\n              <div className=\"fixed-top mt-1 ml-1 text-left\">\n                <Alert color=\"info\" className=\"clearfix\">\n                  <h4 className=\"float-left\">\n                    Custom Deck Size: {this.customDeckSize()}\n                  </h4>\n                  <ButtonGroup className=\"float-right\">\n                    <Button color=\"danger\" onClick={this.resetCustomDeck}>\n                      Reset\n                    </Button>\n                    <Button\n                      color=\"success\"\n                      onClick={() => this.selectDeck(\"Custom\", customDeck)}\n                    >\n                      Use Deck\n                    </Button>\n                  </ButtonGroup>\n                </Alert>\n              </div>\n\n              <ListGroup>{cardListIems}</ListGroup>\n            </UncontrolledCollapse>\n            <Button\n              block\n              color=\"success\"\n              onClick={() => this.selectDeck(\"Custom\", customDeck)}\n            >\n              Use Deck\n            </Button>\n          </CardBody>\n        </Card>\n      </>\n    );\n  }\n\n  renderPrebuilts() {\n    const { schemes } = this.state;\n    const prebuilts = getDeckList();\n    const prebuiltItems = prebuilts.map((prebuilt, i) => {\n      const cardList = getCardList(prebuilt, schemes);\n      const cardListIems = cardList.map((card, i) => (\n        <ListGroupItem key={i} color=\"dark\">\n          <Scheme card={card} />\n          <h1 className=\"text-center\">x{card.count}</h1>\n        </ListGroupItem>\n      ));\n      return (\n        <Card key={i}>\n          <CardBody>\n            <CardTitle>\n              <h3 className=\"text-center\">{prebuilt}</h3>\n            </CardTitle>\n            <Button block id={`prebuilt-${i}`}>\n              Decklist\n            </Button>\n            <UncontrolledCollapse toggler={`#prebuilt-${i}`}>\n              <ListGroup>{cardListIems}</ListGroup>\n            </UncontrolledCollapse>\n            <Button\n              block\n              color=\"success\"\n              onClick={() => this.selectDeck(prebuilt, cardList)}\n            >\n              Use Deck\n            </Button>\n          </CardBody>\n        </Card>\n      );\n    });\n\n    return <>{prebuiltItems}</>;\n  }\n\n  toggleDeck = () => {\n    this.setState({ showDeck: !this.state.showDeck });\n  };\n\n  toggleDeckImages = () => {\n    this.setState({ showDeckImages: !this.state.showDeckImages });\n  };\n\n  manipulateDeck = () => {\n    this.refreshDeck();\n  };\n\n  renderDeck = () => {\n    const { deck, showDeck, showDeckImages } = this.state;\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleDeck} block>\n          {showDeck ? \"Hide\" : \"Show\"} Deck\n        </Button>\n        <Fade in={showDeck}>\n          {showDeck && deck && (\n            <>\n              <Button onClick={this.toggleDeckImages} block>\n                {showDeckImages ? \"Hide\" : \"Show\"} Full Card\n              </Button>\n              <ListGroup>\n                {deck.map((p, i) => (\n                  <React.Fragment key={p.deck_card_id}>\n                    <Scheme card={p} listDisplay={!showDeckImages} />\n                    <ListGroupItem className=\"text-center justify-content-center d-flex\">\n                      <ButtonToolbar>\n                        <ButtonGroup>\n                          <Button\n                            disabled={i === 0}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                moveCard(\"archenemy\", i, i - 1)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n                          </Button>\n                          <Button\n                            disabled={i === deck.length - 1}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                moveCard(\"archenemy\", i, i + 1)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"ml-2\">\n                          <Button\n                            disabled={i === 0}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                findAndPutOnTop(\"archenemy\", p.deck_card_id)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-untap ms-2x ss-mythic ss-grad\" />\n                          </Button>\n                          <Button\n                            disabled={i === deck.length - 1}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                findAndPutOnBottom(\"archenemy\", p.deck_card_id)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-tap ms-2x ss-mythic ss-grad\" />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"ml-2\">\n                          <Button\n                            color=\"danger\"\n                            onClick={() =>\n                              this.manipulateDeck(removeCards(\"archenemy\", [p]))\n                            }\n                          >\n                            <i className=\"ss ss-x ss-10e ss-rare ss-grad ss-2x\" />\n                          </Button>\n                        </ButtonGroup>\n                      </ButtonToolbar>\n                    </ListGroupItem>\n                  </React.Fragment>\n                ))}\n              </ListGroup>\n            </>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport const SYBHelmet = () => {\n  return (\n    <Helmet title=\"SYB\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/syb-manifest.json\"}\n      />\n    </Helmet>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Button, ButtonGroup, Spinner } from \"reactstrap\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport debounce from \"lodash/debounce\";\nimport store from \"store\";\n\nimport { shuffle } from \"../../mtg/deck.js\";\n\nimport { SYBHelmet } from \"./Helmet\";\n\nconst circleLayout = { name: \"circle\", nodeDimensionsIncludeLabels: true };\nconst gridLayout = { name: \"grid\", nodeDimensionsIncludeLabels: true, rows: 2 };\n\nexport class SYB extends Component {\n  state = {\n    playerCount: 4,\n    targets: null,\n    loadingDirection: false\n  };\n\n  componentDidMount = () => {\n    const playerCount = store.get(\"syb-playerCount\") || 4;\n    const targets = store.get(\"syb-targets\") || null;\n    const tableShape = store.get(\"syb-tableShape\") || \"circle\";\n    this.setState({\n      playerCount,\n      targets,\n      tableShape\n    });\n  };\n\n  generateNodes() {\n    const { playerCount } = this.state;\n    const players = Array.from(Array(playerCount).keys());\n    return players.map(p => {\n      const label = p === 0 ? \"J\" : p;\n      return { data: { id: `player-${p}`, label, type: \"triangle-tee\" } };\n    });\n  }\n\n  generateEdges() {\n    const { targets } = this.state;\n\n    return !targets\n      ? []\n      : targets.map((player, i) => {\n          const targetIndex = i + 1 >= targets.length ? 0 : i + 1;\n          const target = targets[targetIndex];\n          // const playerContent = this.renderPlayer(player, target, playerCount);\n          return {\n            data: {\n              source: `player-${player}`,\n              target: `player-${target}`,\n              label: `Edge from ${player} to ${target}`\n            }\n          };\n        });\n  }\n\n  regenerateOrder(c) {\n    const { playerCount } = this.state;\n    const players = Array.from(Array(c || playerCount).keys());\n    const targets = store.set(\"syb-targets\", shuffle(players));\n    this.setState({ targets });\n  }\n\n  handleCy(cy) {\n    const layout = this.isSquare() ? gridLayout : circleLayout;\n    const SELECT_THRESHOLD = 100;\n\n    // Refresh Layout if needed\n    const refreshLayout = debounce(() => {\n      cy.layout(layout).run();\n    }, SELECT_THRESHOLD);\n\n    cy.on(\"add remove\", () => {\n      refreshLayout();\n    });\n  }\n\n  renderCyto() {\n    const layout = this.isSquare() ? gridLayout : circleLayout;\n    const elements = {\n      nodes: this.generateNodes(),\n      edges: this.generateEdges()\n    };\n    const stylesheet = [\n      {\n        selector: \"node\",\n        style: {\n          padding: \"50%\",\n          width: \"50%\",\n          height: \"50%\",\n          \"background-color\": \"#17a2b8\",\n          \"text-valign\": \"center\",\n          \"text-halign\": \"center\",\n          content: \"data(label)\"\n        }\n      },\n      {\n        selector: \"node[label]\",\n        style: {\n          label: \"data(label)\",\n          \"font-size\": \"2em\",\n          color: \"white\"\n        }\n      },\n      {\n        selector: \"edge\",\n        style: {\n          width: \"5%\",\n          \"curve-style\": this.isSquare() ? \"unbundled-bezier\" : \"straight\",\n          \"target-arrow-shape\": \"triangle \",\n          \"arrow-scale\": 2.5,\n          \"target-arrow-color\": \"#FF4444\",\n          \"line-fill\": \"linear-gradient\",\n          \"line-gradient-stop-colors\": [\"#17a2b8\", \"#FF4444\"]\n        }\n      }\n    ];\n\n    return (\n      <CytoscapeComponent\n        cy={cy => this.handleCy(cy)}\n        elements={CytoscapeComponent.normalizeElements(elements)}\n        style={{ width: \"100vw\", height: \"100vh\" }}\n        className={\"flex-grow\"}\n        stylesheet={stylesheet}\n        userPanningEnabled={false}\n        layout={layout}\n      />\n    );\n  }\n\n  isSquare() {\n    const { tableShape } = this.state;\n    return false && tableShape === \"square\";\n  }\n\n  incrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\"syb-playerCount\", playerCount + 1);\n    this.regenerateOrder(newPlayerCount);\n    this.setState({ playerCount: newPlayerCount });\n  }\n\n  decrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\n      \"syb-playerCount\",\n      Math.max(playerCount - 1, 1)\n    );\n    this.regenerateOrder(newPlayerCount);\n    this.setState({ playerCount: newPlayerCount });\n  }\n\n  setTableShape(shape) {\n    const tableShape = store.set(\"syb-tableShape\", shape);\n    this.setState({ tableShape });\n  }\n\n  whichWay = () => {\n    const targets = store.set(\"syb-targets\", null);\n    this.setState({ loadingDirection: true, targets });\n\n    setTimeout(() => {\n      this.regenerateOrder();\n      this.setState({ loadingDirection: false });\n    }, 1500);\n  };\n\n  render() {\n    const { playerCount, tableShape, loadingDirection } = this.state;\n    return (\n      <div className=\"syb\">\n        <SYBHelmet />\n        <div className=\"my-4\">\n          <div className=\"text-center\">\n            <h1>{playerCount} Players</h1>\n            <ButtonGroup>\n              <Button\n                disabled={playerCount <= 1}\n                onClick={() => this.decrementCount()}\n              >\n                <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n              </Button>\n              <Button onClick={() => this.incrementCount()}>\n                <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n              </Button>\n            </ButtonGroup>\n            {false && (\n              <ButtonGroup>\n                <Button\n                  active={tableShape === \"circle\"}\n                  onClick={() => this.setTableShape(\"circle\")}\n                >\n                  <i className=\"ss ss-portal ss-2x\" />\n                </Button>\n                <Button\n                  active={tableShape === \"square\"}\n                  onClick={() => this.setTableShape(\"square\")}\n                >\n                  <i className=\"ss ss-bfz ss-2x\" />\n                </Button>\n              </ButtonGroup>\n            )}\n          </div>\n        </div>\n        <div className=\"text-center my-2\">\n          <Button\n            color=\"danger\"\n            onClick={this.whichWay}\n            block\n            disabled={loadingDirection}\n          >\n            {loadingDirection ? \"Calculating...\" : \"Which way are we screwing?\"}\n          </Button>\n        </div>\n        <div className=\"d-flex\">\n          {loadingDirection && (\n            <div\n              className=\"position-absolute w-75 text-center\"\n              style={{ top: \"50%\" }}\n            >\n              <Spinner\n                color=\"danger\"\n                type=\"grow\"\n                className=\"position-absolute\"\n                style={{ width: \"10rem\", height: \"10rem\" }}\n              />\n            </div>\n          )}\n          {this.renderCyto()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport const FormatsHelmet = () => {\n  return (\n    <Helmet title=\"Formats\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_180.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_180.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"192x192\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_192.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"512x512\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_512.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/formats-manifest.json\"}\n      />\n    </Helmet>\n  );\n};\n","export const TAGS = [\n  \"Chode Mode\",\n  \"Deck Swaps\",\n  \"Planechase\",\n  \"EDH\",\n  \"2 Headed Giant\",\n  \"SYB\",\n  \"Range 1\",\n  \"Free for All\",\n  \"Pentacle\",\n  \"Secret Partners\",\n  \"Archenemy\",\n  \"Pentacle\",\n  \"Emperor\"\n];\n\nexport const FOUR_PLAYER = [\n  { id: 1, name: \"Chode Mode\", initial: 0.05, tags: [\"Chode Mode\"] },\n  { id: 2, name: \"Planechase\", initial: 0.15, tags: [\"Planechase\"] },\n  { id: 3, name: \"Planechase EDH\", initial: 0.1, tags: [\"Planechase\", \"EDH\"] },\n  {\n    id: 4,\n    name: \"EDH Free for All\",\n    initial: 0.02,\n    tags: [\"EDH\", \"Free for All\"]\n  },\n  {\n    id: 5,\n    name: \"EDH SYB\",\n    initial: 0.15,\n    tags: [\"EDH\", \"SYB\"],\n    showSwaps: true\n  },\n  {\n    id: 6,\n    name: \"EDH SYB Deck Swaps\",\n    displayName: \"EDH SYB\",\n    initial: 0.02,\n    tags: [\"EDH\", \"SYB\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  { id: 7, name: \"2 Headed Giant\", initial: 0.2, tags: [\"2 Headed Giant\"] },\n  { id: 8, name: \"Archenemy\", initial: 0.02, tags: [\"Archenemy\"] },\n  { id: 9, name: \"Range 1\", initial: 0.1, tags: [\"Range 1\"] },\n  { id: 10, name: \"Free for All\", initial: 0.02, tags: [\"Free for All\"] },\n  { id: 11, name: \"SYB\", initial: 0.15, tags: [\"SYB\"], showSwaps: true },\n  {\n    id: 12,\n    name: \"SYB Deck Swaps\",\n    displayName: \"SYB\",\n    initial: 0.02,\n    tags: [\"SYB\", \"Deck Swaps\"],\n    showSwaps: true\n  }\n];\n\nexport const FIVE_PLAYER = [\n  { id: 1, name: \"Chode Mode\", initial: 0.05, tags: [\"Chode Mode\"] },\n  { id: 2, name: \"Planechase \", initial: 0.01, tags: [\"Planechase\"] },\n  { id: 3, name: \"Planechase EDH\", initial: 0.05, tags: [\"Planechase\", \"EDH\"] },\n  {\n    id: 4,\n    name: \"EDH Free for All\",\n    initial: 0.02,\n    tags: [\"EDH\", \"Free for All\"]\n  },\n  {\n    id: 5,\n    name: \"EDH SYB\",\n    initial: 0.09,\n    tags: [\"EDH\", \"SYB\"],\n    showSwaps: true\n  },\n  {\n    id: 6,\n    name: \"EDH SYB Deck Swaps\",\n    displayName: \"SYB\",\n    initial: 0.02,\n    tags: [\"EDH\", \"SYB\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  {\n    id: 7,\n    name: \"EDH Pentacle\",\n    initial: 0.09,\n    tags: [\"EDH\", \"Pentacle\"],\n    showSwaps: true\n  },\n  {\n    id: 8,\n    name: \"EDH Pentacle Deck Swaps\",\n    displayName: \"EDH Pentacle\",\n    initial: 0.02,\n    tags: [\"EDH\", \"Pentacle\", \"Deck Swaps\"]\n  },\n  {\n    id: 9,\n    name: \"Pentacle\",\n    initial: 0.02,\n    tags: [\"Pentacle\"],\n    showSwaps: true\n  },\n  {\n    id: 10,\n    name: \"Pentacle Deck Swaps\",\n    displayName: \"Pentacle\",\n    initial: 0.02,\n    tags: [\"Pentacle\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  { id: 11, name: \"Range 1\", initial: 0.01, tags: [\"Range 1\"] },\n  { id: 12, name: \"SYB\", initial: 0.02, tags: [\"SYB\"], showSwaps: true },\n  {\n    id: 13,\n    name: \"SYB Deck Swaps\",\n    displayName: \"SYB\",\n    initial: 0.02,\n    tags: [\"SYB\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  { id: 14, name: \"Free for All\", initial: 0.02, tags: [\"Free for All\"] }\n];\n\nexport const SIX_PLAYER = [\n  { id: 1, name: \"Chode Mode\", initial: 0.15, tags: [\"Chode Mode\"] },\n  { id: 2, name: \"Planechase \", initial: 0.85, tags: [\"Planechase\"] },\n  { id: 3, name: \"Planechase EDH\", initial: 0.15, tags: [\"Planechase\", \"EDH\"] },\n  {\n    id: 4,\n    name: \"EDH Free for All\",\n    initial: 0.15,\n    tags: [\"EDH\", \"Free for All\"]\n  },\n  {\n    id: 5,\n    name: \"EDH SYB\",\n    initial: 0.85,\n    tags: [\"EDH\", \"SYB\"],\n    showSwaps: true\n  },\n  {\n    id: 6,\n    name: \"EDH SYB Deck Swaps\",\n    displayName: \"EDH SYB\",\n    initial: 0.15,\n    tags: [\"EDH\", \"SYB\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  {\n    id: 7,\n    name: \"EDH Emperor\",\n    initial: 0.85,\n    tags: [\"EDH\", \"Emperor\"],\n    showSwaps: true\n  },\n  {\n    id: 8,\n    name: \"EDH Emperor Deck Swaps\",\n    displayName: \"EDH Emperor\",\n    initial: 0.15,\n    tags: [\"EDH\", \"Emperor\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  {\n    id: 9,\n    name: \"2 Headed Giant SYB\",\n    initial: 0.1275,\n    tags: [\"2 Headed Giant\", \"SYB\"]\n  },\n  {\n    id: 10,\n    name: \"2 Headed Giant Free for All\",\n    initial: 0.15,\n    tags: [\"2 Headed Giant\", \"Free for All\"]\n  },\n  {\n    id: 11,\n    name: \"Emperor\",\n    initial: 0.1275,\n    tags: [\"Emperor\"],\n    showSwaps: true\n  },\n  {\n    id: 12,\n    name: \"Emperor Deck Swaps\",\n    displayName: \"Emperor\",\n    initial: 0.15,\n    tags: [\"Emperor\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  { id: 13, name: \"Range 1\", initial: 0.85, tags: [\"Range 1\"] },\n  { id: 14, name: \"Free for All\", initial: 0.15, tags: [\"Free for All\"] },\n  { id: 15, name: \"SYB\", initial: 0.1275, tags: [\"SYB\"], showSwaps: true },\n  {\n    id: 16,\n    name: \"SYB Deck Swaps\",\n    displayName: \"SYB\",\n    initial: 0.15,\n    tags: [\"SYB\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  {\n    id: 17,\n    name: \"Secret Partners Deck Swaps\",\n    displayName: \"Secret Partners\",\n    initial: 0.15,\n    tags: [\"Secret Partners\", \"Deck Swaps\"],\n    showSwaps: true\n  },\n  {\n    id: 18,\n    name: \"Secret Partners\",\n    initial: 0.1275,\n    tags: [\"Secret Partners\"],\n    showSwaps: true\n  }\n];\n","import React, { Component } from \"react\";\nimport { Button, ButtonGroup, Spinner } from \"reactstrap\";\nimport store from \"store\";\nimport { FormatsHelmet } from \"./Helmet\";\nimport { TAGS, FOUR_PLAYER, FIVE_PLAYER, SIX_PLAYER } from \"./formats\";\n\nimport cloneDeep from \"lodash/cloneDeep\";\nimport flatMap from \"lodash/flatMap\";\nimport uniq from \"lodash/uniq\";\n\nimport \"rc-slider/assets/index.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\nimport Slider from \"rc-slider\";\nimport Tooltip from \"rc-tooltip\";\nconst Handle = Slider.Handle;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nexport class Formats extends Component {\n  state = {\n    playerCount: 4,\n    tags: null,\n    currentFormats: null,\n    activeFormat: null,\n    loadingFormat: false,\n    swapTriggered: false\n  };\n\n  componentDidMount = () => {\n    const playerCount =\n      store.get(\"formats-playerCount\") || store.set(\"formats-playerCount\", 4);\n    const tags =\n      store.get(\"formats-tags\") || store.set(\"formats-tags\", this.createTags());\n    const currentFormats =\n      store.get(\"formats-current\") ||\n      store.set(\"formats-current\", this.createFormats());\n\n    this.setState({\n      playerCount,\n      tags,\n      currentFormats\n    });\n  };\n\n  reset = () => {\n    const playerCount = store.set(\"formats-playerCount\", 4);\n    const tags = store.set(\"formats-tags\", this.createTags());\n    const currentFormats = store.set(\"formats-current\", this.createFormats());\n\n    this.setState({\n      playerCount,\n      tags,\n      currentFormats\n    });\n  };\n\n  pickFormat() {\n    console.log(\"Generate Format\");\n    this.setState({ loadingFormat: true, swapTriggered: false });\n    const formats = this.activeFormats();\n    const activeFormat = this.getRandomFormat(formats);\n    console.log(\"picked item\", activeFormat);\n    setTimeout(() => {\n      this.setState({ loadingFormat: false, activeFormat });\n    }, 1000);\n  }\n\n  rand = (min, max) => {\n    return Math.random() * (max - min) + min;\n  };\n\n  getRandomFormat = list => {\n    const totalWeight = list.reduce((result, cur) => {\n      return result + cur.weight;\n    }, 0);\n    const randomNum = this.rand(0, totalWeight);\n    let weightSum = 0;\n\n    return list.find(item => {\n      weightSum += item.weight;\n      return randomNum <= weightSum;\n    });\n  };\n\n  incrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\n      \"formats-playerCount\",\n      Math.min(playerCount + 1, 6)\n    );\n\n    this.setState({ playerCount: newPlayerCount, activeFormat: null });\n  }\n\n  decrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\n      \"formats-playerCount\",\n      Math.max(playerCount - 1, 4)\n    );\n\n    this.setState({ playerCount: newPlayerCount, activeFormat: null });\n  }\n\n  updateFormatValue = (format, value) => {\n    const { playerCount, currentFormats } = this.state;\n    currentFormats[playerCount].forEach(f => {\n      if (f.name === format.name) {\n        format.weight = value / 100;\n      }\n    });\n    const updatedCurrentFormats = store.set(\"formats-current\", currentFormats);\n    this.setState({ currentFormats: updatedCurrentFormats });\n  };\n\n  render() {\n    const {\n      playerCount,\n      activeFormat,\n      loadingFormat,\n      swapTriggered\n    } = this.state;\n    const showDeckswapButton =\n      !loadingFormat &&\n      !swapTriggered &&\n      activeFormat &&\n      activeFormat.showSwaps &&\n      this.enabledTags().includes(\"Deck Swaps\");\n    return (\n      <div className=\"formats\">\n        <FormatsHelmet />\n        <div className=\"my-4\">\n          <div className=\"text-center\">\n            <h1>{playerCount} Players</h1>\n            <ButtonGroup className=\"my-4\">\n              <Button\n                disabled={playerCount <= 1}\n                onClick={() => this.decrementCount()}\n              >\n                <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n              </Button>\n              <Button onClick={() => this.incrementCount()}>\n                <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n              </Button>\n            </ButtonGroup>\n            <div className=\"text-center mb-5\">\n              <Button\n                block\n                color=\"danger\"\n                onClick={() => this.pickFormat()}\n                disabled={loadingFormat}\n              >\n                {loadingFormat ? \"Computing...\" : \"Which Format?\"}\n              </Button>\n              {loadingFormat ? (\n                <Spinner size=\"lg\" color=\"primary\" className=\"mt-3 mb-2\">\n                  Loading...\n                </Spinner>\n              ) : (\n                <h1 className=\"my-2\">{this.renderActiveFormatName()}</h1>\n              )}\n              {showDeckswapButton && (\n                <Button\n                  onClick={this.triggerSwap}\n                  block\n                  className={\"w-50 mx-auto\"}\n                  color=\"success\"\n                >\n                  Deckswaps?\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n        <hr className=\"border-info\" />\n        <div className=\"mb-5\">{this.renderFormatToggles()}</div>\n        <div className=\"mb-5\">{this.renderActiveFormats()}</div>\n        <div className=\"my-3\">\n          <Button color=\"danger\" onClick={this.reset} block>\n            Reset\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderActiveFormatName() {\n    const { activeFormat, swapTriggered } = this.state;\n\n    if (!activeFormat) {\n      return \"None\";\n    } else {\n      return swapTriggered\n        ? activeFormat.name\n        : activeFormat.displayName || activeFormat.name;\n    }\n  }\n\n  triggerSwap = () => {\n    this.setState({ swapTriggered: true });\n  };\n\n  createFormats() {\n    let formats = {\n      4: cloneDeep(FOUR_PLAYER),\n      5: cloneDeep(FIVE_PLAYER),\n      6: cloneDeep(SIX_PLAYER)\n    };\n    formats[4].forEach(f => (f.weight = 0.5) /* f.initial */);\n    formats[5].forEach(f => (f.weight = 0.5) /* f.initial */);\n    formats[6].forEach(f => (f.weight = 0.5) /* f.initial */);\n    return formats;\n  }\n\n  activeTags() {\n    const { currentFormats, playerCount } = this.state;\n    return currentFormats\n      ? uniq(\n          flatMap(currentFormats[playerCount], f => {\n            return f.tags;\n          })\n        ).sort()\n      : [];\n  }\n\n  createTags() {\n    return TAGS.map(t => {\n      return { name: t, enabled: true };\n    });\n  }\n\n  renderFormatToggles() {\n    const { tags } = this.state;\n    if (tags) {\n      const activeTags = this.activeTags();\n      const tagStates = tags.filter(t => activeTags.includes(t.name));\n\n      const values = tagStates.map((t, i) => {\n        return (\n          <div className=\"col-6 col-md-4 col-lg-3 mb-1\" key={i}>\n            <Button\n              size=\"sm\"\n              block\n              onClick={() => {\n                this.toggleTag(t);\n              }}\n              color={t.enabled ? \"info\" : \"secondary\"}\n            >\n              <div className=\"float-left\">\n                {t.enabled ? (\n                  <i className=\"ms ms-dfc ms-dfc-day text-light\" />\n                ) : (\n                  <i className=\"ms ms-dfc ms-dfc-night text-dark\" />\n                )}\n              </div>\n              <div className=\"d-inline\">{t.name}</div>\n            </Button>\n          </div>\n        );\n      });\n\n      return <div className=\"row\">{values}</div>;\n    }\n  }\n\n  toggleTag = tag => {\n    const { tags } = this.state;\n    tags.forEach(t => {\n      if (t.name === tag.name) {\n        t.enabled = !t.enabled;\n      }\n    });\n    const newTags = store.set(\"formats-tags\", tags);\n    this.setState({ tags: newTags });\n  };\n\n  enabledTags() {\n    const { tags } = this.state;\n    return tags ? tags.filter(t => t.enabled).map(t => t.name) : [];\n  }\n\n  activeFormats() {\n    const { tags, currentFormats, playerCount } = this.state;\n    let formats = null;\n    console.log(\" Player\", playerCount);\n    console.log(\"format\", currentFormats);\n    if (tags && currentFormats && playerCount) {\n      formats = currentFormats[playerCount];\n      const enabledTags = this.enabledTags();\n      console.log(\"enabledTags\", enabledTags);\n      formats = formats.filter(f => f.tags.every(t => enabledTags.includes(t)));\n      // formats.forEach(f => f.weight = f.initial) // Store weights\n      console.log(\"Formats\", formats);\n    }\n    return formats;\n  }\n\n  renderActiveFormats() {\n    const { playerCount } = this.state;\n    const formats = this.activeFormats();\n    if (formats) {\n      const formatTags = formats.map(f => {\n        return (\n          <div\n            className=\"row mb-2\"\n            key={`${playerCount}-${f.id}-${f.weight * 100}`}\n          >\n            <div className=\"col-5\">{f.name}</div>\n            <div className=\"col-7\">\n              <Slider\n                min={0}\n                max={100}\n                marks={{ 25: \"25\", 50: \"50\", 75: \"75\" }}\n                defaultValue={f.weight * 100}\n                included={true}\n                handle={handle}\n                onAfterChange={value => {\n                  this.updateFormatValue(f, value);\n                }}\n              />\n            </div>\n          </div>\n        );\n      });\n      return formatTags;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  NavLink as RRNavLink\n} from \"react-router-dom\";\nimport {\n  Alert,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport store from \"store\";\n\nimport \"./App.scss\";\n\nimport { setSetting, getSetting, toggleSetting } from \"./util/settings\";\n\nimport { Home } from \"./pages/home\";\nimport { Planechase } from \"./pages/planechase\";\nimport { Archenemy } from \"./pages/archenemy\";\nimport { SYB } from \"./pages/syb\";\nimport { Formats } from \"./pages/formats\";\n\nclass App extends Component {\n  state = {\n    isOpen: false,\n    disclaimerDismissed: false,\n    displayText: false,\n    displayImages: false,\n    devTools: false,\n    displayGatherer: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  componentDidMount = () => {\n    this.setState({\n      disclaimerDismissed: getSetting(\"disclaimerDismissed\"),\n      displayText: getSetting(\"displayText\"),\n      displayImages: getSetting(\"displayImages\"),\n      devTools: getSetting(\"devTools\")\n    });\n  };\n\n  dismissDisclaimer = () => {\n    this.setState({\n      disclaimerDismissed: setSetting(\"disclaimerDismissed\", true)\n    });\n  };\n\n  _toggleSetting = setting => {\n    const tempState = {};\n    tempState[setting] = toggleSetting(setting);\n    this.setState(tempState);\n  };\n\n  _mtgToggler = (value, displayText, onClick) => {\n    return (\n      <DropdownItem toggle={false} onClick={onClick}>\n        <span>\n          {value ? (\n            <i className=\"ms ms-dfc ms-dfc-day\" />\n          ) : (\n            <i className=\"ms ms-dfc ms-dfc-night\" />\n          )}\n        </span>\n        <span className=\"ml-3\">{displayText}</span>\n      </DropdownItem>\n    );\n  };\n\n  closeNavbar = () => {\n    if (this.state.isOpen) {\n      this.setState({ isOpen: false });\n    }\n  };\n\n  render() {\n    const {\n      disclaimerDismissed,\n      displayText,\n      displayImages,\n      displayGatherer,\n      devTools\n    } = this.state;\n    return (\n      <BrowserRouter>\n        <HelmetProvider>\n          <Helmet titleTemplate=\"%s - Jibbermaster\" />\n          <Navbar\n            color=\"dark\"\n            dark\n            expand=\"md\"\n            className=\"text-right p-1 noselect\"\n          >\n            <NavbarBrand />\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink\n                    tag={RRNavLink}\n                    exact\n                    to=\"/\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    tag={RRNavLink}\n                    exact\n                    to=\"/planechase\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Planechase\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    tag={RRNavLink}\n                    exact\n                    to=\"/archenemy\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Archenemy\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    tag={RRNavLink}\n                    exact\n                    to=\"/syb\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    SYB\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    tag={RRNavLink}\n                    exact\n                    to=\"/formats\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Formats\n                  </NavLink>\n                </NavItem>\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret>\n                    Settings\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {this._mtgToggler(\n                      disclaimerDismissed,\n                      \"Disclaimer Dismissed\",\n                      () => this._toggleSetting(\"disclaimerDismissed\")\n                    )}\n                    {this._mtgToggler(displayText, \"Display Text\", () =>\n                      this._toggleSetting(\"displayText\")\n                    )}\n                    {this._mtgToggler(displayImages, \"Display Images\", () =>\n                      this._toggleSetting(\"displayImages\")\n                    )}\n                    {this._mtgToggler(displayGatherer, \"Display Gatherer\", () =>\n                      this._toggleSetting(\"displayGatherer\")\n                    )}\n                    {this._mtgToggler(devTools, \"Dev Tools\", () =>\n                      this._toggleSetting(\"devTools\")\n                    )}\n                    <DropdownItem divider />\n                    <DropdownItem\n                      toggle={false}\n                      onClick={() => store.clearAll()}\n                    >\n                      Clear Everything\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </Nav>\n            </Collapse>\n          </Navbar>\n          <div className=\"app text-light bg-dark col-md-8 offset-md-2 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3\">\n            <Switch>\n              <Route path=\"/\" exact render={props => <Home {...props} />} />\n              <Route\n                path=\"/archenemy\"\n                exact\n                render={props => <Archenemy {...props} />}\n              />\n              <Route\n                path=\"/planechase\"\n                exact\n                render={props => <Planechase {...props} />}\n              />\n              <Route path=\"/syb\" exact render={props => <SYB {...props} />} />\n              <Route\n                path=\"/formats\"\n                exact\n                render={props => <Formats {...props} />}\n              />\n            </Switch>\n            <Alert\n              color=\"warning\"\n              className=\"fixed-bottom mb-0 py-1\"\n              isOpen={!this.state.disclaimerDismissed}\n              toggle={this.dismissDisclaimer}\n            >\n              <h6>Disclaimer</h6>\n              <small className=\"text-muted m-0\">\n                This site is created for personal use. Magic: The Gathering, the\n                mana symbols, the tap symbol and all other related images are\n                owned by Wizards of the Coast. jibbermaster.com is unaffiliated\n                with Wizards of the Coast.\n              </small>\n            </Alert>\n          </div>\n        </HelmetProvider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}