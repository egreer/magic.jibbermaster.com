{"version":3,"sources":["pages/home/index.js","mtg/card.js","pages/planechase/Helmet.js","mtg/deck.js","util/api.js","components/Loading.js","components/magic/Plane.js","components/magic/Counter.js","pages/planechase/index.js","pages/archenemy/Helmet.js","mtg/prebuilt-decks.js","pages/archenemy/index.js","App.js","serviceWorker.js","index.js","images/planechase-back.jpg"],"names":["Home","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","componentDidMount","inherits","createClass","key","value","react_default","a","createElement","className","Helmet","title","rel","href","Button","tag","NavLink","exact","to","block","color","size","Component","getCurrentCard","prefix","store","get","setCurrentCard","card","set","getRevealedCards","setRevealedCards","cards","hasCustomProperty","property","customProperties","find","p","name","gathererImageURL","multiverse_ids","PlanechaseHelmet","_ref","planes","sizes","map","as","id","getOrCreateCurrentDeck","reset","undefined","deck","getCurrentDeck","console","log","shuffle","storeCurrentDeck","drawCard","shift","updateHistory","history","push","getHistory","undoDraw","pop","addCardsToTop","topCards","addCardsToBottom","bottomCards","removeCards","cardsToRemove","filteredDeck","filter","c","r","revealCards","numReveal","onlyPlanes","revealedCards","count","Math","min","tmpCount","i","type_line","search","array","temporaryValue","randomIndex","currentIndex","floor","random","internet","axios","create","getAllPlanechaseCards","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","cached","sent","cache","data","addAdditionalProperties","abrupt","t0","error","stop","properties","Aretopolis","type","Chaotic Aether","Interplanar Tunnel","Kilnspire District","Mount Keralia","Naar Isle","Spatial Merging","Stairs to Infinity","Pools of Becoming","Your Inescapable Doom","time","cacheDate","moment","diff","unix","Loading","props","state","dotsCount","start","_this2","_this$props$interval","interval","dotsInterval","setInterval","setState","clearInterval","max","char","numDots","dots","_this$props","_this$props$label","label","_this$props$numDots","getDotString","classes","Plane","modalOpen","toggleModal","listDisplay","Fragment","ListGroupItem","onClick","Modal","isOpen","toggle","backdrop","ModalBody","centered","Card","inverse","CardBody","renderImage","renderText","CardFooter","renderActions","related_uris","target","_this$props2","displayText","CardTitle","CardSubtitle","CardText","oracle_text","hideImage","CardImg","top","width","src","imageURI","back","Counter","counters","incrementCounter","counterCount","getCounterType","Planechase","loading","currentCard","tripleChaosModalOpen","scryModalOpen","planeswalkDisabled","showHistory","planeswalk","_callee2","_context2","undo","_callee3","_context3","triggerChaos","shuffledCards","slice","toggleHistory","renderHistory","ListGroup","Plane_Plane","selectPlane","restCards","_tripleChaosModalClose","_tripleChaosModalToggle","_scryModalClose","_scryTop","_scryBottom","renderScryModal","_this$state","onClosed","ModalHeader","_this$state2","Helmet_PlanechaseHelmet","disabled","renderChaos","Loading_Loading","renderTwoPlanes","renderFivePlanes","renderCounter","renderTripleChaosModal","Counter_Counter","_this$state3","revealedPlanes","_this3","_this$state4","_this$state5","ModalFooter","outline","aria-label","ArchenemyHelmet","archenemy","DECKS","Archenemy","Helmet_ArchenemyHelmet","renderPrebuilts","prebuiltItems","s","prebuilt","deckname","cardListIems","App","disclaimerDismissed","dismissed","dismissDiscalimer","react_router_dom","titleTemplate","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","RRNavLink","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","clearAll","react_router","path","render","home_Home","archenemy_Archenemy","planechase_Planechase","Alert","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.74c149b8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\n\nexport class Home extends Component {\n  componentDidMount = () => {};\n  render() {\n    return (\n      <div className=\"home\">\n        <Helmet title=\"Magic\">\n          <link\n            rel=\"manifest\"\n            href={process.env.PUBLIC_URL + \"/manifest.json\"}\n          />\n        </Helmet>\n        <div className=\"mt-4\">\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/planechase\"\n            block\n            color=\"info\"\n            size=\"lg\"\n          >\n            <i className=\"ms ms-planeswalker ms-4x mx-2 d-block\" />\n            <span className=\"d-block\">Planechase</span>\n          </Button>\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/archenemy\"\n            block\n            color=\"danger\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-arc ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">Archenemy</span>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import store from \"store\";\n\nexport const getCurrentCard = prefix => {\n  return store.get(`${prefix}-currentCard`);\n};\n\nexport const setCurrentCard = (prefix, card) => {\n  return store.set(`${prefix}-currentCard`, card);\n};\n\nexport const getRevealedCards = prefix => {\n  return store.get(`${prefix}-revealedCards`);\n};\n\nexport const setRevealedCards = (prefix, cards) => {\n  return store.set(`${prefix}-revealedCards`, cards);\n};\n\nexport const hasCustomProperty = (property, card) => {\n  return card && card.customProperties.find(p => p.name === property);\n};\n\nexport const getCounterType = card => {\n  const property = card.customProperties.find(p => p.name === \"counter\");\n  return property.type;\n};\n\nexport const gathererImageURL = card => {\n  return `http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=${\n    card.multiverse_ids[0]\n  }&type=card`;\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { gathererImageURL } from \"../../mtg/card.js\";\n\nexport const PlanechaseHelmet = ({ planes }) => {\n  return (\n    <Helmet title=\"Planechase\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/planechase-manifest.json\"}\n      />\n      {planes &&\n        planes.map(p => (\n          <link\n            rel=\"preload\"\n            href={gathererImageURL(p)}\n            as=\"image\"\n            key={p.id}\n          />\n        ))}\n    </Helmet>\n  );\n};\n","import store from \"store\";\n\nexport const getOrCreateCurrentDeck = (prefix, cards, reset = false) => {\n  let deck = getCurrentDeck(prefix);\n  if (!deck || reset) {\n    console.log(`Creating New ${prefix} Deck`);\n    deck = shuffle(cards);\n    store.set(`${prefix}-history`, []);\n    storeCurrentDeck(prefix, deck);\n  }\n  return deck;\n};\n\nexport const getCurrentDeck = prefix => {\n  return store.get(`${prefix}-deck`);\n};\n\nexport const storeCurrentDeck = (prefix, deck) => {\n  return store.set(`${prefix}-deck`, deck);\n};\n\nexport const drawCard = prefix => {\n  const deck = getCurrentDeck(prefix);\n  const card = deck.shift();\n  updateHistory(prefix, card);\n  storeCurrentDeck(prefix, deck);\n  return card;\n};\n\nexport const updateHistory = (prefix, card) => {\n  const history = store.get(`${prefix}-history`);\n  history.push(card);\n  store.set(`${prefix}-history`, history);\n};\n\nexport const getHistory = (prefix, card) => {\n  return store.get(`${prefix}-history`);\n};\n\nexport const undoDraw = prefix => {\n  const history = store.get(`${prefix}-history`);\n  const card = history.pop();\n  if (card) {\n    addCardsToTop(prefix, [card]);\n  }\n  store.set(`${prefix}-history`, history);\n  return history[history.length - 1];\n};\n\nexport const addCardsToTop = (prefix, topCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, topCards.concat(deck));\n};\n\nexport const addCardsToBottom = (prefix, bottomCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, deck.concat(bottomCards));\n};\n\nexport const deckSize = prefix => {\n  return getCurrentDeck(prefix).length;\n};\n\nexport const findCard = (prefix, card) => {\n  return findCardById(prefix, card.id);\n};\n\nexport const findCardById = (prefix, cardId) => {\n  const deck = getCurrentDeck(prefix);\n  return deck.find(c => c.id === cardId);\n};\n\nexport const findAndPutOnTop = (prefix, cardId) => {\n  const tmpCard = findCardById(cardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToTop(prefix, [tmpCard]);\n  }\n};\n\nexport const findAndPutOnBottom = (prefix, cardId) => {\n  const tmpCard = findCardById(cardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToBottom(prefix, [tmpCard]);\n  }\n};\n\nexport const removeCards = (prefix, cardsToRemove) => {\n  const deck = getCurrentDeck(prefix);\n  const filteredDeck = deck.filter(\n    c => !cardsToRemove.find(r => r.id === c.id)\n  );\n  storeCurrentDeck(prefix, filteredDeck);\n};\n\nexport const revealCards = (prefix, numReveal, onlyPlanes = false) => {\n  const revealedCards = [];\n  const deck = getCurrentDeck(prefix);\n  const count = Math.min(deck.length, numReveal);\n\n  let planes = 0;\n  let tmpCount = count;\n  for (let i = 0; i < tmpCount; i++) {\n    revealedCards.push(deck[i]);\n\n    if (onlyPlanes) {\n      if (deck[i].type_line.search(\"Plane\") >= 0) {\n        planes++;\n      }\n\n      if (i === tmpCount - 1 && planes < count) {\n        tmpCount++;\n      }\n    }\n  }\n\n  return revealedCards;\n};\n\nexport const shuffle = array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\n// \tfunction showHistory(){\n// \t\tforeach( $_SESSION[ $this->prefix . 'history'] as $card){\n// \t\t\techo Card::displayHoverCardName($card, '', 'card');\n// \t\t}\n//\n// \t}\n//\n// \tfunction showRemainingCards(){\n// \t\tforeach(  $_SESSION[ $this->prefix . 'deck'] as $card){\n// \t\t echo Card::displayHoverCardName($card, $classes='');\n// \t\t}\n// \t}\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport store from \"store\";\n\nexport const internet = axios.create();\n\nconst PLANES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Aplane+or+t%3Aphenomenon&unique=cards\";\n\nconst SCHEMES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Ascheme&unique=cards\";\n\nexport const getAllPlanechaseCards = async () => {\n  try {\n    let planes = cached(\"planes\");\n    if (!planes) {\n      console.log(\"Loading from Axios\");\n      let response = await internet.get(PLANES_URL);\n      planes = response.data.data;\n      planes = planes.map(p => addAdditionalProperties(p));\n      cache(\"planes\", planes);\n      // TODO use the expire store parameter\n    } else {\n      console.log(\"Loaded from store\");\n    }\n    return planes;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nfunction addAdditionalProperties(card) {\n  const properties = {\n    Aretopolis: [{ name: \"counter\", type: \"Scroll\" }],\n    \"Chaotic Aether\": [{ name: \"all-chaos\" }],\n    \"Interplanar Tunnel\": [{ name: \"top-5\" }],\n    \"Kilnspire District\": [{ name: \"counter\", type: \"Charge\" }],\n    \"Mount Keralia\": [{ name: \"counter\", type: \"Pressure\" }],\n    \"Naar Isle\": [{ name: \"counter\", type: \"Flame\" }],\n    \"Spatial Merging\": [{ name: \"two-planes\" }],\n    \"Stairs to Infinity\": [{ name: \"chaos-trigger\" }, { name: \"scry-1\" }],\n    \"Pools of Becoming\": [{ name: \"chaos-trigger\" }, { name: \"triple-chaos\" }],\n    \"Your Inescapable Doom\": [\n      { name: \"unabandonable\" },\n      { name: \"counter\", type: \"Doom\" }\n    ]\n  };\n\n  if (properties[card.name]) {\n    card.customProperties = properties[card.name];\n  } else {\n    card.customProperties = [];\n  }\n\n  return card;\n}\n\nfunction cached(prefix) {\n  let data = store.get(prefix);\n  let cacheDate = store.get(`${prefix}-fetched`);\n  if (data && !old(cacheDate)) {\n    return data;\n  }\n  return null;\n}\n\nfunction cache(prefix, data) {\n  store.set(prefix, data);\n  store.set(`${prefix}-fetched`, moment().unix());\n}\n\nfunction old(time) {\n  return time && moment().diff(moment.unix(time), \"days\") > 5;\n}\n","import React, { Component } from \"react\";\n\nexport class Loading extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dotsCount: props.start || 0\n    };\n  }\n\n  componentDidMount() {\n    const { interval = 500 } = this.props;\n\n    this.dotsInterval = setInterval(() => {\n      this.setState({ dotsCount: this.state.dotsCount + 1 });\n    }, interval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.dotsInterval);\n  }\n\n  getDotString(count, max, char = \".\") {\n    let numDots = count % (max + 1);\n    let dots = \"\";\n\n    for (let i = 0; i < numDots; i++) {\n      dots += char;\n    }\n\n    return dots;\n  }\n\n  render() {\n    const { label = \"Loading\", className, numDots = 3 } = this.props;\n    const { dotsCount } = this.state;\n    let dots = this.getDotString(dotsCount, numDots, \".\");\n    let classes = `loading-dots ${className}`;\n\n    return (\n      <span className={classes}>\n        {label}\n        {dots}\n      </span>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardTitle,\n  CardBody,\n  CardSubtitle,\n  CardText,\n  CardFooter,\n  ListGroupItem,\n  Modal,\n  ModalBody,\n  Button\n} from \"reactstrap\";\nimport { gathererImageURL } from \"../../mtg/card\";\nimport back from \"../../images/planechase-back.jpg\";\n\nimport \"./planes.scss\";\n\nexport class Plane extends Component {\n  state = {\n    modalOpen: false\n  };\n\n  toggleModal = () => {\n    console.log(\"Toggle Modal\");\n    this.setState({ modalOpen: !this.state.modalOpen });\n  };\n\n  render() {\n    const { listDisplay, card } = this.props;\n    if (listDisplay) {\n      return (\n        <>\n          <ListGroupItem color=\"dark\" onClick={this.toggleModal}>\n            {card.name}\n          </ListGroupItem>\n          <Modal\n            isOpen={this.state.modalOpen}\n            toggle={this.toggleModal}\n            size=\"md\"\n            backdrop={true}\n          >\n            <ModalBody className=\"p-0\" centered=\"true\">\n              <Plane card={card} />\n            </ModalBody>\n          </Modal>\n        </>\n      );\n    } else {\n      return (\n        <Card inverse>\n          <CardBody>\n            {this.renderImage()}\n            {this.renderText()}\n          </CardBody>\n          <CardFooter>{this.renderActions()}</CardFooter>\n        </Card>\n      );\n    }\n  }\n\n  renderActions() {\n    const { card } = this.props;\n    if (card) {\n      return (\n        <a\n          href={card.related_uris[\"gatherer\"]}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Gatherer\n        </a>\n      );\n    }\n  }\n\n  renderText() {\n    const { card, displayText } = this.props;\n    if (displayText) {\n      if (card) {\n        return (\n          <>\n            <CardTitle>{card.name}</CardTitle>\n            <CardSubtitle>{card.type_line}</CardSubtitle>\n            <CardText>{card.oracle_text}</CardText>\n          </>\n        );\n      } else {\n        return <CardTitle>None</CardTitle>;\n      }\n    }\n  }\n\n  renderImage() {\n    const { hideImage } = this.props;\n    if (!hideImage) {\n      return (\n        <CardImg top width=\"100%\" src={this.imageURI()} className=\"mtg-card\" />\n      );\n    }\n  }\n\n  imageURI() {\n    const { card } = this.props;\n    if (card) {\n      // Use   Scryfall and rotate or use Gatherer\n      // scryfall (rotated) card.image_uris[\"border_crop\"]\n      return gathererImageURL(card);\n    } else {\n      return back;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { getCounterType } from \"../../mtg/card.js\";\nexport class Counter extends Component {\n  state = {\n    counters: {}\n  };\n\n  incrementCounter = () => {\n    const { card } = this.props;\n    const { counters } = this.state;\n    counters[card.id] = this.counterCount() + 1;\n    this.setState({ counters });\n  };\n\n  counterCount = () => {\n    const { card } = this.props;\n    const { counters } = this.state;\n    return counters[card.id] || 0;\n  };\n\n  componentWillUnmount() {\n    this.setState({ counters: {} });\n  }\n\n  render() {\n    const { card } = this.props;\n    const type = getCounterType(card);\n    return (\n      <div>\n        {this.counterCount()}\n        <Button onClick={this.incrementCounter}>Add {type} Counter</Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { PlanechaseHelmet } from \"./Helmet\";\nimport {\n  getCurrentDeck,\n  getOrCreateCurrentDeck,\n  drawCard,\n  undoDraw,\n  revealCards,\n  addCardsToBottom,\n  removeCards,\n  shuffle,\n  addCardsToTop,\n  getHistory\n} from \"../../mtg/deck.js\";\nimport {\n  getCurrentCard,\n  setCurrentCard,\n  hasCustomProperty,\n  setRevealedCards,\n  getRevealedCards\n} from \"../../mtg/card.js\";\nimport { getAllPlanechaseCards } from \"../../util/api.js\";\nimport { Loading } from \"../../components/Loading\";\nimport { Plane } from \"../../components/magic/Plane\";\nimport {\n  Button,\n  ListGroup,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport { Counter } from \"../../components/magic/Counter\";\n\nexport class Planechase extends Component {\n  state = {\n    loading: false,\n    planes: [],\n    deck: null,\n    currentCard: null,\n    counters: 0,\n    revealedCards: [],\n    tripleChaosModalOpen: false,\n    scryModalOpen: false,\n    planeswalkDisabled: false,\n    showHistory: false\n  };\n\n  componentDidMount = async () => {\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes);\n    const currentCard = getCurrentCard(\"planechase\");\n    const revealedCards = getRevealedCards(\"planechase\") || [];\n    this.setState({ planes, loading: false, deck, currentCard, revealedCards });\n  };\n\n  planeswalk = () => {\n    const currentCard = drawCard(\"planechase\");\n    setCurrentCard(\"planechase\", currentCard);\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      const revealedCards = revealCards(\"planechase\", 2, true);\n      removeCards(\"planechase\", revealedCards);\n      setRevealedCards(\"planechase\", revealedCards);\n      this.setState({ revealedCards });\n    }\n\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      const revealedCards = revealCards(\"planechase\", 5, true);\n      removeCards(\"planechase\", revealedCards);\n      setRevealedCards(\"planechase\", revealedCards);\n      this.setState({ revealedCards, planeswalkDisabled: true });\n    }\n\n    const deck = getCurrentDeck(\"planechase\");\n    this.setState({ currentCard, deck, counters: 0 });\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes, true);\n    const currentCard = setCurrentCard(\"planechase\", null);\n    this.setState({ planes, loading: false, deck, currentCard });\n  };\n\n  undo = async () => {\n    const currentCard = undoDraw(\"planechase\");\n    const deck = getCurrentDeck(\"planechase\");\n    this.setState({ deck, currentCard });\n  };\n\n  triggerChaos = () => {\n    const { currentCard } = this.state;\n    console.log(\"Choas Triggered\");\n    if (hasCustomProperty(\"triple-chaos\", currentCard)) {\n      const revealedCards = revealCards(\"planechase\", 3, true);\n      removeCards(\"planechase\", revealedCards);\n      const shuffledCards = shuffle(revealedCards.slice());\n      addCardsToBottom(\"planechase\", shuffledCards);\n      const deck = getCurrentDeck(\"planechase\");\n      setRevealedCards(\"planechase\", revealCards);\n      this.setState({ revealedCards, tripleChaosModalOpen: true, deck });\n    }\n\n    if (hasCustomProperty(\"scry-1\", currentCard)) {\n      const revealedCards = revealCards(\"planechase\", 1, false);\n      removeCards(\"planechase\", revealedCards);\n      setRevealedCards(\"planechase\", revealCards);\n      this.setState({ revealedCards, scryModalOpen: true });\n    }\n  };\n\n  render() {\n    const {\n      loading,\n      planes,\n      deck,\n      currentCard,\n      planeswalkDisabled\n    } = this.state;\n\n    return (\n      <div className=\"planechase\">\n        <PlanechaseHelmet planes={planes} />\n        <div className=\"fixed-top mt-1 ml-1 w-25 text-left\">\n          <Button\n            onClick={this.planeswalk}\n            className=\"mb-2\"\n            color=\"success\"\n            disabled={planeswalkDisabled}\n            block\n          >\n            <i className=\"ms ms-planeswalker ms-2x mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Planeswalk</span>\n          </Button>\n          {this.renderChaos()}\n        </div>\n\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : (\n          <div>{currentCard ? <Plane card={currentCard} /> : <Plane />}</div>\n        )}\n        <hr />\n        {this.renderTwoPlanes()}\n        {this.renderFivePlanes()}\n        {this.renderCounter(currentCard)}\n        {this.renderTripleChaosModal()}\n        {this.renderScryModal()}\n        <hr />\n        <Button onClick={this.reset} color=\"danger\" block>\n          Reset\n        </Button>\n        <Button onClick={this.undo} color=\"warning\" block>\n          Undo\n        </Button>\n        <p>There are {deck ? deck.length : 0} cards remaining.</p>\n        {this.renderHistory()}\n      </div>\n    );\n  }\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  };\n\n  renderHistory = () => {\n    const { showHistory } = this.state;\n    const history = getHistory(\"planechase\");\n    return (\n      <>\n        <Button onClick={this.toggleHistory} block>\n          {showHistory ? \"Hide\" : \"Show\"} History\n        </Button>\n        <ListGroup>\n          {showHistory &&\n            history &&\n            history.map(p => <Plane card={p} key={p.id} listDisplay={true} />)}\n        </ListGroup>\n      </>\n    );\n  };\n\n  renderChaos() {\n    const { currentCard } = this.state;\n    const hasChaos = hasCustomProperty(\"chaos-trigger\", currentCard);\n    if (hasChaos) {\n      return (\n        <Button onClick={this.triggerChaos} color=\"info\" block>\n          <i className=\"ms ms-chaos ms-2x mx-2\" />\n          <span className=\"mx-2 d-none d-md-inline\">Trigger Chaos</span>\n        </Button>\n      );\n    }\n  }\n\n  renderCounter(card) {\n    // const { currentCard, counters } = this.state;\n    const hasCounters = hasCustomProperty(\"counter\", card);\n    if (hasCounters) {\n      // const counterType = getCounterType(currentCard);\n      return <Counter card={card} />;\n    }\n  }\n\n  renderTwoPlanes() {\n    const { currentCard, revealedCards } = this.state;\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      console.log(revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      // TODO Countes, chaos etc\n      return (\n        <div>\n          <p>Your are on both planes</p>\n          {revealedPlanes.map(c => (\n            <p>\n              {c.name}\n              {this.renderCounter(c)}\n            </p>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  selectPlane = card => {\n    const { revealedCards } = this.state;\n    removeCards(\"planechase\", revealedCards);\n    addCardsToTop(\"planechase\", [card]);\n    const restCards = revealedCards.filter(c => c.id !== card.id);\n    const shuffledCards = shuffle(restCards.slice());\n    addCardsToBottom(\"planechase\", shuffledCards);\n    setRevealedCards(\"planechase\", []);\n    this.setState({ planeswalkDisabled: false, revealedCards: [] });\n    this.planeswalk();\n  };\n\n  renderFivePlanes() {\n    const { currentCard, revealedCards } = this.state;\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      console.log(revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      console.log(revealedPlanes);\n      // TODO Countes, chaos etc\n      return (\n        <div>\n          <h1>Pick A Plane to Planeswalk To</h1>\n          {revealedPlanes.map(c => (\n            <div>\n              <Plane card={c} />\n              <Button block onClick={() => this.selectPlane(c)}>\n                <i className=\"ms ms-planeswalker mx-2\" />\n                <span className=\"mx-2\">{c.name}</span>\n              </Button>\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  _tripleChaosModalClose = () => {\n    setRevealedCards(\"planechase\", []);\n    this.setState({\n      tripleChaosModalOpen: false,\n      revealedCards: []\n    });\n  };\n\n  _tripleChaosModalToggle = () => {\n    if (this.state.tripleChaosModalOpen) {\n      this._tripleChaosModalClose();\n    }\n  };\n\n  renderTripleChaosModal() {\n    const { revealedCards, tripleChaosModalOpen } = this.state;\n    if (revealedCards && tripleChaosModalOpen) {\n      // TODO filter only planes in revealed cards\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      return (\n        <Modal\n          isOpen={!!tripleChaosModalOpen}\n          toggle={this._tripleChaosModalToggle}\n          onClosed={this._tripleChaosModalClose}\n          size=\"lg\"\n          backdrop={true}\n        >\n          <ModalHeader>{`Triple Chaos`}</ModalHeader>\n          <ModalBody>\n            <h1 className=\"text-center\">\n              <i className=\"ms ms-chaos sm-margin\" />\n              <i className=\"ms ms-chaos sm-margin\" />\n              <i className=\"ms ms-chaos sm-margin\" />\n              Triple Chaos - You Pick Order\n              <i className=\"ms ms-chaos sm-margin\" />\n              <i className=\"ms ms-chaos sm-margin\" />\n              <i className=\"ms ms-chaos sm-margin\" />\n            </h1>\n            {revealedPlanes.map(c => (\n              <Plane card={c} />\n            ))}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              outline\n              block\n              aria-label=\"Close\"\n              onClick={this._tripleChaosModalClose}\n            >\n              Done\n            </Button>\n          </ModalFooter>\n        </Modal>\n      );\n    }\n  }\n\n  _scryModalClose = () => {\n    setRevealedCards(\"planechase\", []);\n    this.setState({\n      scryModalOpen: false,\n      revealedCards: []\n    });\n  };\n\n  _scryTop = () => {\n    const { revealedCards } = this.state;\n    addCardsToTop(\"planechase\", revealedCards);\n    console.log(\"Scry Top\", revealedCards);\n    const deck = getCurrentDeck(\"planechase\");\n    setRevealedCards(\"planechase\", []);\n    this.setState({ revealedCards: [], scryModalOpen: false, deck });\n  };\n\n  _scryBottom = () => {\n    const { revealedCards } = this.state;\n    addCardsToBottom(\"planechase\", revealedCards);\n    console.log(\"Scry Bottom\", revealedCards);\n    const deck = getCurrentDeck(\"planechase\");\n    setRevealedCards(\"planechase\", []);\n    this.setState({ revealedCards: [], scryModalOpen: false, deck });\n  };\n\n  renderScryModal = () => {\n    const { revealedCards, scryModalOpen } = this.state;\n    if (revealedCards && scryModalOpen) {\n      return (\n        <Modal\n          isOpen={!!scryModalOpen}\n          onClosed={this._tripleChaosModalClose}\n          size=\"lg\"\n        >\n          <ModalHeader>\n            <i className=\"ms ms-chaos sm-margin\" />\n            Scry Card\n            <i className=\"ms ms-chaos sm-margin\" />\n          </ModalHeader>\n          <ModalBody>\n            <Button color=\"secondary\" block onClick={this._scryTop}>\n              Top\n            </Button>\n            {revealedCards.map(c => (\n              <Plane card={c} />\n            ))}\n            <Button color=\"secondary\" block onClick={this._scryBottom}>\n              Bottom\n            </Button>\n          </ModalBody>\n        </Modal>\n      );\n    }\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport const ArchenemyHelmet = ({ archenemy }) => {\n  return (\n    <Helmet name=\"Archenemy\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/archenemy-manifest.json\"}\n      />\n    </Helmet>\n  );\n};\n","export const getDeckList = () => {\n  return DECKS.map(s => s.name);\n};\n\nexport const getCardList = deckname => {\n  const deck = DECKS.find(s => s.name === deckname);\n  return deck.cards;\n};\nconst DECKS = [\n  {\n    name: \"Assemble the Doomsday Machine\",\n    cards: [\n      [\"All in Good Time\", 1],\n      [\"Behold the Power of Destruction\", 1],\n      [\"Embrace My Diabolical Vision\", 1],\n      [\"Feed the Machine\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"I Know All, I See All\", 2],\n      [\"Ignite the Cloneforge!\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"The Iron Guardian Stirs\", 2],\n      [\"My Genius Knows No Bounds\", 1],\n      [\"Nothing Can Stop Me Now\", 1],\n      [\"The Pieces Are Coming Together\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Scorch the World with Dragonfire\",\n    cards: [\n      [\"All Shall Smolder in My Wake\", 2],\n      [\"Approach My Molten Realm\", 1],\n      [\"The Fate of the Flammable\", 1],\n      [\"I Bask in Your Silent Awe\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"Know Naught but Fire\", 1],\n      [\"Look Skyward and Despair\", 2],\n      [\"My Crushing Masterstroke\", 1],\n      [\"My Wish Is Your Command\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Tooth, Claw, and Tail\", 1],\n      [\"Which of You Burns Brightest?\", 2],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Trample Civilization Underfoot\",\n    cards: [\n      [\"Every Last Vestige Shall Rot\", 2],\n      [\"Evil Comes to Fruition\", 1],\n      [\"I Call on the Ancient Magics\", 1],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Into the Earthen Maw\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"May Civilization Collapse\", 1],\n      [\"Nature Demands an Offering\", 2],\n      [\"Nature Shields Its Own\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Roots of All Evil\", 2],\n      [\"The Very Soil Shall Shake\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1],\n      [\"Your Will Is Not Your Own\", 2]\n    ]\n  },\n  {\n    name: \"Bring About the Undead Apocalypse\",\n    cards: [\n      [\"Choose Your Champion\", 2],\n      [\"Dance, Pathetic Marionette\", 1],\n      [\"The Dead Shall Serve\", 2],\n      [\"Every Hope Shall Vanish\", 2],\n      [\"I Delight in Your Convulsions\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"Mortal Flesh Is Weak\", 1],\n      [\"My Undead Horde Awakens\", 1],\n      [\"Only Blood Ends Your Nightmares\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Rotted Ones, Lay Siege\", 2],\n      [\"Surrender Your Thoughts\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Archenemy Nicol Bolas\",\n    cards: [\n      [\"Because I Have Willed It\", 1],\n      [\"Behold My Grandeur\", 1],\n      [\"Bow to My Command\", 1],\n      [\"Choose Your Demise\", 1],\n      [\"Delight in the Hunt\", 1],\n      [\"Every Dream a Nightmare\", 1],\n      [\"For Each of You, a Gift\", 1],\n      [\"Know Evil\", 1],\n      [\"Make Yourself Useful\", 1],\n      [\"The Mighty Will Fall\", 1],\n      [\"My Forces Are Innumerable\", 1],\n      [\"My Laughter Echoes\", 1],\n      [\"No One Will Hear Your Cries\", 1],\n      [\"Pay Tribute to Me\", 1],\n      [\"Power Without Equal\", 1],\n      [\"A Reckoning Approaches\", 1],\n      [\"There Is No Refuge\", 1],\n      [\"This World Belongs to Me\", 1],\n      [\"What's Yours Is Now Mine\", 1],\n      [\"When Will You Learn?\", 1]\n    ]\n  }\n];\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  ListGroupItem,\n  ListGroup\n} from \"reactstrap\";\nimport { ArchenemyHelmet } from \"./Helmet\";\nimport { getDeckList, getCardList } from \"../../mtg/prebuilt-decks\";\n\nexport class Archenemy extends Component {\n  state = {};\n\n  componentDidMount = () => {};\n\n  render() {\n    return (\n      <div className=\"archenemy\">\n        <ArchenemyHelmet />\n        {this.renderPrebuilts()}\n      </div>\n    );\n  }\n\n  renderPrebuilts() {\n    const prebuilts = getDeckList();\n    const prebuiltItems = prebuilts.map((prebuilt, i) => {\n      const cardList = getCardList(prebuilt);\n      const cardListIems = cardList.map((card, i) => (\n        <ListGroupItem key={i}>{card}</ListGroupItem>\n      ));\n      return (\n        <Card key={i}>\n          <CardBody>\n            <CardTitle>{prebuilt}</CardTitle>\n            <ListGroup className=\"text-dark\">{cardListIems}</ListGroup>\n          </CardBody>\n        </Card>\n      );\n    });\n    return <div>{prebuiltItems}</div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  NavLink as RRNavLink\n} from \"react-router-dom\";\nimport {\n  Alert,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport store from \"store\";\n\nimport \"./App.scss\";\n\nimport { Home } from \"./pages/home\";\nimport { Planechase } from \"./pages/planechase\";\nimport { Archenemy } from \"./pages/archenemy\";\n\nclass App extends Component {\n  state = {\n    isOpen: false,\n    disclaimerDismissed: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  componentDidMount = () => {\n    const dismissed = store.get(\"disclaimer-dismissed\");\n    this.setState({ disclaimerDismissed: !!dismissed });\n  };\n\n  dismissDiscalimer = () => {\n    store.set(\"disclaimer-dismissed\", true);\n    this.setState({ disclaimerDismissed: true });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Helmet titleTemplate=\"%s - Jibbermaster\" />\n        <Navbar color=\"dark\" dark expand=\"md\" className=\"text-right p-1\">\n          <NavbarBrand />\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink tag={RRNavLink} exact to=\"/\" activeClassName=\"active\">\n                  Home\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  tag={RRNavLink}\n                  exact\n                  to=\"/planechase\"\n                  activeClassName=\"active\"\n                >\n                  Planechase\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  tag={RRNavLink}\n                  exact\n                  to=\"/archenemy\"\n                  activeClassName=\"active\"\n                >\n                  Archenemy\n                </NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Options\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>Option 1</DropdownItem>\n                  <DropdownItem>Option 2</DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem onClick={() => store.clearAll()}>\n                    Clear Everything\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n        <div className=\"app text-light bg-dark\">\n          <Switch>\n            <Route path=\"/\" exact render={props => <Home {...props} />} />\n            <Route\n              path=\"/archenemy\"\n              exact\n              render={props => <Archenemy {...props} />}\n            />\n            <Route\n              path=\"/planechase\"\n              exact\n              render={props => <Planechase {...props} />}\n            />\n          </Switch>\n          <Alert\n            color=\"warning\"\n            className=\"fixed-bottom mb-0 py-1\"\n            isOpen={!this.state.disclaimerDismissed}\n            toggle={this.dismissDiscalimer}\n          >\n            <h6>Disclaimer</h6>\n            <small className=\"text-muted m-0\">\n              This site is created for personal use. Magic: The Gathering, the\n              mana symbols, the tap symbol and all other related images are\n              owned by Wizards of the Coast. jibbermaster.com is unaffiliated\n              with Wizards of the Coast.\n            </small>\n          </Alert>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/planechase-back.c7f50007.jpg\";"],"sourceRoot":""}