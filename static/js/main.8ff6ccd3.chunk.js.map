{"version":3,"sources":["pages/home/index.js","util/api.js","components/Loading.js","pages/planechase/index.js","pages/archenemy/index.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Home","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Helmet","title","Component","internet","axios","create","Loading","props","_this","call","state","dotsCount","start","_this2","_this$props$interval","interval","dotsInterval","setInterval","setState","clearInterval","count","max","char","length","undefined","numDots","dots","i","_this$props","_this$props$label","label","_this$props$numDots","getDotString","classes","concat","planesURL","Planechase","_getPrototypeOf2","_len","args","Array","_key","loading","planes","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetchPlanes","stop","_callee2","_planes","_context2","store","get","console","log","sent","set","t0","error","_this$state","rel","href","sizes","Loading_Loading","Archenemy","App","isOpen","toggle","react_router_dom","titleTemplate","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","tag","RRNavLink","exact","to","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8ff6ccd3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Helmet} from \"react-helmet\";\nexport class Home extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Helmet\n          title=\"Magic\">\n        </Helmet>\n        Magic\n      </div>\n    );\n  };\n}\n","import axios from \"axios\";\n\nexport const internet = axios.create();\n","import React, { Component } from \"react\";\n\nexport class Loading extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dotsCount: props.start || 0\n    };\n  }\n\n  componentDidMount() {\n    const { interval = 500 } = this.props;\n\n    this.dotsInterval = setInterval(() => {\n      this.setState({ dotsCount: this.state.dotsCount + 1 });\n    }, interval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.dotsInterval);\n  }\n\n  getDotString(count, max, char = \".\") {\n    let numDots = count % (max + 1);\n    let dots = \"\";\n\n    for (let i = 0; i < numDots; i++) {\n      dots += char;\n    }\n\n    return dots;\n  }\n\n  render() {\n    const { label = \"Loading\", className, numDots = 3 } = this.props;\n    const { dotsCount } = this.state;\n    let dots = this.getDotString(dotsCount, numDots, \".\");\n    let classes = `loading-dots ${className}`;\n\n    return (\n      <span className={classes}>\n        {label}\n        {dots}\n      </span>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport store from 'store';\nimport {Helmet} from \"react-helmet\";\nimport {internet } from '../../util/api.js'\nimport { Loading } from '../../components/Loading';\nconst planesURL = \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Aplane+or+t%3Aphenomenon&unique=cards\";\n\nexport class Planechase extends Component {\n  state = {\n    loading: false,\n    planes: null\n  };\n\n  componentDidMount = async () => {\n    await this.fetchPlanes();\n  };\n\n  fetchPlanes = async() => {\n    try {\n      let planes = store.get('planes');\n      if (!planes) {\n        console.log(\"Loading from Axios\");\n        const planes = await internet.get(planesURL);\n        store.set('planes', planes);\n      } else{\n        console.log(\"Loaded from store\");\n      }\n      this.setState(planes);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    const { loading, planes } = this.state;\n    return (\n      <div className=\"App\">\n        <Helmet\n          title=\"Planechase\">\n          <link rel=\"shortcut icon\" href={process.env.PUBLIC_URL + \"mtg/icon/planechase.ico\"}></link>\n          <link rel=\"apple-touch-icon\" href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}></link>\n          <link rel=\"apple-touch-icon\" sizes=\"64x64\" href={process.env.PUBLIC_URL + \"mtg/icon/planechase_64.png\"}></link>\n          <link rel=\"apple-touch-icon\" sizes=\"128x128\" href={process.env.PUBLIC_URL + \"mtg/icon/planechase_128.png\"}></link>\n          <link rel=\"apple-touch-icon\" sizes=\"256x256\" href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}></link>\n        </Helmet>\n      <header className=\"App-header\">\n\n      {loading ? (\n        <Loading className=\"text-muted\" />\n      ) : (\n        <div>\n        {planes}\n        </div>\n      )}\n      <p>Planechase</p>\n      </header>\n      </div>\n    );\n  };\n}\n","import React, { Component } from 'react';\nimport {Helmet} from \"react-helmet\";\nexport class Archenemy extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n      <Helmet\n        title=\"Archenemy\">\n        <link rel=\"shortcut icon\" href={process.env.PUBLIC_URL + \"mtg/icon/archenemy.ico\"}></link>\n        <link rel=\"apple-touch-icon\" href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}></link>\n        <link rel=\"apple-touch-icon\" sizes=\"64x64\" href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_64.png\"}></link>\n        <link rel=\"apple-touch-icon\" sizes=\"128x128\" href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_128.png\"}></link>\n        <link rel=\"apple-touch-icon\" sizes=\"256x256\" href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}></link>\n      </Helmet>\n        Archenemy\n      </div>\n    );\n  };\n}\n","import React, { Component } from 'react';\nimport {Helmet} from \"react-helmet\";\nimport logo from './logo.svg';\nimport './App.scss';\n// import {Button} from 'reactstrap';\nimport { Link } from \"react-router-dom\";\n// import { AppRouter } from \"./Router\";\n\nimport { BrowserRouter, Route, Switch, NavLink as RRNavLink } from \"react-router-dom\";\n\nimport {Home} from \"./pages/home\";\nimport {Planechase} from \"./pages/planechase\";\nimport {Archenemy} from \"./pages/archenemy\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\n\nconst schemeURL = \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Ascheme&unique=cards\";\nclass App extends Component {\n  state = {\n    isOpen: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Helmet\n          titleTemplate=\"%s - Jibbermaster\">\n        </Helmet>\n        <Navbar color=\"dark\" dark expand=\"md\">\n         <NavbarBrand href=\"/\">reactstrap</NavbarBrand>\n         <NavbarToggler onClick={this.toggle} />\n         <Collapse isOpen={this.state.isOpen} navbar>\n           <Nav className=\"ml-auto\" navbar>\n             <NavItem>\n               <NavLink tag={RRNavLink} exact to=\"/\" activeClassName=\"active\">Home</NavLink>\n             </NavItem>\n             <NavItem>\n               <NavLink tag={RRNavLink} exact to=\"/planechase\" activeClassName=\"active\">Planechase</NavLink>\n             </NavItem>\n             <NavItem>\n               <NavLink tag={RRNavLink} exact to=\"/archenemy\" activeClassName=\"active\">Archenemy</NavLink>\n             </NavItem>\n             <UncontrolledDropdown nav inNavbar>\n               <DropdownToggle nav caret>\n                 Options\n               </DropdownToggle>\n               <DropdownMenu right>\n                 <DropdownItem>\n                   Option 1\n                 </DropdownItem>\n                 <DropdownItem>\n                   Option 2\n                 </DropdownItem>\n                 <DropdownItem divider />\n                 <DropdownItem>\n                   Reset\n                 </DropdownItem>\n               </DropdownMenu>\n             </UncontrolledDropdown>\n           </Nav>\n         </Collapse>\n       </Navbar>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/planechase/\" exact component={Planechase} />\n            <Route path=\"/archenemy/\" exact component={Archenemy} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}