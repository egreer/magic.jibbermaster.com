{"version":3,"sources":["util/settings.js","pages/home/index.js","mtg/card.js","pages/planechase/Helmet.js","mtg/deck.js","util/api.js","components/Loading.js","components/magic/Counter.js","components/magic/Plane.js","pages/planechase/index.js","pages/archenemy/Helmet.js","mtg/prebuilt-decks.js","components/magic/Scheme.js","pages/archenemy/index.js","pages/syb/Helmet.js","pages/syb/index.js","App.js","serviceWorker.js","index.js","images/planechase-back.jpg","images/archenemy-back.jpg"],"names":["store","addPlugin","defaultPlugin","defaults","setting-disclaimerDismissed","setting-displayText","setting-displayImages","setting-devTools","setting-displayGatherer","getSetting","setting","get","concat","setSetting","value","set","toggleSetting","Home","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","componentDidMount","inherits","createClass","key","react_default","a","createElement","className","index_module","title","rel","href","Button","tag","NavLink","exact","to","block","color","size","Component","getCurrentCard","prefix","setCurrentCard","card","getRevealedCards","setRevealedCards","cards","getAdditionalCards","setAdditionalCards","getScryCards","setScryCards","hasCustomProperty","property","customProperties","find","p","name","gathererImageURL","multiverse_ids","PlanechaseHelmet","_ref","planes","sizes","map","as","id","moveCard","from","deck","getCurrentDeck","splice","storeCurrentDeck","getOrCreateCurrentDeck","reset","undefined","console","log","clonedCard","JSON","parse","stringify","forEach","c","deck_card_id","uuidv4","shuffle","drawCard","shift","updateHistory","history","push","getHistory","undoDraw","pop","addCardsToTop","topCards","addCardsToBottom","bottomCards","findCardByDeckCardId","deckCardId","findAndPutOnTop","tmpCard","removeCards","findAndPutOnBottom","cardsToRemove","filteredDeck","filter","r","revealCards","numReveal","onlyPlanes","revealedCards","count","Math","min","tmpCount","i","type_line","search","array","temporaryValue","randomIndex","currentIndex","floor","random","internet","axios","create","getAllPlanechaseCards","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","cached","sent","cache","data","addAdditionalProperties","abrupt","t0","error","stop","getAllArchenemyCards","_ref2","_callee2","schemes","_context2","properties","Aretopolis","type","Chaotic Aether","Interplanar Tunnel","Kilnspire District","Mount Keralia","Naar Isle","Spatial Merging","Stairs to Infinity","Pools of Becoming","Your Inescapable Doom","oracle_html","__html","oracle_text","replace","time","cacheDate","moment","diff","unix","Loading","props","state","dotsCount","start","_this2","_this$props$interval","interval","dotsInterval","setInterval","setState","clearInterval","max","char","numDots","dots","_this$props","_this$props$label","label","_this$props$numDots","getDotString","classes","Counter","counter","incrementCounter","getCounterType","onClick","Plane","modalOpen","toggleModal","listDisplay","children","Fragment","ListGroupItem","Modal","isOpen","toggle","backdrop","contentClassName","ModalBody","centered","Card","inverse","renderImage","renderCounter","renderChildren","renderBody","renderActions","text","renderText","CardBody","_this$props2","displayImages","hasCounters","CardImgOverlay","CardTitle","Counter_Counter","CardFooter","related_uris","target","CardSubtitle","CardText","dangerouslySetInnerHTML","CardImg","top","width","src","imageURI","back","Planechase","loading","currentCard","additionalCards","scryCards","tripleChaosModalOpen","scryModalOpen","planeswalkDisabled","showHistory","showDeck","showDeckImages","refreshDeck","planeswalk","revealedPlanes","revealedPhenomenon","undo","_callee3","_context3","triggerChaos","newRevealedCards","shuffledCards","slice","newScryCards","renderDevTools","renderDeck","toggleDeck","toggleDeckImages","manipulateDeck","_this$state","Fade","in","ListGroup","Plane_Plane","ButtonToolbar","ButtonGroup","disabled","toggleHistory","renderHistory","reverse","selectPlane","restCards","_tripleChaosModalClose","_tripleChaosModalToggle","_scryModalClose","_scryTop","_scryBottom","renderScryModal","_this$state2","ModalHeader","_this$state3","Helmet_PlanechaseHelmet","Loading_Loading","timeout","renderChaos","renderTwoPlanes","renderFivePlanes","renderTripleChaosModal","_this3","_this$state4","Alert","_this4","_this$state5","_this5","_this$state6","onClosed","ModalFooter","aria-label","ArchenemyHelmet","image_uris","DECKS","Scheme","Archenemy","ongoingSchemes","abandonedOngoing","deckSelection","customDeck","scheme","newCard","abandonScheme","newOngoing","s","Scheme_Scheme","resetCustomDeck","Helmet_ArchenemyHelmet","renderDeckSelect","renderGamePlay","Jumbotron","fluid","Container","renderAbandon","renderOngoingSchemes","selectDeck","renderPrebuilts","renderBuildCustomDeck","newCards","reduce","b","cardListIems","decrementCount","incrementCount","UncontrolledCollapse","toggler","customDeckSize","_this6","prebuiltItems","prebuilt","cardList","deckname","getCardList","SYBHelmet","circleLayout","nodeDimensionsIncludeLabels","gridLayout","rows","SYB","playerCount","targets","tableShape","keys","player","targetIndex","source","players","cy","layout","isSquare","refreshLayout","debounce","run","on","elements","nodes","generateNodes","edges","generateEdges","stylesheet","selector","style","padding","height","background-color","text-valign","text-halign","content","font-size","curve-style","target-arrow-shape","react_cytoscape_default","handleCy","CytoscapeComponent","normalizeElements","panningEnabled","newPlayerCount","regenerateOrder","shape","Helmet_SYBHelmet","renderCyto","App","disclaimerDismissed","displayText","devTools","displayGatherer","dismissDisclaimer","_toggleSetting","tempState","_mtgToggler","DropdownItem","closeNavbar","react_router_dom","titleTemplate","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","RRNavLink","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","divider","clearAll","react_router","path","render","home_Home","archenemy_Archenemy","planechase_Planechase","syb_SYB","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.a688c0d2.chunk.js","sourcesContent":["import store from \"store\";\nimport defaultPlugin from \"store/plugins/defaults\";\n\nstore.addPlugin(defaultPlugin);\n\nconst SETTINGS = {\n  \"setting-disclaimerDismissed\": false,\n  \"setting-displayText\": false,\n  \"setting-displayImages\": true,\n  \"setting-devTools\": false,\n  \"setting-displayGatherer\": false\n};\nstore.defaults(SETTINGS);\n\nexport const getSetting = setting => {\n  return store.get(`setting-${setting}`);\n};\n\nexport const setSetting = (setting, value) => {\n  return store.set(`setting-${setting}`, value);\n};\n\nexport const toggleSetting = setting => {\n  const value = getSetting(setting);\n  return setSetting(setting, !value);\n};\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\n\nexport class Home extends Component {\n  componentDidMount = () => {};\n  render() {\n    return (\n      <div className=\"home\">\n        <Helmet title=\"Magic\">\n          <link\n            rel=\"manifest\"\n            href={process.env.PUBLIC_URL + \"/manifest.json\"}\n          />\n        </Helmet>\n        <div className=\"mt-4\">\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/planechase\"\n            block\n            color=\"info\"\n            size=\"lg\"\n          >\n            <i className=\"ms ms-planeswalker ms-4x mx-2 d-block\" />\n            <span className=\"d-block\">Planechase</span>\n          </Button>\n          <Button\n            tag={NavLink}\n            exact\n            to=\"/archenemy\"\n            block\n            color=\"danger\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-arc ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">Archenemy</span>\n          </Button>\n          <Button tag={NavLink} exact to=\"/syb\" block color=\"success\" size=\"lg\">\n            <i className=\"ss ss-s00 ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">SYB</span>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import store from \"store\";\n\nexport const getCurrentCard = prefix => {\n  return store.get(`${prefix}-currentCard`);\n};\n\nexport const setCurrentCard = (prefix, card) => {\n  return store.set(`${prefix}-currentCard`, card);\n};\n\nexport const getRevealedCards = prefix => {\n  return store.get(`${prefix}-revealedCards`);\n};\n\nexport const setRevealedCards = (prefix, cards) => {\n  return store.set(`${prefix}-revealedCards`, cards);\n};\n\nexport const getAdditionalCards = prefix => {\n  return store.get(`${prefix}-additionalCards`);\n};\n\nexport const setAdditionalCards = (prefix, cards) => {\n  return store.set(`${prefix}-additionalCards`, cards);\n};\n\nexport const getScryCards = prefix => {\n  return store.get(`${prefix}-scryCards`);\n};\n\nexport const setScryCards = (prefix, cards) => {\n  return store.set(`${prefix}-scryCards`, cards);\n};\n\nexport const hasCustomProperty = (property, card) => {\n  return card && card.customProperties.find(p => p.name === property);\n};\n\nexport const getCounterType = card => {\n  const property = card.customProperties.find(p => p.name === \"counter\");\n  return property.type;\n};\n\nexport const gathererImageURL = card => {\n  return `http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=${\n    card.multiverse_ids[0]\n  }&type=card`;\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { gathererImageURL } from \"../../mtg/card.js\";\n\nexport const PlanechaseHelmet = ({ planes }) => {\n  return (\n    <Helmet title=\"Planechase\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/planechase-manifest.json\"}\n      />\n      {planes &&\n        planes.map(p => (\n          <link\n            rel=\"preload\"\n            href={gathererImageURL(p)}\n            as=\"image\"\n            key={p.id}\n          />\n        ))}\n    </Helmet>\n  );\n};\n","import store from \"store\";\nimport uuidv4 from \"uuid/v4\";\n\nexport const moveCard = (prefix, from, to) => {\n  const deck = getCurrentDeck(prefix);\n  deck.splice(to, 0, deck.splice(from, 1)[0]);\n  storeCurrentDeck(prefix, deck);\n};\n\nexport const getOrCreateCurrentDeck = (prefix, cards, reset = false) => {\n  let deck = getCurrentDeck(prefix);\n  if (!deck || reset) {\n    console.log(`Creating New ${prefix} Deck`);\n    // Clone all the cards so that we aren't modifying original objects\n    const clonedCard = JSON.parse(JSON.stringify(cards));\n    // Add Deck Card Id so that each card in the deck has a unique value\n    clonedCard.forEach(c => (c.deck_card_id = uuidv4()));\n    deck = shuffle(clonedCard);\n    store.set(`${prefix}-history`, []);\n    storeCurrentDeck(prefix, deck);\n  }\n  return deck;\n};\n\nexport const getCurrentDeck = prefix => {\n  return store.get(`${prefix}-deck`);\n};\n\nexport const storeCurrentDeck = (prefix, deck) => {\n  return store.set(`${prefix}-deck`, deck);\n};\n\nexport const drawCard = prefix => {\n  const deck = getCurrentDeck(prefix);\n  const card = deck.shift();\n  if (card) {\n    updateHistory(prefix, card);\n  }\n  storeCurrentDeck(prefix, deck);\n  return card;\n};\n\nexport const updateHistory = (prefix, card) => {\n  const history = store.get(`${prefix}-history`);\n  history.push(card);\n  store.set(`${prefix}-history`, history);\n};\n\nexport const getHistory = (prefix, card) => {\n  return store.get(`${prefix}-history`);\n};\n\nexport const undoDraw = prefix => {\n  const history = store.get(`${prefix}-history`);\n  const card = history.pop();\n  if (card) {\n    addCardsToTop(prefix, [card]);\n  }\n  store.set(`${prefix}-history`, history);\n  return history[history.length - 1];\n};\n\nexport const addCardsToTop = (prefix, topCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, topCards.concat(deck));\n};\n\nexport const addCardsToBottom = (prefix, bottomCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, deck.concat(bottomCards));\n};\n\nexport const deckSize = prefix => {\n  return getCurrentDeck(prefix).length;\n};\n\nexport const findCard = (prefix, card) => {\n  return findCardByDeckCardId(prefix, card.deck_card_id);\n};\n\nexport const findCardByDeckCardId = (prefix, deckCardId) => {\n  const deck = getCurrentDeck(prefix);\n  return deck.find(c => c.deck_card_id === deckCardId);\n};\n\nexport const findAndPutOnTop = (prefix, deckCardId) => {\n  const tmpCard = findCardByDeckCardId(prefix, deckCardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToTop(prefix, [tmpCard]);\n  }\n};\n\nexport const findAndPutOnBottom = (prefix, deckCardId) => {\n  const tmpCard = findCardByDeckCardId(prefix, deckCardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToBottom(prefix, [tmpCard]);\n  }\n};\n\nexport const removeCards = (prefix, cardsToRemove) => {\n  const deck = getCurrentDeck(prefix);\n  const filteredDeck = deck.filter(\n    c => !cardsToRemove.find(r => r.deck_card_id === c.deck_card_id)\n  );\n  storeCurrentDeck(prefix, filteredDeck);\n};\n\nexport const revealCards = (prefix, numReveal, onlyPlanes = false) => {\n  const revealedCards = [];\n  const deck = getCurrentDeck(prefix);\n  const count = Math.min(deck.length, numReveal);\n\n  let planes = 0;\n  let tmpCount = count;\n  for (let i = 0; i < tmpCount; i++) {\n    revealedCards.push(deck[i]);\n\n    if (onlyPlanes) {\n      if (deck[i].type_line.search(\"Plane\") >= 0) {\n        planes++;\n      }\n\n      if (i === tmpCount - 1 && planes < count) {\n        tmpCount++;\n      }\n    }\n  }\n\n  return revealedCards;\n};\n\nexport const shuffle = array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\n// \tfunction showHistory(){\n// \t\tforeach( $_SESSION[ $this->prefix . 'history'] as $card){\n// \t\t\techo Card::displayHoverCardName($card, '', 'card');\n// \t\t}\n//\n// \t}\n//\n// \tfunction showRemainingCards(){\n// \t\tforeach(  $_SESSION[ $this->prefix . 'deck'] as $card){\n// \t\t echo Card::displayHoverCardName($card, $classes='');\n// \t\t}\n// \t}\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport store from \"store\";\n// TODO use expire store\nexport const internet = axios.create();\n\nconst PLANES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Aplane+or+t%3Aphenomenon&unique=cards\";\n\nconst SCHEMES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Ascheme&unique=cards\";\n\nexport const getAllPlanechaseCards = async () => {\n  try {\n    let planes = cached(\"planes\");\n    if (!planes) {\n      console.log(\"Loading from Axios\");\n      let response = await internet.get(PLANES_URL);\n      planes = response.data.data;\n      planes = planes.map(p => addAdditionalProperties(p));\n      cache(\"planes\", planes);\n      // TODO use the expire store parameter\n    } else {\n      console.log(\"Loaded from store\");\n    }\n    return planes;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const getAllArchenemyCards = async () => {\n  try {\n    let schemes = cached(\"schemes\");\n    if (!schemes) {\n      console.log(\"Loading from Axios\");\n      let response = await internet.get(SCHEMES_URL);\n      schemes = response.data.data;\n      schemes = schemes.map(p => addAdditionalProperties(p));\n      cache(\"schemes\", schemes);\n      // TODO use the expire store parameter\n    } else {\n      console.log(\"Loaded from store\");\n    }\n    return schemes;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nfunction addAdditionalProperties(card) {\n  const properties = {\n    Aretopolis: [{ name: \"counter\", type: \"Scroll\" }],\n    \"Chaotic Aether\": [{ name: \"all-chaos\" }],\n    \"Interplanar Tunnel\": [{ name: \"top-5\" }],\n    \"Kilnspire District\": [{ name: \"counter\", type: \"Charge\" }],\n    \"Mount Keralia\": [{ name: \"counter\", type: \"Pressure\" }],\n    \"Naar Isle\": [{ name: \"counter\", type: \"Flame\" }],\n    \"Spatial Merging\": [{ name: \"two-planes\" }],\n    \"Stairs to Infinity\": [{ name: \"chaos-trigger\" }, { name: \"scry-1\" }],\n    \"Pools of Becoming\": [{ name: \"chaos-trigger\" }, { name: \"triple-chaos\" }],\n    \"Your Inescapable Doom\": [\n      { name: \"unabandonable\" },\n      { name: \"counter\", type: \"Doom\" }\n    ]\n  };\n\n  if (properties[card.name]) {\n    card.customProperties = properties[card.name];\n  } else {\n    card.customProperties = [];\n  }\n\n  card.oracle_html = createMarkup(card.oracle_text);\n\n  return card;\n}\n\nfunction createMarkup(text) {\n  text = text.replace(/\\r\\n/g, \"<br />\").replace(/[\\r\\n]/g, \"<br />\");\n  text = text.replace(/{CHAOS}/g, '<i class=\"ms ms-chaos\"></i>');\n  text = text.replace(/CHAOS/g, '<i class=\"ms ms-chaos\"></i>');\n  text = text.replace(/{W}/g, '<i class=\"ms ms-w ms-cost\"></i>');\n  text = text.replace(/{U}/g, '<i class=\"ms ms-u ms-cost\"></i>');\n  text = text.replace(/{B}/g, '<i class=\"ms ms-b ms-cost\"></i>');\n  text = text.replace(/{R}/g, '<i class=\"ms ms-r ms-cost\"></i>');\n  text = text.replace(/{G}/g, '<i class=\"ms ms-g ms-cost\"></i>');\n  text = text.replace(/\\{1\\}/g, '<i class=\"ms ms-1 ms-cost\"></i>');\n  text = text.replace(/\\{2\\}/g, '<i class=\"ms ms-2 ms-cost\"></i>');\n  text = text.replace(/\\{3\\}/g, '<i class=\"ms ms-3 ms-cost\"></i>');\n  text = text.replace(/\\{T\\}/g, '<i class=\"ms ms-tap\"></i>');\n  text = text.replace(/{X}/g, '<i class=\"ms ms-x ms-cost\"></i>');\n  text = text.replace(/X/g, '<i class=\"ms ms-x\"></i>');\n  text = text.replace(/\\((.*)\\)/g, \"<small><em>($1)</em></small>\");\n  return { __html: text };\n}\n\nfunction cached(prefix) {\n  let data = store.get(prefix);\n  let cacheDate = store.get(`${prefix}-fetched`);\n  if (data && !old(cacheDate)) {\n    return data;\n  }\n  return null;\n}\n\nfunction cache(prefix, data) {\n  store.set(prefix, data);\n  store.set(`${prefix}-fetched`, moment().unix());\n}\n\nfunction old(time) {\n  return time && moment().diff(moment.unix(time), \"days\") > 5;\n}\n","import React, { Component } from \"react\";\n\nexport class Loading extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dotsCount: props.start || 0\n    };\n  }\n\n  componentDidMount() {\n    const { interval = 500 } = this.props;\n\n    this.dotsInterval = setInterval(() => {\n      this.setState({ dotsCount: this.state.dotsCount + 1 });\n    }, interval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.dotsInterval);\n  }\n\n  getDotString(count, max, char = \".\") {\n    let numDots = count % (max + 1);\n    let dots = \"\";\n\n    for (let i = 0; i < numDots; i++) {\n      dots += char;\n    }\n\n    return dots;\n  }\n\n  render() {\n    const { label = \"Loading\", className, numDots = 3 } = this.props;\n    const { dotsCount } = this.state;\n    let dots = this.getDotString(dotsCount, numDots, \".\");\n    let classes = `loading-dots ${className}`;\n\n    return (\n      <span className={classes}>\n        {label}\n        {dots}\n      </span>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { getCounterType } from \"../../mtg/card.js\";\nexport class Counter extends Component {\n  state = {\n    counter: 0\n  };\n\n  incrementCounter = () => {\n    const { counter } = this.state;\n    this.setState({ counter: counter + 1 });\n  };\n\n  render() {\n    const { card } = this.props;\n    const { counter } = this.state;\n    const type = getCounterType(card);\n    return (\n      <div>\n        <h1 className=\"text-shadow noselect\">{counter}</h1>\n        <Button\n          onClick={this.incrementCounter}\n          color=\"dark\"\n          size=\"lg\"\n          className=\"btn-translucent\"\n        >\n          <h3 className=\"mb-0\">Add {type} Counter</h3>\n        </Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardImgOverlay,\n  CardTitle,\n  CardBody,\n  CardSubtitle,\n  CardText,\n  CardFooter,\n  ListGroupItem,\n  Modal,\n  ModalBody\n} from \"reactstrap\";\nimport { gathererImageURL } from \"../../mtg/card\";\nimport back from \"../../images/planechase-back.jpg\";\nimport { Counter } from \"./Counter\";\nimport \"./planes.scss\";\n\nimport { hasCustomProperty } from \"../../mtg/card.js\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Plane extends Component {\n  state = {\n    modalOpen: false\n  };\n\n  toggleModal = () => {\n    console.log(\"Toggle Modal\");\n    this.setState({ modalOpen: !this.state.modalOpen });\n  };\n\n  render() {\n    const { listDisplay, card, children } = this.props;\n    if (listDisplay) {\n      return (\n        <>\n          <ListGroupItem color=\"dark\" onClick={this.toggleModal}>\n            <div>{card.name}</div>\n          </ListGroupItem>\n          <Modal\n            isOpen={this.state.modalOpen}\n            toggle={this.toggleModal}\n            size=\"md\"\n            backdrop={true}\n            contentClassName=\"bg-secondary\"\n          >\n            <ModalBody className=\"p-0\" centered=\"true\">\n              <Plane card={card} />\n              {children}\n            </ModalBody>\n          </Modal>\n        </>\n      );\n    } else {\n      return (\n        <Card inverse className=\"mtg-plane-card\">\n          {this.renderImage()}\n          {this.renderCounter()}\n          {this.renderChildren()}\n          {this.renderBody()}\n          {this.renderActions()}\n        </Card>\n      );\n    }\n  }\n\n  renderBody() {\n    const text = this.renderText();\n    const hasBody = text;\n\n    return hasBody && <CardBody>{text}</CardBody>;\n  }\n\n  renderCounter() {\n    const { card, renderActions } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    const hasCounters = hasCustomProperty(\"counter\", card);\n    if (renderActions && hasCounters) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center plane-overlay counter-overlay\">\n            <CardTitle className=\"text-center\">\n              <Counter card={card} />\n            </CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return (\n          <CardBody className=\"text-center pb-0\">\n            <Counter card={card} />\n          </CardBody>\n        );\n      }\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    if (children) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center plane-overlay child-overlay\">\n            <CardTitle className=\"text-center\">{children}</CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return <CardBody className=\"text-center pb-0\">{children}</CardBody>;\n      }\n    }\n  }\n\n  renderActions() {\n    const { card } = this.props;\n    const displayGatherer = getSetting(\"displayGatherer\");\n    if (displayGatherer && card) {\n      return (\n        <CardFooter>\n          <a\n            href={card.related_uris[\"gatherer\"]}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatherer\n          </a>\n        </CardFooter>\n      );\n    }\n  }\n\n  renderText() {\n    const { card } = this.props;\n    const displayText = getSetting(\"displayText\");\n    if (displayText) {\n      if (card) {\n        return (\n          <>\n            <CardTitle>\n              <h5>{card.name}</h5>\n            </CardTitle>\n            <CardSubtitle>{card.type_line}</CardSubtitle>\n            <CardText dangerouslySetInnerHTML={card.oracle_html} />\n          </>\n        );\n      } else {\n        return <CardTitle>None</CardTitle>;\n      }\n    }\n  }\n\n  renderImage() {\n    const displayImages = getSetting(\"displayImages\");\n    if (displayImages) {\n      return (\n        <CardImg\n          top\n          width=\"100%\"\n          src={this.imageURI()}\n          className=\"mtg-card mtg-card-plane\"\n        />\n      );\n    }\n  }\n\n  imageURI() {\n    const { card } = this.props;\n    if (card) {\n      // Use   Scryfall and rotate or use Gatherer\n      // scryfall (rotated) card.image_uris[\"border_crop\"]\n      return gathererImageURL(card);\n    } else {\n      return back;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Alert,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Fade,\n  ListGroup,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  ListGroupItem\n} from \"reactstrap\";\nimport { PlanechaseHelmet } from \"./Helmet\";\nimport {\n  getCurrentDeck,\n  getOrCreateCurrentDeck,\n  drawCard,\n  undoDraw,\n  revealCards,\n  addCardsToBottom,\n  removeCards,\n  shuffle,\n  addCardsToTop,\n  getHistory,\n  updateHistory,\n  findAndPutOnBottom,\n  findAndPutOnTop,\n  moveCard\n} from \"../../mtg/deck.js\";\nimport {\n  getCurrentCard,\n  setCurrentCard,\n  hasCustomProperty,\n  setRevealedCards,\n  getRevealedCards,\n  setAdditionalCards,\n  getAdditionalCards,\n  setScryCards,\n  getScryCards\n} from \"../../mtg/card.js\";\nimport { getAllPlanechaseCards } from \"../../util/api.js\";\nimport { Loading } from \"../../components/Loading\";\nimport { Plane } from \"../../components/magic/Plane\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Planechase extends Component {\n  state = {\n    loading: false,\n    planes: [],\n    deck: null,\n    currentCard: null,\n    revealedCards: [],\n    additionalCards: [],\n    scryCards: [],\n    tripleChaosModalOpen: false,\n    scryModalOpen: false,\n    planeswalkDisabled: false,\n    showHistory: false,\n    showDeck: false,\n    showDeckImages: false\n  };\n\n  componentDidMount = async () => {\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes);\n    const currentCard = getCurrentCard(\"planechase\");\n    const revealedCards = getRevealedCards(\"planechase\") || [];\n    const scryCards = getScryCards(\"planechase\") || [];\n    const additionalCards = getAdditionalCards(\"planechase\");\n    const planeswalkDisabled = !!hasCustomProperty(\"top-5\", currentCard);\n    const scryModalOpen =\n      scryCards.length > 0 && !!hasCustomProperty(\"scry-1\", currentCard);\n    this.setState({\n      planes,\n      loading: false,\n      deck,\n      currentCard,\n      revealedCards,\n      additionalCards,\n      scryCards,\n      planeswalkDisabled,\n      scryModalOpen\n    });\n  };\n\n  refreshDeck = () => {\n    const deck = getCurrentDeck(\"planechase\");\n    this.setState({ deck });\n  };\n\n  planeswalk = () => {\n    const currentCard = drawCard(\"planechase\");\n    setCurrentCard(\"planechase\", currentCard);\n    let revealedCards = [];\n    let additionalCards = [];\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      revealedCards = revealCards(\"planechase\", 2, true);\n      removeCards(\"planechase\", revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      const revealedPhenomenon = revealedCards.filter(\n        c => c.type_line.search(\"Phenomenon\") >= 0\n      );\n      revealedPlanes.forEach(c => updateHistory(\"planechase\", c));\n      addCardsToBottom(\"planechase\", revealedPhenomenon);\n      revealedCards = [];\n      additionalCards = revealedPlanes;\n    }\n\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      revealedCards = revealCards(\"planechase\", 5, true);\n      removeCards(\"planechase\", revealedCards);\n      this.setState({ planeswalkDisabled: true });\n    }\n\n    setRevealedCards(\"planechase\", revealedCards);\n    setAdditionalCards(\"planechase\", additionalCards);\n    this.refreshDeck();\n    this.setState({ currentCard, revealedCards, additionalCards });\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes, true);\n    const currentCard = setCurrentCard(\"planechase\", null);\n    const revealedCards = setRevealedCards(\"planechase\", []);\n    const scryCards = setScryCards(\"planechase\", []);\n    const additionalCards = setAdditionalCards(\"planechase\", []);\n    this.setState({\n      planes,\n      loading: false,\n      deck,\n      currentCard,\n      revealedCards,\n      scryCards,\n      additionalCards,\n      planeswalkDisabled: false,\n      scryModalOpen: false\n    });\n  };\n\n  undo = async () => {\n    const currentCard = undoDraw(\"planechase\");\n    this.refreshDeck();\n    this.setState({ currentCard });\n  };\n\n  triggerChaos = card => {\n    const { scryCards } = this.state;\n    console.log(\"Chaos Triggered\");\n    if (hasCustomProperty(\"triple-chaos\", card)) {\n      const newRevealedCards = revealCards(\"planechase\", 3, true);\n      removeCards(\"planechase\", newRevealedCards);\n      const shuffledCards = shuffle(newRevealedCards.slice());\n      addCardsToBottom(\"planechase\", shuffledCards);\n      this.refreshDeck();\n      setRevealedCards(\"planechase\", newRevealedCards);\n      this.setState({\n        revealedCards: newRevealedCards,\n        tripleChaosModalOpen: true\n      });\n    }\n\n    if (hasCustomProperty(\"scry-1\", card)) {\n      if (!scryCards || scryCards.length === 0) {\n        const newScryCards = revealCards(\"planechase\", 1, false);\n        removeCards(\"planechase\", newScryCards);\n        setScryCards(\"planechase\", newScryCards);\n        this.setState({ scryCards: newScryCards });\n      }\n      this.setState({ scryModalOpen: true });\n    }\n  };\n\n  render() {\n    const {\n      loading,\n      planes,\n      deck,\n      currentCard,\n      planeswalkDisabled\n    } = this.state;\n\n    return (\n      <div className=\"planechase\">\n        <PlanechaseHelmet planes={planes} />\n        <div className=\"fixed-top mt-1 ml-1 w-25 text-left\">\n          <Button\n            onClick={this.planeswalk}\n            className=\"mb-2\"\n            color=\"success\"\n            disabled={planeswalkDisabled || loading}\n            block\n          >\n            <i className=\"ms ms-planeswalker ms-2x mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Planeswalk</span>\n          </Button>\n        </div>\n\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : (\n          <div className=\"mb-2\">\n            {currentCard ? (\n              <Fade key={currentCard.deck_card_id} timeout={100}>\n                <Plane card={currentCard} renderActions=\"true\">\n                  {this.renderChaos(currentCard)}\n                </Plane>\n              </Fade>\n            ) : (\n              <Plane />\n            )}\n          </div>\n        )}\n        {this.renderTwoPlanes()}\n        {this.renderFivePlanes()}\n        {this.renderTripleChaosModal()}\n        {this.renderScryModal()}\n        {this.renderHistory()}\n\n        <p className=\"text-center my-3 noselect\">\n          There are {deck ? deck.length : 0} cards remaining.\n        </p>\n        <Button onClick={this.reset} color=\"danger\" block>\n          Reset\n        </Button>\n\n        {this.renderDevTools()}\n      </div>\n    );\n  }\n\n  renderDevTools = () => {\n    const devTools = getSetting(\"devTools\");\n    if (devTools) {\n      return (\n        <div className=\"my-4\">\n          <h5 className=\"text-center noselect\">Dev Tools</h5>\n          <Button onClick={this.undo} color=\"warning\" block>\n            Undo\n          </Button>\n          {this.renderDeck()}\n        </div>\n      );\n    }\n  };\n\n  toggleDeck = () => {\n    this.setState({ showDeck: !this.state.showDeck });\n  };\n\n  toggleDeckImages = () => {\n    this.setState({ showDeckImages: !this.state.showDeckImages });\n  };\n\n  manipulateDeck = () => {\n    this.refreshDeck();\n  };\n\n  renderDeck = () => {\n    const { deck, showDeck, showDeckImages } = this.state;\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleDeck} block>\n          {showDeck ? \"Hide\" : \"Show\"} Deck\n        </Button>\n        <Fade in={showDeck}>\n          {showDeck && (\n            <>\n              <Button onClick={this.toggleDeckImages} block>\n                {showDeckImages ? \"Hide\" : \"Show\"} Full Card\n              </Button>\n              <ListGroup>\n                {deck.map((p, i) => (\n                  <React.Fragment key={p.deck_card_id}>\n                    <Plane card={p} listDisplay={!showDeckImages} />\n                    <ListGroupItem className=\"text-center justify-content-center d-flex\">\n                      <ButtonToolbar>\n                        <ButtonGroup>\n                          <Button\n                            disabled={i === 0}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                moveCard(\"planechase\", i, i - 1)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n                          </Button>\n                          <Button\n                            disabled={i === deck.length - 1}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                moveCard(\"planechase\", i, i + 1)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"ml-2\">\n                          <Button\n                            disabled={i === 0}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                findAndPutOnTop(\"planechase\", p.deck_card_id)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-untap ms-2x ss-mythic ss-grad\" />\n                          </Button>\n                          <Button\n                            disabled={i === deck.length - 1}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                findAndPutOnBottom(\"planechase\", p.deck_card_id)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-tap ms-2x ss-mythic ss-grad\" />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"ml-2\">\n                          <Button\n                            color=\"danger\"\n                            onClick={() =>\n                              this.manipulateDeck(\n                                removeCards(\"planechase\", [p])\n                              )\n                            }\n                          >\n                            <i className=\"ss ss-x ss-10e ss-rare ss-grad ss-2x\" />\n                          </Button>\n                        </ButtonGroup>\n                      </ButtonToolbar>\n                    </ListGroupItem>\n                  </React.Fragment>\n                ))}\n              </ListGroup>\n            </>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  };\n\n  renderHistory = () => {\n    const { showHistory } = this.state;\n    const history = getHistory(\"planechase\");\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleHistory} block>\n          {showHistory ? \"Hide\" : \"Show\"} History\n        </Button>\n        <Fade in={showHistory}>\n          {showHistory && history && (\n            <ListGroup>\n              {history.reverse().map(p => (\n                <Plane card={p} key={p.deck_card_id} listDisplay={true} />\n              ))}\n            </ListGroup>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n\n  renderChaos(card) {\n    const hasChaos = hasCustomProperty(\"chaos-trigger\", card);\n    if (hasChaos) {\n      return (\n        <Button\n          onClick={() => this.triggerChaos(card)}\n          color=\"info\"\n          size=\"lg\"\n          className=\"btn-translucent\"\n        >\n          <i className=\"ms ms-chaos ms-2x mx-2\" />\n          <span className=\"mx-2 d-none d-md-inline\">Trigger Chaos</span>\n        </Button>\n      );\n    }\n  }\n\n  renderTwoPlanes() {\n    const { currentCard, additionalCards } = this.state;\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      const revealedPlanes = additionalCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      // TODO chaos etc\n      return (\n        <div>\n          <Alert color=\"info\" className=\"text-center mb-0\">\n            <i className=\"ms ms-planeswalker mx-2\" />\n            You Are On Both Planes\n            <i className=\"ms ms-planeswalker mx-2\" />\n          </Alert>\n          {revealedPlanes.map(c => (\n            <React.Fragment key={c.deck_card_id}>\n              <Plane card={c} renderActions=\"true\">\n                {this.renderChaos(c)}\n              </Plane>\n            </React.Fragment>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  selectPlane = card => {\n    const { revealedCards } = this.state;\n    removeCards(\"planechase\", revealedCards);\n    addCardsToTop(\"planechase\", [card]);\n    const restCards = revealedCards.filter(\n      c => c.deck_card_id !== card.deck_card_id\n    );\n    const shuffledCards = shuffle(restCards.slice());\n    addCardsToBottom(\"planechase\", shuffledCards);\n    setRevealedCards(\"planechase\", []);\n    this.setState({ planeswalkDisabled: false, revealedCards: [] });\n    this.planeswalk();\n  };\n\n  renderFivePlanes() {\n    const { currentCard, revealedCards } = this.state;\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      console.log(revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      console.log(revealedPlanes);\n      // TODO Countes, chaos etc\n      return (\n        <div>\n          <Alert color=\"info\" className=\"text-center mb-0\">\n            <i className=\"ms ms-planeswalker mx-2\" />\n            Pick a Plane to Planeswalk To\n            <i className=\"ms ms-planeswalker mx-2\" />\n          </Alert>\n          {revealedPlanes.map(c => (\n            <div key={c.deck_card_id}>\n              <Plane card={c}>\n                <Button\n                  onClick={() => this.selectPlane(c)}\n                  color=\"primary\"\n                  className=\"btn-translucent\"\n                >\n                  <i className=\"ms ms-planeswalker mx-2\" />\n                  <span className=\"mx-2\">Planeswalk</span>\n                </Button>\n              </Plane>\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  _tripleChaosModalClose = () => {\n    setRevealedCards(\"planechase\", []);\n    this.setState({\n      tripleChaosModalOpen: false,\n      revealedCards: []\n    });\n  };\n\n  _tripleChaosModalToggle = () => {\n    if (this.state.tripleChaosModalOpen) {\n      this._tripleChaosModalClose();\n    }\n  };\n\n  renderTripleChaosModal() {\n    const { revealedCards, tripleChaosModalOpen } = this.state;\n    if (revealedCards && tripleChaosModalOpen) {\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      return (\n        <Modal\n          isOpen={!!tripleChaosModalOpen}\n          toggle={this._tripleChaosModalToggle}\n          onClosed={this._tripleChaosModalClose}\n          size=\"md\"\n          backdrop={true}\n          contentClassName=\"bg-secondary\"\n        >\n          <ModalHeader className=\"justify-content-center text-center text-white\">\n            <div>\n              <i className=\"ms ms-chaos mr-1\" />\n              <i className=\"ms ms-chaos mr-1\" />\n              <i className=\"ms ms-chaos mr-1\" />\n              <span className=\"mx-1\">Triple Chaos</span>\n              <i className=\"ms ms-chaos ml-1\" />\n              <i className=\"ms ms-chaos ml-1\" />\n              <i className=\"ms ms-chaos ml-1\" />\n            </div>\n            <div>\n              <small className=\"text-center\">You Pick Order</small>\n            </div>\n          </ModalHeader>\n          <ModalBody className=\"text-center\">\n            {revealedPlanes.map(c => (\n              <React.Fragment key={c.deck_card_id}>\n                <Plane card={c}>{this.renderChaos(c)}</Plane>\n              </React.Fragment>\n            ))}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"info\"\n              block\n              aria-label=\"Close\"\n              onClick={this._tripleChaosModalClose}\n            >\n              Done\n            </Button>\n          </ModalFooter>\n        </Modal>\n      );\n    }\n  }\n\n  _scryModalClose = () => {\n    setScryCards(\"planechase\", []);\n    this.setState({\n      scryModalOpen: false,\n      scryCards: []\n    });\n  };\n\n  _scryTop = () => {\n    const { scryCards } = this.state;\n    addCardsToTop(\"planechase\", scryCards);\n    console.log(\"Scry Top\", scryCards);\n    this.refreshDeck();\n    setScryCards(\"planechase\", []);\n    this.setState({ scryCards: [], scryModalOpen: false });\n  };\n\n  _scryBottom = () => {\n    const { scryCards } = this.state;\n    addCardsToBottom(\"planechase\", scryCards);\n    console.log(\"Scry Bottom\", scryCards);\n    this.refreshDeck();\n    setScryCards(\"planechase\", []);\n    this.setState({ scryCards: [], scryModalOpen: false });\n  };\n\n  renderScryModal = () => {\n    const { scryCards, scryModalOpen } = this.state;\n    if (scryCards && scryModalOpen) {\n      return (\n        <Modal\n          isOpen={!!scryModalOpen}\n          size=\"md\"\n          contentClassName=\"bg-secondary\"\n        >\n          <ModalHeader className=\"justify-content-center text-white\">\n            <i className=\"ms ms-chaos mx-4\" />\n            Scry Card\n            <i className=\"ms ms-chaos mx-4\" />\n          </ModalHeader>\n          <ModalBody>\n            <Button color=\"info\" block onClick={this._scryTop}>\n              Top\n            </Button>\n            {scryCards.map(c => (\n              <Plane card={c} key={c.deck_card_id} />\n            ))}\n            <Button color=\"info\" block onClick={this._scryBottom}>\n              Bottom\n            </Button>\n          </ModalBody>\n        </Modal>\n      );\n    }\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport const ArchenemyHelmet = ({ schemes }) => {\n  return (\n    <Helmet title=\"Archenemy\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/archenemy-manifest.json\"}\n      />\n      {schemes &&\n        schemes.map(p => (\n          <link\n            rel=\"preload\"\n            href={p.image_uris[\"large\"]}\n            as=\"image\"\n            key={p.id}\n          />\n        ))}\n    </Helmet>\n  );\n};\n","export const getDeckList = () => {\n  return DECKS.map(s => s.name);\n};\n\nexport const getCardList = (deckname, schemes) => {\n  const deck = DECKS.find(s => s.name === deckname);\n  return deck.cards.map(c => {\n    const scheme = schemes.find(s => s.name === c[0]);\n    const clonedCard = JSON.parse(JSON.stringify(scheme));\n    clonedCard.count = c[1];\n    return clonedCard;\n  });\n};\nconst DECKS = [\n  {\n    name: \"Assemble the Doomsday Machine\",\n    cards: [\n      [\"All in Good Time\", 1],\n      [\"Behold the Power of Destruction\", 1],\n      [\"Embrace My Diabolical Vision\", 1],\n      [\"Feed the Machine\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"I Know All, I See All\", 2],\n      [\"Ignite the Cloneforge!\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"The Iron Guardian Stirs\", 2],\n      [\"My Genius Knows No Bounds\", 1],\n      [\"Nothing Can Stop Me Now\", 1],\n      [\"The Pieces Are Coming Together\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Scorch the World with Dragonfire\",\n    cards: [\n      [\"All Shall Smolder in My Wake\", 2],\n      [\"Approach My Molten Realm\", 1],\n      [\"The Fate of the Flammable\", 1],\n      [\"I Bask in Your Silent Awe\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"Know Naught but Fire\", 1],\n      [\"Look Skyward and Despair\", 2],\n      [\"My Crushing Masterstroke\", 1],\n      [\"My Wish Is Your Command\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Tooth, Claw, and Tail\", 1],\n      [\"Which of You Burns Brightest?\", 2],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Trample Civilization Underfoot\",\n    cards: [\n      [\"Every Last Vestige Shall Rot\", 2],\n      [\"Evil Comes to Fruition\", 1],\n      [\"I Call on the Ancient Magics\", 1],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Into the Earthen Maw\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"May Civilization Collapse\", 1],\n      [\"Nature Demands an Offering\", 2],\n      [\"Nature Shields Its Own\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Roots of All Evil\", 2],\n      [\"The Very Soil Shall Shake\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1],\n      [\"Your Will Is Not Your Own\", 2]\n    ]\n  },\n  {\n    name: \"Bring About the Undead Apocalypse\",\n    cards: [\n      [\"Choose Your Champion\", 2],\n      [\"Dance, Pathetic Marionette\", 1],\n      [\"The Dead Shall Serve\", 2],\n      [\"Every Hope Shall Vanish\", 2],\n      [\"I Delight in Your Convulsions\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"Mortal Flesh Is Weak\", 1],\n      [\"My Undead Horde Awakens\", 1],\n      [\"Only Blood Ends Your Nightmares\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Rotted Ones, Lay Siege\", 2],\n      [\"Surrender Your Thoughts\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Archenemy Nicol Bolas\",\n    cards: [\n      [\"Because I Have Willed It\", 1],\n      [\"Behold My Grandeur\", 1],\n      [\"Bow to My Command\", 1],\n      [\"Choose Your Demise\", 1],\n      [\"Delight in the Hunt\", 1],\n      [\"Every Dream a Nightmare\", 1],\n      [\"For Each of You, a Gift\", 1],\n      [\"Know Evil\", 1],\n      [\"Make Yourself Useful\", 1],\n      [\"The Mighty Will Fall\", 1],\n      [\"My Forces Are Innumerable\", 1],\n      [\"My Laughter Echoes\", 1],\n      [\"No One Will Hear Your Cries\", 1],\n      [\"Pay Tribute to Me\", 1],\n      [\"Power Without Equal\", 1],\n      [\"A Reckoning Approaches\", 1],\n      [\"There Is No Refuge\", 1],\n      [\"This World Belongs to Me\", 1],\n      [\"What's Yours Is Now Mine\", 1],\n      [\"When Will You Learn?\", 1]\n    ]\n  }\n];\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardImgOverlay,\n  CardTitle,\n  CardBody,\n  CardSubtitle,\n  CardText,\n  CardFooter,\n  ListGroupItem,\n  Modal,\n  ModalBody\n} from \"reactstrap\";\nimport back from \"../../images/archenemy-back.jpg\";\nimport { Counter } from \"./Counter\";\nimport \"./planes.scss\";\n\nimport { hasCustomProperty } from \"../../mtg/card.js\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Scheme extends Component {\n  state = {\n    modalOpen: false\n  };\n\n  toggleModal = () => {\n    console.log(\"Toggle Modal\");\n    this.setState({ modalOpen: !this.state.modalOpen });\n  };\n\n  render() {\n    const { listDisplay, card, children } = this.props;\n    if (listDisplay) {\n      return (\n        <>\n          <ListGroupItem color=\"dark\" onClick={this.toggleModal}>\n            {card.name}\n          </ListGroupItem>\n          <Modal\n            isOpen={this.state.modalOpen}\n            toggle={this.toggleModal}\n            size=\"md\"\n            backdrop={true}\n            contentClassName=\"bg-secondary\"\n          >\n            <ModalBody className=\"p-0\" centered=\"true\">\n              <Scheme card={card} />\n              {children}\n            </ModalBody>\n          </Modal>\n        </>\n      );\n    } else {\n      return (\n        <Card inverse className=\"mtg-scheme-card\">\n          {this.renderImage()}\n          {this.renderCounter()}\n          {this.renderChildren()}\n          {this.renderBody()}\n          {this.renderActions()}\n        </Card>\n      );\n    }\n  }\n\n  renderBody() {\n    const text = this.renderText();\n    const hasBody = text;\n\n    return hasBody && <CardBody>{text}</CardBody>;\n  }\n\n  renderCounter() {\n    const { card, renderActions } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    const hasCounters = hasCustomProperty(\"counter\", card);\n    if (renderActions && hasCounters) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center scheme-overlay counter-overlay\">\n            <CardTitle className=\"text-center pt-5 mt-sm-5\">\n              <Counter card={card} />\n            </CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return (\n          <CardBody className=\"text-center pb-0\">\n            <Counter card={card} />\n          </CardBody>\n        );\n      }\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    if (children) {\n      if (displayImages) {\n        return (\n          <CardImgOverlay className=\"text-center scheme-overlay child-overlay\">\n            <CardTitle className=\"text-center pt-5 mt-sm-5\">\n              {children}\n            </CardTitle>\n          </CardImgOverlay>\n        );\n      } else {\n        return <CardBody className=\"text-center pb-0\">{children}</CardBody>;\n      }\n    }\n  }\n\n  renderActions() {\n    const { card } = this.props;\n    const displayGatherer = getSetting(\"displayGatherer\");\n    if (displayGatherer && card) {\n      return (\n        <CardFooter>\n          <a\n            href={card.related_uris[\"gatherer\"]}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatherer\n          </a>\n        </CardFooter>\n      );\n    }\n  }\n\n  renderText() {\n    const { card } = this.props;\n    const displayText = getSetting(\"displayText\");\n    if (displayText) {\n      if (card) {\n        return (\n          <>\n            <CardTitle>\n              <h5>{card.name}</h5>\n            </CardTitle>\n            <CardSubtitle>{card.type_line}</CardSubtitle>\n            <CardText dangerouslySetInnerHTML={card.oracle_html} />\n          </>\n        );\n      } else {\n        return <CardTitle>None</CardTitle>;\n      }\n    }\n  }\n\n  renderImage() {\n    const displayImages = getSetting(\"displayImages\");\n    if (displayImages) {\n      return (\n        <CardImg\n          top\n          width=\"100%\"\n          src={this.imageURI()}\n          className=\"mtg-card mtg-card-scheme\"\n        />\n      );\n    }\n  }\n\n  imageURI() {\n    const { card } = this.props;\n    if (card) {\n      return card.image_uris[\"large\"];\n    } else {\n      return back;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Alert,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardTitle,\n  Fade,\n  ListGroup,\n  ListGroupItem,\n  Jumbotron,\n  Container,\n  UncontrolledCollapse\n} from \"reactstrap\";\nimport store from \"store\";\n\nimport { ArchenemyHelmet } from \"./Helmet\";\nimport { getDeckList, getCardList } from \"../../mtg/prebuilt-decks\";\nimport { getAllArchenemyCards } from \"../../util/api.js\";\nimport { Scheme } from \"../../components/magic/Scheme\";\nimport { Loading } from \"../../components/Loading\";\nimport { getSetting } from \"../../util/settings.js\";\n\nimport {\n  getCurrentDeck,\n  getOrCreateCurrentDeck,\n  storeCurrentDeck,\n  drawCard,\n  undoDraw,\n  removeCards,\n  getHistory,\n  findAndPutOnBottom,\n  findAndPutOnTop,\n  moveCard\n} from \"../../mtg/deck.js\";\nimport {\n  getCurrentCard,\n  setCurrentCard,\n  hasCustomProperty,\n  setAdditionalCards,\n  getAdditionalCards\n} from \"../../mtg/card.js\";\n\nexport class Archenemy extends Component {\n  state = {\n    loading: true,\n    deck: null,\n    currentCard: null,\n    ongoingSchemes: [],\n    schemes: [],\n    showHistory: false,\n    showDeck: false,\n    showDeckImages: false,\n    abandonedOngoing: false,\n    deckSelection: true,\n    customDeck: null\n  };\n\n  componentDidMount = async () => {\n    const schemes = await getAllArchenemyCards();\n    const deck = getCurrentDeck(\"archenemy\");\n    // TODO switch to selecting deck\n    // const deck = getCurrentDeck(\"archenemy\");\n    const currentCard = getCurrentCard(\"archenemy\");\n    const ongoingSchemes = getAdditionalCards(\"archenemy\") || [];\n    const abandonedOngoing = !!store.get(\"archenemy-abandonedOngoing\");\n    const customDeck = JSON.parse(JSON.stringify(schemes));\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({\n      currentCard,\n      deck,\n      loading: false,\n      ongoingSchemes,\n      schemes,\n      abandonedOngoing,\n      deckSelection: !deck,\n      customDeck\n    });\n  };\n\n  refreshDeck = () => {\n    const deck = getCurrentDeck(\"archenemy\");\n    this.setState({ deck });\n  };\n\n  scheme = () => {\n    const { currentCard, ongoingSchemes } = this.state;\n    if (currentCard) {\n      if (currentCard.type_line === \"Ongoing Scheme\") {\n        ongoingSchemes.push(currentCard);\n      }\n    }\n    const newCard = drawCard(\"archenemy\");\n    setCurrentCard(\"archenemy\", newCard);\n    setAdditionalCards(\"archenemy\", ongoingSchemes);\n    this.refreshDeck();\n    this.setState({\n      currentCard: newCard,\n      ongoingSchemes,\n      abandonedOngoing: store.set(\"archenemy-abandonedOngoing\", false)\n    });\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    // TODO reset to deck selection\n    const schemes = await getAllArchenemyCards();\n    const deck = null;\n    storeCurrentDeck(\"archenemy\", deck);\n    const currentCard = setCurrentCard(\"archenemy\", null);\n    const ongoingSchemes = setAdditionalCards(\"archenemy\", []);\n    const abandonedOngoing = store.set(\"archenemy-abandonedOngoing\", false);\n    const customDeck = JSON.parse(JSON.stringify(schemes));\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({\n      schemes,\n      loading: false,\n      deck,\n      currentCard,\n      ongoingSchemes,\n      abandonedOngoing,\n      deckSelection: true,\n      customDeck\n    });\n  };\n\n  undo = async () => {\n    const currentCard = undoDraw(\"archenemy\");\n    this.refreshDeck();\n    this.setState({ currentCard });\n  };\n  // TODO Cards with same id\n  render() {\n    const { loading, schemes, deckSelection } = this.state;\n\n    return (\n      <div className=\"archenemy\">\n        <ArchenemyHelmet schemes={schemes} />\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : deckSelection ? (\n          this.renderDeckSelect()\n        ) : (\n          this.renderGamePlay()\n        )}\n        {this.renderDevTools()}\n      </div>\n    );\n  }\n\n  renderGamePlay() {\n    const { loading, deck, currentCard, abandonedOngoing } = this.state;\n\n    return (\n      <>\n        <div className=\"fixed-top mt-1 ml-1 w-25 text-left\">\n          <Button\n            onClick={this.scheme}\n            className=\"mb-2\"\n            color=\"success\"\n            disabled={loading}\n            block\n          >\n            <i className=\"ss ss-arc ss-3x mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Scheme</span>\n          </Button>\n        </div>\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : (\n          <div className=\"mb-2 d-flex justify-content-center\">\n            {abandonedOngoing ? (\n              <Jumbotron className=\"bg-danger text-center\" fluid>\n                <Container fluid>\n                  <h1>Current Scheme Has Been Foiled!</h1>\n                </Container>\n              </Jumbotron>\n            ) : currentCard ? (\n              <Fade key={currentCard.deck_card_id} timeout={100}>\n                <Scheme card={currentCard} renderActions=\"true\">\n                  {this.renderAbandon(currentCard)}\n                </Scheme>\n              </Fade>\n            ) : (\n              <Scheme />\n            )}\n          </div>\n        )}\n\n        {this.renderOngoingSchemes()}\n\n        {this.renderHistory()}\n        <p className=\"text-center my-3 noselect\">\n          There are {deck ? deck.length : 0} cards remaining.\n        </p>\n        <Button onClick={this.reset} color=\"danger\" block>\n          Reset\n        </Button>\n      </>\n    );\n  }\n\n  renderDeckSelect() {\n    const { schemes } = this.state;\n    return (\n      <>\n        <Card>\n          <CardBody>\n            <CardTitle>\n              <h3 className=\"text-center\">All Schemes</h3>\n            </CardTitle>\n            <Button\n              block\n              color=\"success\"\n              onClick={() => this.selectDeck(\"All\", schemes)}\n            >\n              Use All\n            </Button>\n          </CardBody>\n        </Card>\n        {this.renderPrebuilts()}\n        {this.renderBuildCustomDeck()}\n      </>\n    );\n  }\n\n  renderOngoingSchemes() {\n    const { ongoingSchemes } = this.state;\n    if (ongoingSchemes && ongoingSchemes.length > 0) {\n      return (\n        <>\n          <Alert color=\"info\" className=\"text-center\">\n            <h5>Ongoing Schemes</h5>\n          </Alert>\n          <div className=\"d-flex justify-content-center flex-wrap \">\n            {ongoingSchemes.map(c => (\n              <React.Fragment key={c.deck_card_id}>\n                <Scheme card={c} renderActions=\"true\">\n                  {this.renderAbandon(c)}\n                </Scheme>\n              </React.Fragment>\n            ))}\n          </div>\n        </>\n      );\n    }\n  }\n\n  renderDevTools = () => {\n    const devTools = getSetting(\"devTools\");\n    if (devTools) {\n      return (\n        <div className=\"my-4\">\n          <h5 className=\"text-center noselect\">Dev Tools</h5>\n          <Button onClick={this.undo} color=\"warning\" block>\n            Undo\n          </Button>\n          {this.renderDeck()}\n        </div>\n      );\n    }\n  };\n\n  abandonScheme = card => {\n    const { ongoingSchemes, currentCard } = this.state;\n    if (currentCard.deck_card_id === card.deck_card_id) {\n      console.log(\"Abandon Current Scheme\", card);\n      setCurrentCard(\"archenemy\", null);\n      const abandonedOngoing = store.set(\"archenemy-abandonedOngoing\", true);\n      this.setState({ currentCard: null, abandonedOngoing });\n    } else {\n      console.log(\"Abandon Scheme\", card);\n      let newOngoing = ongoingSchemes.filter(\n        s => s.deck_card_id !== card.deck_card_id\n      );\n      setAdditionalCards(\"archenemy\", newOngoing);\n      this.setState({ ongoingSchemes: newOngoing });\n    }\n  };\n\n  renderAbandon(card) {\n    const isOngoing = card.type_line === \"Ongoing Scheme\";\n    if (isOngoing && !hasCustomProperty(\"unabandonable\", card)) {\n      return (\n        <Button\n          onClick={() => this.abandonScheme(card)}\n          color=\"danger\"\n          size=\"lg\"\n          className=\"btn-translucent\"\n        >\n          <h2 className=\"mb-0\">\n            <i className=\"ss ss-bok ss-2x ss-grad ss-rare mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Abandon Scheme</span>\n          </h2>\n        </Button>\n      );\n    }\n  }\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  };\n\n  renderHistory = () => {\n    const { showHistory } = this.state;\n    const history = getHistory(\"archenemy\");\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleHistory} block>\n          {showHistory ? \"Hide\" : \"Show\"} History\n        </Button>\n        <Fade in={showHistory}>\n          {showHistory && history && (\n            <ListGroup>\n              {history.reverse().map(p => (\n                <Scheme card={p} key={p.deck_card_id} listDisplay={true} />\n              ))}\n            </ListGroup>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n\n  selectDeck(name, cards) {\n    console.log(`Selected ${name}`, cards);\n\n    const newCards = name === \"All\" ? cards : [];\n    cards.forEach(c => {\n      for (let i = 0; i < c.count; i++) {\n        newCards.push(c);\n      }\n    });\n\n    const deck = getOrCreateCurrentDeck(\"archenemy\", newCards, true);\n    this.setState({\n      deck,\n      deckSelection: false\n    });\n  }\n\n  incrementCount(card) {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => {\n      if (c.id === card.id) {\n        c.count += 1;\n        c.count = Math.min(c.count, 2);\n      }\n    });\n    this.setState({ customDeck });\n  }\n\n  decrementCount(card) {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => {\n      if (c.id === card.id) {\n        c.count -= 1;\n        c.count = Math.max(c.count, 0);\n      }\n    });\n    this.setState({ customDeck });\n  }\n\n  customDeckSize() {\n    const { customDeck } = this.state;\n    const reducer = (a, b) => a + b;\n    return customDeck.map(c => c.count).reduce(reducer, 0);\n  }\n\n  resetCustomDeck = () => {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({ customDeck });\n  };\n\n  renderBuildCustomDeck() {\n    const { customDeck } = this.state;\n\n    const cardListIems = customDeck.map(card => (\n      <ListGroupItem key={card.id} color=\"dark\">\n        <Scheme card={card} />\n        <div className=\"text-center\">\n          <h1>x{card.count}</h1>\n          <ButtonGroup>\n            <Button\n              disabled={card.count <= 0}\n              onClick={() => this.decrementCount(card)}\n            >\n              <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n            </Button>\n            <Button\n              disabled={card.count >= 2}\n              onClick={() => this.incrementCount(card)}\n            >\n              <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n            </Button>\n          </ButtonGroup>\n        </div>\n      </ListGroupItem>\n    ));\n\n    return (\n      <>\n        <Card>\n          <CardBody>\n            <CardTitle>\n              <h3 className=\"text-center\">Custom Deck</h3>\n            </CardTitle>\n            <Button block id=\"custom-deck-toggle\">\n              Build Custom\n            </Button>\n            <UncontrolledCollapse toggler=\"custom-deck-toggle\">\n              <div className=\"fixed-top mt-1 ml-1 text-left\">\n                <Alert color=\"info\" className=\"clearfix\">\n                  <h4 className=\"float-left\">\n                    Custom Deck Size: {this.customDeckSize()}\n                  </h4>\n                  <ButtonGroup className=\"float-right\">\n                    <Button color=\"danger\" onClick={this.resetCustomDeck}>\n                      Reset\n                    </Button>\n                    <Button\n                      color=\"success\"\n                      onClick={() => this.selectDeck(\"Custom\", customDeck)}\n                    >\n                      Use Deck\n                    </Button>\n                  </ButtonGroup>\n                </Alert>\n              </div>\n\n              <ListGroup>{cardListIems}</ListGroup>\n            </UncontrolledCollapse>\n            <Button\n              block\n              color=\"success\"\n              onClick={() => this.selectDeck(\"Custom\", customDeck)}\n            >\n              Use Deck\n            </Button>\n          </CardBody>\n        </Card>\n      </>\n    );\n  }\n\n  renderPrebuilts() {\n    const { schemes } = this.state;\n    const prebuilts = getDeckList();\n    const prebuiltItems = prebuilts.map((prebuilt, i) => {\n      const cardList = getCardList(prebuilt, schemes);\n      const cardListIems = cardList.map((card, i) => (\n        <ListGroupItem key={i} color=\"dark\">\n          <Scheme card={card} />\n          <h1 className=\"text-center\">x{card.count}</h1>\n        </ListGroupItem>\n      ));\n      return (\n        <Card key={i}>\n          <CardBody>\n            <CardTitle>\n              <h3 className=\"text-center\">{prebuilt}</h3>\n            </CardTitle>\n            <Button block id={`prebuilt-${i}`}>\n              Decklist\n            </Button>\n            <UncontrolledCollapse toggler={`#prebuilt-${i}`}>\n              <ListGroup>{cardListIems}</ListGroup>\n            </UncontrolledCollapse>\n            <Button\n              block\n              color=\"success\"\n              onClick={() => this.selectDeck(prebuilt, cardList)}\n            >\n              Use Deck\n            </Button>\n          </CardBody>\n        </Card>\n      );\n    });\n\n    return <>{prebuiltItems}</>;\n  }\n\n  toggleDeck = () => {\n    this.setState({ showDeck: !this.state.showDeck });\n  };\n\n  toggleDeckImages = () => {\n    this.setState({ showDeckImages: !this.state.showDeckImages });\n  };\n\n  manipulateDeck = () => {\n    this.refreshDeck();\n  };\n\n  renderDeck = () => {\n    const { deck, showDeck, showDeckImages } = this.state;\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleDeck} block>\n          {showDeck ? \"Hide\" : \"Show\"} Deck\n        </Button>\n        <Fade in={showDeck}>\n          {showDeck && deck && (\n            <>\n              <Button onClick={this.toggleDeckImages} block>\n                {showDeckImages ? \"Hide\" : \"Show\"} Full Card\n              </Button>\n              <ListGroup>\n                {deck.map((p, i) => (\n                  <React.Fragment key={p.deck_card_id}>\n                    <Scheme card={p} listDisplay={!showDeckImages} />\n                    <ListGroupItem className=\"text-center justify-content-center d-flex\">\n                      <ButtonToolbar>\n                        <ButtonGroup>\n                          <Button\n                            disabled={i === 0}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                moveCard(\"archenemy\", i, i - 1)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n                          </Button>\n                          <Button\n                            disabled={i === deck.length - 1}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                moveCard(\"archenemy\", i, i + 1)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"ml-2\">\n                          <Button\n                            disabled={i === 0}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                findAndPutOnTop(\"archenemy\", p.deck_card_id)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-untap ms-2x ss-mythic ss-grad\" />\n                          </Button>\n                          <Button\n                            disabled={i === deck.length - 1}\n                            onClick={() =>\n                              this.manipulateDeck(\n                                findAndPutOnBottom(\"archenemy\", p.deck_card_id)\n                              )\n                            }\n                          >\n                            <i className=\"ms ms-tap ms-2x ss-mythic ss-grad\" />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"ml-2\">\n                          <Button\n                            color=\"danger\"\n                            onClick={() =>\n                              this.manipulateDeck(removeCards(\"archenemy\", [p]))\n                            }\n                          >\n                            <i className=\"ss ss-x ss-10e ss-rare ss-grad ss-2x\" />\n                          </Button>\n                        </ButtonGroup>\n                      </ButtonToolbar>\n                    </ListGroupItem>\n                  </React.Fragment>\n                ))}\n              </ListGroup>\n            </>\n          )}\n        </Fade>\n      </div>\n    );\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport const SYBHelmet = () => {\n  return (\n    <Helmet title=\"SYB\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/syb-manifest.json\"}\n      />\n    </Helmet>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Button, ButtonGroup } from \"reactstrap\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport debounce from \"lodash/debounce\";\nimport store from \"store\";\n\nimport { shuffle } from \"../../mtg/deck.js\";\n\nimport { SYBHelmet } from \"./Helmet\";\n\nconst circleLayout = { name: \"circle\", nodeDimensionsIncludeLabels: true };\nconst gridLayout = { name: \"grid\", nodeDimensionsIncludeLabels: true, rows: 2 };\n\nexport class SYB extends Component {\n  state = {\n    playerCount: 4,\n    targets: null\n  };\n  componentDidMount = () => {\n    const playerCount = store.get(\"syb-playerCount\") || 4;\n    const targets = store.get(\"syb-targets\") || null;\n    const tableShape = store.get(\"syb-tableShape\") || \"circle\";\n    this.setState({\n      playerCount,\n      targets,\n      tableShape\n    });\n  };\n\n  generateNodes() {\n    const { playerCount } = this.state;\n    const players = Array.from(Array(playerCount).keys());\n    return players.map(p => {\n      const label = p === 0 ? \"J\" : p;\n      return { data: { id: `player-${p}`, label, type: \"triangle-tee\" } };\n    });\n  }\n\n  generateEdges() {\n    const { targets } = this.state;\n\n    return !targets\n      ? []\n      : targets.map((player, i) => {\n          const targetIndex = i + 1 >= targets.length ? 0 : i + 1;\n          const target = targets[targetIndex];\n          // const playerContent = this.renderPlayer(player, target, playerCount);\n          return {\n            data: {\n              source: `player-${player}`,\n              target: `player-${target}`,\n              label: `Edge from ${player} to ${target}`\n            }\n          };\n        });\n  }\n\n  regenerateOrder(c) {\n    const { playerCount } = this.state;\n    const players = Array.from(Array(c || playerCount).keys());\n    const targets = store.set(\"syb-targets\", shuffle(players));\n    this.setState({ targets });\n  }\n\n  handleCy(cy) {\n    const layout = this.isSquare() ? gridLayout : circleLayout;\n    const SELECT_THRESHOLD = 100;\n\n    // Refresh Layout if needed\n    const refreshLayout = debounce(() => {\n      cy.layout(layout).run();\n    }, SELECT_THRESHOLD);\n\n    cy.on(\"add remove\", () => {\n      refreshLayout();\n    });\n  }\n\n  renderCyto() {\n    const layout = this.isSquare() ? gridLayout : circleLayout;\n    const elements = {\n      nodes: this.generateNodes(),\n      edges: this.generateEdges()\n    };\n    const stylesheet = [\n      {\n        selector: \"node\",\n        style: {\n          padding: \"50%\",\n          width: \"50%\",\n          height: \"50%\",\n          \"background-color\": \"#17a2b8\",\n          \"text-valign\": \"center\",\n          \"text-halign\": \"center\",\n          content: \"data(label)\"\n        }\n      },\n      {\n        selector: \"node[label]\",\n        style: {\n          label: \"data(label)\",\n          \"font-size\": \"2em\",\n          color: \"white\"\n        }\n      },\n      {\n        selector: \"edge\",\n        style: {\n          width: \"5%\",\n          \"curve-style\": this.isSquare() ? \"unbundled-bezier\" : \"straight\",\n          \"target-arrow-shape\": \"triangle \"\n        }\n      }\n    ];\n\n    return (\n      <CytoscapeComponent\n        cy={cy => this.handleCy(cy)}\n        elements={CytoscapeComponent.normalizeElements(elements)}\n        style={{ width: \"100vw\", height: \"100vh\" }}\n        className={\"flex-grow\"}\n        stylesheet={stylesheet}\n        panningEnabled={false}\n        layout={layout}\n      />\n    );\n  }\n\n  isSquare() {\n    const { tableShape } = this.state;\n    return false && tableShape === \"square\";\n  }\n\n  incrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\"syb-playerCount\", playerCount + 1);\n    this.regenerateOrder(newPlayerCount);\n    this.setState({ playerCount: newPlayerCount });\n  }\n\n  decrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\n      \"syb-playerCount\",\n      Math.max(playerCount - 1, 1)\n    );\n    this.regenerateOrder(newPlayerCount);\n    this.setState({ playerCount: newPlayerCount });\n  }\n\n  setTableShape(shape) {\n    const tableShape = store.set(\"syb-tableShape\", shape);\n    this.setState({ tableShape });\n  }\n\n  render() {\n    const { playerCount, tableShape } = this.state;\n    return (\n      <div className=\"syb\">\n        <SYBHelmet />\n        <div className=\"my-4\">\n          <div className=\"text-center\">\n            <h1>{playerCount} Players</h1>\n            <ButtonGroup>\n              <Button\n                disabled={playerCount <= 1}\n                onClick={() => this.decrementCount()}\n              >\n                <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n              </Button>\n              <Button onClick={() => this.incrementCount()}>\n                <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n              </Button>\n            </ButtonGroup>\n            {false && (\n              <ButtonGroup>\n                <Button\n                  active={tableShape === \"circle\"}\n                  onClick={() => this.setTableShape(\"circle\")}\n                >\n                  <i className=\"ss ss-portal ss-2x\" />\n                </Button>\n                <Button\n                  active={tableShape === \"square\"}\n                  onClick={() => this.setTableShape(\"square\")}\n                >\n                  <i className=\"ss ss-bfz ss-2x\" />\n                </Button>\n              </ButtonGroup>\n            )}\n          </div>\n        </div>\n        <div className=\"text-center my-2\">\n          <Button color=\"danger\" onClick={() => this.regenerateOrder()}>\n            Which way are we screwing?\n          </Button>\n        </div>\n        <div className=\"d-flex\">{this.renderCyto()}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  NavLink as RRNavLink\n} from \"react-router-dom\";\nimport {\n  Alert,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport store from \"store\";\n\nimport \"./App.scss\";\n\nimport { setSetting, getSetting, toggleSetting } from \"./util/settings\";\n\nimport { Home } from \"./pages/home\";\nimport { Planechase } from \"./pages/planechase\";\nimport { Archenemy } from \"./pages/archenemy\";\nimport { SYB } from \"./pages/syb\";\n\nclass App extends Component {\n  state = {\n    isOpen: false,\n    disclaimerDismissed: false,\n    displayText: false,\n    displayImages: false,\n    devTools: false,\n    displayGatherer: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  componentDidMount = () => {\n    this.setState({\n      disclaimerDismissed: getSetting(\"disclaimerDismissed\"),\n      displayText: getSetting(\"displayText\"),\n      displayImages: getSetting(\"displayImages\"),\n      devTools: getSetting(\"devTools\")\n    });\n  };\n\n  dismissDisclaimer = () => {\n    this.setState({\n      disclaimerDismissed: setSetting(\"disclaimerDismissed\", true)\n    });\n  };\n\n  _toggleSetting = setting => {\n    const tempState = {};\n    tempState[setting] = toggleSetting(setting);\n    this.setState(tempState);\n  };\n\n  _mtgToggler = (value, displayText, onClick) => {\n    return (\n      <DropdownItem toggle={false} onClick={onClick}>\n        <span>\n          {value ? (\n            <i className=\"ms ms-dfc ms-dfc-day\" />\n          ) : (\n            <i className=\"ms ms-dfc ms-dfc-night\" />\n          )}\n        </span>\n        <span className=\"ml-3\">{displayText}</span>\n      </DropdownItem>\n    );\n  };\n\n  closeNavbar = () => {\n    if (this.state.isOpen) {\n      this.setState({ isOpen: false });\n    }\n  };\n\n  render() {\n    const {\n      disclaimerDismissed,\n      displayText,\n      displayImages,\n      displayGatherer,\n      devTools\n    } = this.state;\n    return (\n      <BrowserRouter>\n        <HelmetProvider>\n          <Helmet titleTemplate=\"%s - Jibbermaster\" />\n          <Navbar\n            color=\"dark\"\n            dark\n            expand=\"md\"\n            className=\"text-right p-1 noselect\"\n          >\n            <NavbarBrand />\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink\n                    tag={RRNavLink}\n                    exact\n                    to=\"/\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    tag={RRNavLink}\n                    exact\n                    to=\"/planechase\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Planechase\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    tag={RRNavLink}\n                    exact\n                    to=\"/archenemy\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Archenemy\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    tag={RRNavLink}\n                    exact\n                    to=\"/syb\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    SYB\n                  </NavLink>\n                </NavItem>\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret>\n                    Settings\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {this._mtgToggler(\n                      disclaimerDismissed,\n                      \"Disclaimer Dismissed\",\n                      () => this._toggleSetting(\"disclaimerDismissed\")\n                    )}\n                    {this._mtgToggler(displayText, \"Display Text\", () =>\n                      this._toggleSetting(\"displayText\")\n                    )}\n                    {this._mtgToggler(displayImages, \"Display Images\", () =>\n                      this._toggleSetting(\"displayImages\")\n                    )}\n                    {this._mtgToggler(displayGatherer, \"Display Gatherer\", () =>\n                      this._toggleSetting(\"displayGatherer\")\n                    )}\n                    {this._mtgToggler(devTools, \"Dev Tools\", () =>\n                      this._toggleSetting(\"devTools\")\n                    )}\n                    <DropdownItem divider />\n                    <DropdownItem\n                      toggle={false}\n                      onClick={() => store.clearAll()}\n                    >\n                      Clear Everything\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </Nav>\n            </Collapse>\n          </Navbar>\n          <div className=\"app text-light bg-dark col-md-8 offset-md-2 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3\">\n            <Switch>\n              <Route path=\"/\" exact render={props => <Home {...props} />} />\n              <Route\n                path=\"/archenemy\"\n                exact\n                render={props => <Archenemy {...props} />}\n              />\n              <Route\n                path=\"/planechase\"\n                exact\n                render={props => <Planechase {...props} />}\n              />\n              <Route path=\"/syb\" exact render={props => <SYB {...props} />} />\n            </Switch>\n            <Alert\n              color=\"warning\"\n              className=\"fixed-bottom mb-0 py-1\"\n              isOpen={!this.state.disclaimerDismissed}\n              toggle={this.dismissDisclaimer}\n            >\n              <h6>Disclaimer</h6>\n              <small className=\"text-muted m-0\">\n                This site is created for personal use. Magic: The Gathering, the\n                mana symbols, the tap symbol and all other related images are\n                owned by Wizards of the Coast. jibbermaster.com is unaffiliated\n                with Wizards of the Coast.\n              </small>\n            </Alert>\n          </div>\n        </HelmetProvider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/planechase-back.c7f50007.jpg\";","module.exports = __webpack_public_path__ + \"static/media/archenemy-back.2c00b5d4.jpg\";"],"sourceRoot":""}