{"version":3,"sources":["util/settings.js","pages/home/index.js","mtg/card.js","pages/planechase/Helmet.js","mtg/deck.js","util/api.js","components/Loading.js","components/Confirm.js","images/planechase-back.jpg","components/magic/Counter.js","components/magic/Plane.js","components/magic/planar-die/PlanarDie.js","components/magic/DoubleFaceIcon.js","components/magic/Buttons.js","pages/planechase/index.js","pages/archenemy/Helmet.js","mtg/prebuilt-decks.js","images/archenemy-back.jpg","components/magic/Scheme.js","pages/archenemy/index.js","pages/syb/Helmet.js","pages/formats/formats.js","pages/syb/Cyto.js","pages/syb/index.js","pages/formats/Helmet.js","pages/formats/index.js","App.js","serviceWorker.js","index.js"],"names":["store","addPlugin","defaultPlugin","defaults","getSetting","setting","get","setSetting","value","set","toggleSetting","Home","componentDidMount","className","title","rel","href","Button","as","NavLink","exact","to","block","variant","size","Component","getCurrentCard","prefix","setCurrentCard","card","getRevealedCards","setRevealedCards","cards","getAdditionalCards","setAdditionalCards","getScryCards","setScryCards","hasCustomProperty","property","customProperties","find","p","name","gathererImageURL","multiverse_ids","PlanechaseHelmet","planes","sizes","map","id","moveCard","from","deck","getCurrentDeck","splice","storeCurrentDeck","getOrCreateCurrentDeck","reset","console","log","clonedCard","JSON","parse","stringify","forEach","c","deck_card_id","uuidv4","shuffle","drawCard","shift","updateHistory","history","push","getHistory","undoDraw","pop","addCardsToTop","length","topCards","concat","addCardsToBottom","bottomCards","findCardByDeckCardId","deckCardId","findAndPutOnTop","tmpCard","removeCards","findAndPutOnBottom","cardsToRemove","filteredDeck","filter","r","revealCards","numReveal","onlyPlanes","revealedCards","count","Math","min","tmpCount","i","type_line","search","array","temporaryValue","randomIndex","currentIndex","floor","random","internet","axios","create","getAllPlanechaseCards","a","cached","response","cache","data","addAdditionalProperties","error","getAllArchenemyCards","schemes","properties","Aretopolis","type","oracle_html","__html","oracle_text","replace","time","cacheDate","moment","diff","unix","Loading","props","state","dotsCount","start","this","interval","dotsInterval","setInterval","setState","clearInterval","max","char","numDots","dots","label","getDotString","classes","Confirm","onConfirm","triggerButtonParams","triggerText","headerText","bodyText","confirmText","confirmVariant","useState","open","setOpen","close","confirmed","header","Modal","Header","Title","body","Body","show","onHide","animation","contentClassName","Footer","Col","onClick","Counter","counter","setCounter","getCounterType","Plane","modalOpen","fullscreen","toggleModal","toggleFullScreen","renderCardImage","Card","Img","width","src","imageURI","listDisplay","children","ListGroup","Item","backdrop","dialogClassName","centered","bg","text","renderImage","renderCounter","renderChildren","renderBody","renderActions","renderText","displayImages","hasCounters","onDoubleClick","ImgOverlay","Link","related_uris","target","Subtitle","Text","dangerouslySetInnerHTML","back","PlanarDie","rollDone","noop","numDice","roll","translateRoll","defaultRoll","outline","outlineColor","DoubleFaceIcon","enabled","style","backdropStyle","backgroundColor","merge","LoyaltyDownButton","LoyaltyUpButton","LoyaltyButtonGroup","upProps","downProps","reverse","ButtonGroup","UnTapButton","TapButton","TapButtonGroup","unTapProps","tapProps","DoubleFaceButton","DoubleFaceHighlighButton","TenthEditionButton","Planechase","loading","currentCard","additionalCards","scryCards","tripleChaosModalOpen","scryModalOpen","planeswalkDisabled","showHistory","showDeck","showDeckImages","showPlanarDie","refreshDeck","planeswalk","revealedPlanes","revealedPhenomenon","undo","triggerChaos","newRevealedCards","shuffledCards","slice","newScryCards","renderDevTools","renderDeck","togglePlanarDie","toggleDeck","toggleDeckImages","manipulateDeck","Fade","in","Fragment","ButtonToolbar","disabled","toggleHistory","renderHistory","selectPlane","restCards","_tripleChaosModalClose","_tripleChaosModalToggle","_scryModalClose","_scryTop","_scryBottom","renderScryModal","timeout","renderChaos","renderTwoPlanes","renderFivePlanes","renderTripleChaosModal","bottom","right","face","Alert","aria-label","ArchenemyHelmet","image_uris","DECKS","Scheme","Archenemy","ongoingSchemes","abandonedOngoing","deckSelection","customDeck","scheme","newCard","abandonScheme","newOngoing","s","resetCustomDeck","deckCardTitle","deckIcon","renderDeckSelect","renderGamePlay","Jumbotron","fluid","Container","renderAbandon","renderOngoingSchemes","selectDeck","renderPrebuilts","renderBuildCustomDeck","newCards","reduce","b","cardListItems","Badge","pill","decrementCount","incrementCount","Accordion","Toggle","eventKey","Collapse","customDeckSize","prebuiltItems","prebuilt","cardList","deckname","getCardList","SYBHelmet","TAGS","defaultEnabled","canAny","canEven","can2Hg","canFreeForAll","canEmperor","canSecretPartner","canRange1","canPentacle","canStar","canOdd","canTeams","FORMATS","initial","tags","players","showSwaps","displayName","SOURCE_COLOR","TARGET_COLOR","circleLayout","nodeDimensionsIncludeLabels","gridLayout","rows","SYB","playerCount","playerTargets","targets","loadingDirection","cySet","labels","0","showTurnEdges","starTurn","showScrewEdges","cy","dialog","tableShape","whichWay","setTimeout","regenerateOrder","removeListeners","toggleTurnEdges","toggleScrewEdges","toggleStarTurn","Array","keys","screwEdges","flatMap","player","fill","_","source","turnEdges","starNum","starTurnTarget","normalTurnTarget","layout","isSquare","refreshLayout","debounce","run","nodeClick","e","clickedNode","setLabel","split","on","nodes","sel","addClass","incomers","allIncomers","union","sources","outgoers","allOutgoers","elements","difference","not","removeClass","number","bsSize","actions","Dialog","CancelAction","OKAction","prompt","TextPrompt","initialValue","generateNodes","edges","generateEdges","stylesheet","square","selector","padding","height","content","color","opacity","cytoStyle","handleCy","CytoscapeComponent","normalizeElements","userPanningEnabled","removeListener","newPlayerCount","adjustTargetCount","newPlayerTargets","shape","Row","decrementTargetCount","incrementTargetCount","top","left","Spinner","renderCyto","ref","component","FormatsHelmet","Handle","Slider","handle","dragging","index","restProps","prefixCls","overlay","visible","placement","Formats","currentFormats","activeFormat","loadingFormat","swapTriggered","createTags","createFormats","rand","getRandomFormat","list","totalWeight","result","cur","weight","randomNum","weightSum","item","updateFormatValue","format","f","updatedCurrentFormats","triggerSwap","toggleTag","tag","t","newTags","formats","activeFormats","showDeckswapButton","enabledTags","includes","pickFormat","renderActiveFormatName","renderFormatToggles","renderActiveFormats","cloneDeep","uniq","sort","activeTags","values","every","marks","25","50","75","defaultValue","included","onAfterChange","gitInfo","App","isOpen","disclaimerDismissed","displayText","devTools","displayGatherer","toggle","versionCheck","commit","shortHash","clearAll","dismissDisclaimer","_toggleSetting","tempState","_mtgToggler","Dropdown","closeNavbar","titleTemplate","Navbar","expand","expanded","Brand","Nav","navbar","RRNavLink","activeClassName","onToggle","Menu","alignRight","Divider","path","render","onClose","dismissible","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.659f17b8.chunk.js","sourcesContent":["import store from \"store\";\nimport defaultPlugin from \"store/plugins/defaults\";\n\nstore.addPlugin(defaultPlugin);\n\nconst SETTINGS = {\n  \"setting-disclaimerDismissed\": false,\n  \"setting-displayText\": false,\n  \"setting-displayImages\": true,\n  \"setting-devTools\": false,\n  \"setting-displayGatherer\": false\n};\nstore.defaults(SETTINGS);\n\nexport const getSetting = setting => {\n  return store.get(`setting-${setting}`);\n};\n\nexport const setSetting = (setting, value) => {\n  return store.set(`setting-${setting}`, value);\n};\n\nexport const toggleSetting = setting => {\n  const value = getSetting(setting);\n  return setSetting(setting, !value);\n};\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nexport class Home extends Component {\n  componentDidMount = () => {};\n  render() {\n    return (\n      <div className=\"home\">\n        <Helmet title=\"Magic\">\n          <link\n            rel=\"manifest\"\n            href={process.env.PUBLIC_URL + \"/manifest.json\"}\n          />\n        </Helmet>\n        <div className=\"mt-4\">\n          <Button\n            as={NavLink}\n            exact\n            to=\"/planechase\"\n            block\n            variant=\"info\"\n            size=\"lg\"\n          >\n            <i className=\"ms ms-planeswalker ms-4x mx-2 d-block\" />\n            <span className=\"d-block\">Planechase</span>\n          </Button>\n          <Button\n            as={NavLink}\n            exact\n            to=\"/archenemy\"\n            block\n            variant=\"danger\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-arc ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">Archenemy</span>\n          </Button>\n          <Button\n            as={NavLink}\n            exact\n            to=\"/syb\"\n            block\n            variant=\"success\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-s00 ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">SYB</span>\n          </Button>\n          <Button\n            as={NavLink}\n            exact\n            to=\"/formats\"\n            block\n            variant=\"primary\"\n            size=\"lg\"\n          >\n            <i className=\"ss ss-evg ss-3x mx-2 d-block\" />\n            <span className=\"d-block\">Formats</span>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import store from \"store\";\n\nexport const getCurrentCard = prefix => {\n  return store.get(`${prefix}-currentCard`);\n};\n\nexport const setCurrentCard = (prefix, card) => {\n  return store.set(`${prefix}-currentCard`, card);\n};\n\nexport const getRevealedCards = prefix => {\n  return store.get(`${prefix}-revealedCards`);\n};\n\nexport const setRevealedCards = (prefix, cards) => {\n  return store.set(`${prefix}-revealedCards`, cards);\n};\n\nexport const getAdditionalCards = prefix => {\n  return store.get(`${prefix}-additionalCards`);\n};\n\nexport const setAdditionalCards = (prefix, cards) => {\n  return store.set(`${prefix}-additionalCards`, cards);\n};\n\nexport const getScryCards = prefix => {\n  return store.get(`${prefix}-scryCards`);\n};\n\nexport const setScryCards = (prefix, cards) => {\n  return store.set(`${prefix}-scryCards`, cards);\n};\n\nexport const hasCustomProperty = (property, card) => {\n  return card && card.customProperties.find(p => p.name === property);\n};\n\nexport const getCounterType = card => {\n  const property = card.customProperties.find(p => p.name === \"counter\");\n  return property.type;\n};\n\nexport const gathererImageURL = card => {\n  return `https://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=${card.multiverse_ids[0]}&type=card`;\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { gathererImageURL } from \"../../mtg/card.js\";\n\nexport const PlanechaseHelmet = ({ planes }) => {\n  return (\n    <Helmet title=\"Planechase\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/planechase_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/planechase-manifest.json\"}\n      />\n      {planes &&\n        planes.map(p => (\n          <link\n            rel=\"preload\"\n            href={gathererImageURL(p)}\n            as=\"image\"\n            key={p.id}\n          />\n        ))}\n    </Helmet>\n  );\n};\n","import store from \"store\";\nimport uuidv4 from \"uuid/v4\";\n\nexport const moveCard = (prefix, from, to) => {\n  const deck = getCurrentDeck(prefix);\n  deck.splice(to, 0, deck.splice(from, 1)[0]);\n  storeCurrentDeck(prefix, deck);\n};\n\nexport const getOrCreateCurrentDeck = (prefix, cards, reset = false) => {\n  let deck = getCurrentDeck(prefix);\n  if (!deck || reset) {\n    console.log(`Creating New ${prefix} Deck`);\n    // Clone all the cards so that we aren't modifying original objects\n    const clonedCard = JSON.parse(JSON.stringify(cards));\n    // Add Deck Card Id so that each card in the deck has a unique value\n    clonedCard.forEach(c => (c.deck_card_id = uuidv4()));\n    deck = shuffle(clonedCard);\n    store.set(`${prefix}-history`, []);\n    storeCurrentDeck(prefix, deck);\n  }\n  return deck;\n};\n\nexport const getCurrentDeck = prefix => {\n  return store.get(`${prefix}-deck`);\n};\n\nexport const storeCurrentDeck = (prefix, deck) => {\n  return store.set(`${prefix}-deck`, deck);\n};\n\nexport const drawCard = prefix => {\n  const deck = getCurrentDeck(prefix);\n  const card = deck.shift();\n  if (card) {\n    updateHistory(prefix, card);\n  }\n  storeCurrentDeck(prefix, deck);\n  return card;\n};\n\nexport const updateHistory = (prefix, card) => {\n  const history = store.get(`${prefix}-history`);\n  history.push(card);\n  store.set(`${prefix}-history`, history);\n};\n\nexport const getHistory = (prefix, card) => {\n  return store.get(`${prefix}-history`);\n};\n\nexport const undoDraw = prefix => {\n  const history = store.get(`${prefix}-history`);\n  const card = history.pop();\n  if (card) {\n    addCardsToTop(prefix, [card]);\n  }\n  store.set(`${prefix}-history`, history);\n  return history[history.length - 1];\n};\n\nexport const addCardsToTop = (prefix, topCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, topCards.concat(deck));\n};\n\nexport const addCardsToBottom = (prefix, bottomCards) => {\n  const deck = getCurrentDeck(prefix);\n  storeCurrentDeck(prefix, deck.concat(bottomCards));\n};\n\nexport const deckSize = prefix => {\n  return getCurrentDeck(prefix).length;\n};\n\nexport const findCard = (prefix, card) => {\n  return findCardByDeckCardId(prefix, card.deck_card_id);\n};\n\nexport const findCardByDeckCardId = (prefix, deckCardId) => {\n  const deck = getCurrentDeck(prefix);\n  return deck.find(c => c.deck_card_id === deckCardId);\n};\n\nexport const findAndPutOnTop = (prefix, deckCardId) => {\n  const tmpCard = findCardByDeckCardId(prefix, deckCardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToTop(prefix, [tmpCard]);\n  }\n};\n\nexport const findAndPutOnBottom = (prefix, deckCardId) => {\n  const tmpCard = findCardByDeckCardId(prefix, deckCardId);\n\n  if (tmpCard) {\n    removeCards(prefix, [tmpCard]);\n    addCardsToBottom(prefix, [tmpCard]);\n  }\n};\n\nexport const removeCards = (prefix, cardsToRemove) => {\n  const deck = getCurrentDeck(prefix);\n  const filteredDeck = deck.filter(\n    c => !cardsToRemove.find(r => r.deck_card_id === c.deck_card_id)\n  );\n  storeCurrentDeck(prefix, filteredDeck);\n};\n\nexport const revealCards = (prefix, numReveal, onlyPlanes = false) => {\n  const revealedCards = [];\n  const deck = getCurrentDeck(prefix);\n  const count = Math.min(deck.length, numReveal);\n\n  let planes = 0;\n  let tmpCount = count;\n  for (let i = 0; i < tmpCount; i++) {\n    revealedCards.push(deck[i]);\n\n    if (onlyPlanes) {\n      if (deck[i].type_line.search(\"Plane\") >= 0) {\n        planes++;\n      }\n\n      if (i === tmpCount - 1 && planes < count) {\n        tmpCount++;\n      }\n    }\n  }\n\n  return revealedCards;\n};\n\nexport const shuffle = array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\n// \tfunction showHistory(){\n// \t\tforeach( $_SESSION[ $this->prefix . 'history'] as $card){\n// \t\t\techo Card::displayHoverCardName($card, '', 'card');\n// \t\t}\n//\n// \t}\n//\n// \tfunction showRemainingCards(){\n// \t\tforeach(  $_SESSION[ $this->prefix . 'deck'] as $card){\n// \t\t echo Card::displayHoverCardName($card, $classes='');\n// \t\t}\n// \t}\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport store from \"store\";\n// TODO use expire store\nexport const internet = axios.create();\n\nconst PLANES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Aplane+or+t%3Aphenomenon&unique=cards\";\n\nconst SCHEMES_URL =\n  \"https://api.scryfall.com/cards/search?include_extras=1&q=t%3Ascheme&unique=cards\";\n\nexport const getAllPlanechaseCards = async () => {\n  try {\n    let planes = cached(\"planes\");\n    if (!planes) {\n      console.log(\"Loading from Axios\");\n      let response = await internet.get(PLANES_URL);\n      planes = response.data.data;\n      planes = planes.map(p => addAdditionalProperties(p));\n      cache(\"planes\", planes);\n      // TODO use the expire store parameter\n    } else {\n      console.log(\"Loaded from store\");\n    }\n    return planes;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const getAllArchenemyCards = async () => {\n  try {\n    let schemes = cached(\"schemes\");\n    if (!schemes) {\n      console.log(\"Loading from Axios\");\n      let response = await internet.get(SCHEMES_URL);\n      schemes = response.data.data;\n      schemes = schemes.map(p => addAdditionalProperties(p));\n      cache(\"schemes\", schemes);\n      // TODO use the expire store parameter\n    } else {\n      console.log(\"Loaded from store\");\n    }\n    return schemes;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nfunction addAdditionalProperties(card) {\n  const properties = {\n    Aretopolis: [{ name: \"counter\", type: \"Scroll\" }],\n    \"Chaotic Aether\": [{ name: \"all-chaos\" }],\n    \"Interplanar Tunnel\": [{ name: \"top-5\" }],\n    \"Kilnspire District\": [{ name: \"counter\", type: \"Charge\" }],\n    \"Mount Keralia\": [{ name: \"counter\", type: \"Pressure\" }],\n    \"Naar Isle\": [{ name: \"counter\", type: \"Flame\" }],\n    \"Spatial Merging\": [{ name: \"two-planes\" }],\n    \"Stairs to Infinity\": [{ name: \"chaos-trigger\" }, { name: \"scry-1\" }],\n    \"Pools of Becoming\": [{ name: \"chaos-trigger\" }, { name: \"triple-chaos\" }],\n    \"Your Inescapable Doom\": [\n      { name: \"unabandonable\" },\n      { name: \"counter\", type: \"Doom\" }\n    ]\n  };\n\n  if (properties[card.name]) {\n    card.customProperties = properties[card.name];\n  } else {\n    card.customProperties = [];\n  }\n\n  card.oracle_html = createMarkup(card.oracle_text);\n\n  return card;\n}\n\nfunction createMarkup(text) {\n  text = text.replace(/\\r\\n/g, \"<br />\").replace(/[\\r\\n]/g, \"<br />\");\n  text = text.replace(/{CHAOS}/g, '<i class=\"ms ms-chaos\"></i>');\n  text = text.replace(/CHAOS/g, '<i class=\"ms ms-chaos\"></i>');\n  text = text.replace(/{W}/g, '<i class=\"ms ms-w ms-cost\"></i>');\n  text = text.replace(/{U}/g, '<i class=\"ms ms-u ms-cost\"></i>');\n  text = text.replace(/{B}/g, '<i class=\"ms ms-b ms-cost\"></i>');\n  text = text.replace(/{R}/g, '<i class=\"ms ms-r ms-cost\"></i>');\n  text = text.replace(/{G}/g, '<i class=\"ms ms-g ms-cost\"></i>');\n  text = text.replace(/\\{1\\}/g, '<i class=\"ms ms-1 ms-cost\"></i>');\n  text = text.replace(/\\{2\\}/g, '<i class=\"ms ms-2 ms-cost\"></i>');\n  text = text.replace(/\\{3\\}/g, '<i class=\"ms ms-3 ms-cost\"></i>');\n  text = text.replace(/\\{T\\}/g, '<i class=\"ms ms-tap\"></i>');\n  text = text.replace(/{X}/g, '<i class=\"ms ms-x ms-cost\"></i>');\n  text = text.replace(/X/g, '<i class=\"ms ms-x\"></i>');\n  text = text.replace(/\\((.*)\\)/g, \"<small><em>($1)</em></small>\");\n  return { __html: text };\n}\n\nfunction cached(prefix) {\n  let data = store.get(prefix);\n  let cacheDate = store.get(`${prefix}-fetched`);\n  if (data && !old(cacheDate)) {\n    return data;\n  }\n  return null;\n}\n\nfunction cache(prefix, data) {\n  store.set(prefix, data);\n  store.set(`${prefix}-fetched`, moment().unix());\n}\n\nfunction old(time) {\n  return time && moment().diff(moment.unix(time), \"days\") > 5;\n}\n","import React, { Component } from \"react\";\n\nexport class Loading extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dotsCount: props.start || 0\n    };\n  }\n\n  componentDidMount() {\n    const { interval = 500 } = this.props;\n\n    this.dotsInterval = setInterval(() => {\n      this.setState({ dotsCount: this.state.dotsCount + 1 });\n    }, interval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.dotsInterval);\n  }\n\n  getDotString(count, max, char = \".\") {\n    let numDots = count % (max + 1);\n    let dots = \"\";\n\n    for (let i = 0; i < numDots; i++) {\n      dots += char;\n    }\n\n    return dots;\n  }\n\n  render() {\n    const { label = \"Loading\", className, numDots = 3 } = this.props;\n    const { dotsCount } = this.state;\n    let dots = this.getDotString(dotsCount, numDots, \".\");\n    let classes = `loading-dots ${className}`;\n\n    return (\n      <span className={classes}>\n        {label}\n        {dots}\n      </span>\n    );\n  }\n}\n","import React, { useState } from \"react\";\n\nimport { Button, Col, Modal } from \"react-bootstrap\";\n\nexport const Confirm = ({\n  onConfirm,\n  triggerButtonParams,\n  triggerText,\n  headerText,\n  bodyText,\n  confirmText,\n  confirmVariant\n}) => {\n  const [open, setOpen] = useState(false);\n  const close = confirmed => {\n    setOpen(false);\n    if (confirmed) {\n      onConfirm();\n    }\n  };\n\n  const header = (\n    <Modal.Header>\n      <Modal.Title>{headerText || \"Confirm?\"}</Modal.Title>\n    </Modal.Header>\n  );\n\n  const body = <Modal.Body>{bodyText || \"Confirm?\"}</Modal.Body>;\n\n  return (\n    <>\n      <Modal\n        show={open}\n        onHide={close}\n        animation={true}\n        contentClassName=\"bg-dark text-light noselect\"\n      >\n        {header}\n        {bodyText && body}\n        <Modal.Footer>\n          <Col>\n            <Button variant=\"secondary\" onClick={() => close(false)} block>\n              Close\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              variant={confirmVariant || \"primary\"}\n              onClick={() => close(true)}\n              block\n            >\n              {confirmText || \"Save\"}\n            </Button>\n          </Col>\n        </Modal.Footer>\n      </Modal>\n      <Button onClick={() => setOpen(true)} {...triggerButtonParams}>\n        {triggerText}\n      </Button>\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/planechase-back.dbcf0de1.jpg\";","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { getCounterType } from \"../../mtg/card.js\";\n\nexport const Counter = ({ card }) => {\n  const [counter, setCounter] = useState(card?.counter || 0);\n  const type = getCounterType(card);\n  const incrementCounter = () => {\n    card.counter = counter + 1;\n    setCounter(counter + 1);\n  };\n  return (\n    <div>\n      <h1 className=\"text-shadow noselect\">{counter}</h1>\n      <Button\n        onClick={incrementCounter}\n        variant=\"dark\"\n        size=\"lg\"\n        className=\"btn-translucent\"\n      >\n        <h3 className=\"mb-0\">Add {type} Counter</h3>\n      </Button>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Card, ListGroup, Modal } from \"react-bootstrap\";\nimport { gathererImageURL } from \"../../mtg/card\";\nimport back from \"../../images/planechase-back.jpg\";\nimport { Counter } from \"./Counter\";\nimport \"./planes.scss\";\n\nimport { hasCustomProperty } from \"../../mtg/card.js\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Plane extends Component {\n  state = {\n    modalOpen: false,\n    fullscreen: false\n  };\n\n  toggleModal = () => {\n    console.log(\"Toggle Modal\");\n    this.setState({ modalOpen: !this.state.modalOpen });\n  };\n\n  toggleFullScreen = () => {\n    console.log(\"Toggle FullScreen\");\n    this.setState({ fullscreen: !this.state.fullscreen });\n  };\n\n  render() {\n    const { listDisplay, card, children } = this.props;\n    if (listDisplay) {\n      return (\n        <>\n          <ListGroup.Item variant=\"dark\" onClick={this.toggleModal}>\n            <div>{card.name}</div>\n          </ListGroup.Item>\n          <Modal\n            show={this.state.modalOpen}\n            onHide={this.toggleModal}\n            size=\"md\"\n            backdrop={true}\n            dialogClassName=\"modal-content-no-border\"\n          >\n            <Modal.Body className=\"p-0\" centered=\"true\">\n              <Plane card={card} />\n              {children}\n            </Modal.Body>\n          </Modal>\n        </>\n      );\n    } else {\n      return (\n        <Card bg=\"black\" text=\"light\" className=\"mtg-plane-card\">\n          {this.renderImage()}\n          {this.renderCounter()}\n          {this.renderChildren()}\n          {this.renderBody()}\n          {this.renderActions()}\n        </Card>\n      );\n    }\n  }\n\n  renderBody() {\n    const text = this.renderText();\n    const hasBody = text;\n\n    return hasBody && <Card.Body>{text}</Card.Body>;\n  }\n\n  renderCounter() {\n    const { card, renderActions } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    const hasCounters = hasCustomProperty(\"counter\", card);\n    if (renderActions && hasCounters) {\n      if (displayImages) {\n        return (\n          <div onDoubleClick={this.toggleFullScreen}>\n            <Card.ImgOverlay className=\"text-center plane-overlay counter-overlay\">\n              <Card.Title className=\"text-center\">\n                <Counter card={card} />\n              </Card.Title>\n            </Card.ImgOverlay>\n          </div>\n        );\n      } else {\n        return (\n          <Card.Body className=\"text-center pb-0\">\n            <Counter card={card} />\n          </Card.Body>\n        );\n      }\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    if (children) {\n      if (displayImages) {\n        return (\n          <div onDoubleClick={this.toggleFullScreen}>\n            <Card.ImgOverlay className=\"text-center plane-overlay child-overlay\">\n              <Card.Title className=\"text-center\">{children}</Card.Title>\n            </Card.ImgOverlay>\n          </div>\n        );\n      } else {\n        return <Card.Body className=\"text-center pb-0\">{children}</Card.Body>;\n      }\n    }\n  }\n\n  renderActions() {\n    const { card } = this.props;\n    const displayGatherer = getSetting(\"displayGatherer\");\n    if (displayGatherer && card) {\n      return (\n        <Card.Footer>\n          <Card.Link\n            href={card.related_uris[\"gatherer\"]}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatherer\n          </Card.Link>\n        </Card.Footer>\n      );\n    }\n  }\n\n  renderText() {\n    const { card } = this.props;\n    const displayText = getSetting(\"displayText\");\n    if (displayText) {\n      if (card) {\n        return (\n          <>\n            <Card.Title>\n              <h5>{card.name}</h5>\n            </Card.Title>\n            <Card.Subtitle>{card.type_line}</Card.Subtitle>\n            <Card.Text dangerouslySetInnerHTML={card.oracle_html} />\n          </>\n        );\n      } else {\n        return <Card.Title>None</Card.Title>;\n      }\n    }\n  }\n\n  renderCardImage = () => (\n    <Card.Img\n      variant=\"top\"\n      width=\"100%\"\n      src={this.imageURI()}\n      className=\"mtg-card mtg-card-plane\"\n    />\n  );\n\n  renderImage() {\n    const displayImages = getSetting(\"displayImages\");\n    if (displayImages) {\n      return (\n        <>\n          <div onDoubleClick={this.toggleFullScreen}>\n            {this.renderCardImage()}\n          </div>\n          <Modal\n            show={this.state.fullscreen}\n            onHide={this.toggleFullScreen}\n            backdrop={true}\n            dialogClassName=\"modal-content-full bg-transparent\"\n            centered={true}\n          >\n            <Modal.Body\n              className=\"p-0\"\n              centered=\"true\"\n              onClick={this.toggleFullScreen}\n            >\n              {this.renderCardImage()}\n            </Modal.Body>\n          </Modal>\n        </>\n      );\n    }\n  }\n\n  imageURI() {\n    const { card } = this.props;\n    if (card) {\n      // Use   Scryfall and rotate or use Gatherer\n      // scryfall (rotated) card.image_uris[\"border_crop\"]\n      return gathererImageURL(card);\n    } else {\n      return back;\n    }\n  }\n}\n","import React from \"react\";\nimport ReactDice from \"react-dice-complete\";\nimport \"react-dice-complete/dist/react-dice-complete.css\";\nimport \"./planar-die.scss\";\nimport noop from \"lodash/noop\";\n\nconst translateRoll = roll => {\n  switch (roll) {\n    case 1:\n      return \"Planeswalk\";\n    case 6:\n      return \"Chaos\";\n    default:\n      return \"Blank\";\n  }\n};\n\nexport const PlanarDie = ({ rollDone = noop }) => {\n  return (\n    <div className=\"planar\">\n      <ReactDice\n        numDice={1}\n        rollDone={r => rollDone(translateRoll(r))}\n        defaultRoll={1}\n        outline={true}\n        outlineColor=\"#808080\"\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport merge from \"lodash/merge\";\n\nexport const DoubleFaceIcon = ({ enabled, backdrop = false, style = {} }) => {\n  const backdropStyle = backdrop ? { backgroundColor: \"#ffffff\" } : {};\n  return (\n    <span>\n      {enabled ? (\n        <i\n          className=\"ms ms-dfc ms-dfc-day\"\n          style={merge({}, backdropStyle, style)}\n        />\n      ) : (\n        <i\n          className=\"ms ms-dfc ms-dfc-night\"\n          style={merge({}, backdropStyle, style)}\n        />\n      )}\n    </span>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport { DoubleFaceIcon } from \"./DoubleFaceIcon\";\n\nexport const LoyaltyDownButton = props => (\n  <Button {...props} variant=\"secondary\">\n    <i className=\"ms ms-loyalty-down ms-loyalty-1 ms-2x\" />\n  </Button>\n);\nexport const LoyaltyUpButton = props => (\n  <Button {...props} variant=\"secondary\">\n    <i className=\"ms ms-loyalty-up ms-loyalty-1 ms-2x\" />\n  </Button>\n);\n\nexport const LoyaltyButtonGroup = ({\n  upProps,\n  downProps,\n  reverse,\n  ...props\n}) => (\n  <ButtonGroup {...props}>\n    {reverse ? (\n      <>\n        <LoyaltyUpButton {...upProps} />\n        <LoyaltyDownButton {...downProps} />\n      </>\n    ) : (\n      <>\n        <LoyaltyDownButton {...downProps} />\n        <LoyaltyUpButton {...upProps} />\n      </>\n    )}\n  </ButtonGroup>\n);\n\nexport const UnTapButton = props => (\n  <Button {...props} variant=\"secondary\">\n    <i className=\"ms ms-untap ms-2x ss-mythic ss-grad\" />\n  </Button>\n);\n\nexport const TapButton = props => (\n  <Button {...props} variant=\"secondary\">\n    <i className=\"ms ms-tap ms-2x ss-mythic ss-grad\" />\n  </Button>\n);\n\nexport const TapButtonGroup = ({ unTapProps, tapProps, reverse, ...props }) => (\n  <ButtonGroup {...props}>\n    {reverse ? (\n      <>\n        <TapButton {...tapProps} />\n        <UnTapButton {...unTapProps} />\n      </>\n    ) : (\n      <>\n        <UnTapButton {...unTapProps} />\n        <TapButton {...tapProps} />\n      </>\n    )}\n  </ButtonGroup>\n);\n\nexport const DoubleFaceButton = ({ enabled, text, ...props }) => (\n  <Button {...props} block variant=\"secondary\">\n    <span className=\"mr-2\">{text}</span>\n    <DoubleFaceIcon enabled={enabled} backdrop={true} />\n  </Button>\n);\n\nexport const DoubleFaceHighlighButton = ({ enabled, text, ...props }) => (\n  <Button size=\"sm\" block {...props} variant={enabled ? \"info\" : \"secondary\"}>\n    <div className=\"float-left\">\n      {enabled ? (\n        <i className=\"ms ms-dfc ms-dfc-day text-light\" />\n      ) : (\n        <i className=\"ms ms-dfc ms-dfc-night text-dark\" />\n      )}\n    </div>\n    <div className=\"d-inline\">{text}</div>\n  </Button>\n);\n\nexport const TenthEditionButton = props => (\n  <Button variant=\"danger\" {...props}>\n    <i className=\"ss ss-x ss-10e ss-rare ss-grad ss-2x\" />\n  </Button>\n);\n","import React, { Component } from \"react\";\nimport {\n  Alert,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Fade,\n  ListGroup,\n  Modal\n} from \"react-bootstrap\";\nimport { PlanechaseHelmet } from \"./Helmet\";\nimport {\n  getCurrentDeck,\n  getOrCreateCurrentDeck,\n  drawCard,\n  undoDraw,\n  revealCards,\n  addCardsToBottom,\n  removeCards,\n  shuffle,\n  addCardsToTop,\n  getHistory,\n  updateHistory,\n  findAndPutOnBottom,\n  findAndPutOnTop,\n  moveCard\n} from \"../../mtg/deck.js\";\nimport {\n  getCurrentCard,\n  setCurrentCard,\n  hasCustomProperty,\n  setRevealedCards,\n  getRevealedCards,\n  setAdditionalCards,\n  getAdditionalCards,\n  setScryCards,\n  getScryCards\n} from \"../../mtg/card.js\";\nimport { getAllPlanechaseCards } from \"../../util/api.js\";\nimport { Loading } from \"../../components/Loading\";\nimport { Confirm } from \"../../components/Confirm\";\nimport { Plane } from \"../../components/magic/Plane\";\nimport { getSetting } from \"../../util/settings.js\";\nimport { PlanarDie } from \"../../components/magic/planar-die/PlanarDie\";\nimport {\n  DoubleFaceButton,\n  LoyaltyButtonGroup,\n  TapButtonGroup,\n  TenthEditionButton\n} from \"../../components/magic/Buttons\";\n\nexport class Planechase extends Component {\n  state = {\n    loading: false,\n    planes: [],\n    deck: null,\n    currentCard: null,\n    revealedCards: [],\n    additionalCards: [],\n    scryCards: [],\n    tripleChaosModalOpen: false,\n    scryModalOpen: false,\n    planeswalkDisabled: false,\n    showHistory: false,\n    showDeck: false,\n    showDeckImages: false,\n    showPlanarDie: true\n  };\n\n  componentDidMount = async () => {\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes);\n    const currentCard = getCurrentCard(\"planechase\");\n    const revealedCards = getRevealedCards(\"planechase\") || [];\n    const scryCards = getScryCards(\"planechase\") || [];\n    const additionalCards = getAdditionalCards(\"planechase\");\n    const planeswalkDisabled = !!hasCustomProperty(\"top-5\", currentCard);\n    const scryModalOpen =\n      scryCards.length > 0 && !!hasCustomProperty(\"scry-1\", currentCard);\n    this.setState({\n      planes,\n      loading: false,\n      deck,\n      currentCard,\n      revealedCards,\n      additionalCards,\n      scryCards,\n      planeswalkDisabled,\n      scryModalOpen\n    });\n  };\n\n  refreshDeck = () => {\n    const deck = getCurrentDeck(\"planechase\");\n    this.setState({ deck });\n  };\n\n  planeswalk = () => {\n    const currentCard = drawCard(\"planechase\");\n    setCurrentCard(\"planechase\", currentCard);\n    let revealedCards = [];\n    let additionalCards = [];\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      revealedCards = revealCards(\"planechase\", 2, true);\n      removeCards(\"planechase\", revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      const revealedPhenomenon = revealedCards.filter(\n        c => c.type_line.search(\"Phenomenon\") >= 0\n      );\n      revealedPlanes.forEach(c => updateHistory(\"planechase\", c));\n      addCardsToBottom(\"planechase\", revealedPhenomenon);\n      revealedCards = [];\n      additionalCards = revealedPlanes;\n    }\n\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      revealedCards = revealCards(\"planechase\", 5, true);\n      removeCards(\"planechase\", revealedCards);\n      this.setState({ planeswalkDisabled: true });\n    }\n\n    setRevealedCards(\"planechase\", revealedCards);\n    setAdditionalCards(\"planechase\", additionalCards);\n    this.refreshDeck();\n    this.setState({ currentCard, revealedCards, additionalCards });\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    const planes = await getAllPlanechaseCards();\n    const deck = getOrCreateCurrentDeck(\"planechase\", planes, true);\n    const currentCard = setCurrentCard(\"planechase\", null);\n    const revealedCards = setRevealedCards(\"planechase\", []);\n    const scryCards = setScryCards(\"planechase\", []);\n    const additionalCards = setAdditionalCards(\"planechase\", []);\n    this.setState({\n      planes,\n      loading: false,\n      deck,\n      currentCard,\n      revealedCards,\n      scryCards,\n      additionalCards,\n      planeswalkDisabled: false,\n      scryModalOpen: false\n    });\n  };\n\n  undo = async () => {\n    const currentCard = undoDraw(\"planechase\");\n    this.refreshDeck();\n    this.setState({ currentCard });\n  };\n\n  triggerChaos = card => {\n    const { scryCards } = this.state;\n    console.log(\"Chaos Triggered\");\n    if (hasCustomProperty(\"triple-chaos\", card)) {\n      const newRevealedCards = revealCards(\"planechase\", 3, true);\n      removeCards(\"planechase\", newRevealedCards);\n      const shuffledCards = shuffle(newRevealedCards.slice());\n      addCardsToBottom(\"planechase\", shuffledCards);\n      this.refreshDeck();\n      setRevealedCards(\"planechase\", newRevealedCards);\n      this.setState({\n        revealedCards: newRevealedCards,\n        tripleChaosModalOpen: true\n      });\n    }\n\n    if (hasCustomProperty(\"scry-1\", card)) {\n      if (!scryCards || scryCards.length === 0) {\n        const newScryCards = revealCards(\"planechase\", 1, false);\n        removeCards(\"planechase\", newScryCards);\n        setScryCards(\"planechase\", newScryCards);\n        this.setState({ scryCards: newScryCards });\n      }\n      this.setState({ scryModalOpen: true });\n    }\n  };\n\n  render() {\n    const {\n      loading,\n      planes,\n      deck,\n      currentCard,\n      planeswalkDisabled,\n      showPlanarDie\n    } = this.state;\n\n    return (\n      <div className=\"planechase\">\n        <PlanechaseHelmet planes={planes} />\n        <div className=\"fixed-top mt-1 ml-1 w-25 text-left\">\n          <Button\n            onClick={this.planeswalk}\n            className=\"mb-2\"\n            variant=\"success\"\n            disabled={planeswalkDisabled || loading}\n            block\n          >\n            <i className=\"ms ms-planeswalker ms-2x mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Planeswalk</span>\n          </Button>\n        </div>\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : (\n          <div className=\"mb-2\">\n            {currentCard ? (\n              <Fade key={currentCard.deck_card_id} timeout={100}>\n                <Plane card={currentCard} renderActions=\"true\">\n                  {this.renderChaos(currentCard)}\n                </Plane>\n              </Fade>\n            ) : (\n              <Plane />\n            )}\n          </div>\n        )}\n        {this.renderTwoPlanes()}\n        {this.renderFivePlanes()}\n        {this.renderTripleChaosModal()}\n        {this.renderScryModal()}\n        {this.renderHistory()}\n        <p className=\"text-center my-3 noselect\">\n          There are {deck ? deck.length : 0} cards remaining.\n        </p>\n        <Confirm\n          onConfirm={this.reset}\n          headerText=\"Reset Planes?\"\n          triggerText=\"Reset\"\n          confirmText=\"Reset\"\n          confirmVariant=\"danger\"\n          triggerButtonParams={{ variant: \"danger\", block: true }}\n        />\n        {this.renderDevTools()}\n        {showPlanarDie && !planeswalkDisabled && (\n          <div\n            className=\"position-fixed\"\n            style={{ bottom: \"5px\", right: \"5px\" }}\n          >\n            <PlanarDie rollDone={face => console.log(`Rolled: ${face}`)} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderDevTools = () => {\n    const devTools = getSetting(\"devTools\");\n    if (devTools) {\n      return (\n        <div className=\"my-4\">\n          <h5 className=\"text-center noselect\">Dev Tools</h5>\n          <Button onClick={this.undo} variant=\"warning\" block>\n            Undo\n          </Button>\n          {this.renderDeck()}\n          <DoubleFaceButton\n            text=\"Planar Die\"\n            onClick={this.togglePlanarDie}\n            enabled={this.state.showPlanarDie}\n          />\n        </div>\n      );\n    }\n  };\n\n  togglePlanarDie = () => {\n    this.setState({ showPlanarDie: !this.state.showPlanarDie });\n  };\n\n  toggleDeck = () => {\n    this.setState({ showDeck: !this.state.showDeck });\n  };\n\n  toggleDeckImages = () => {\n    this.setState({ showDeckImages: !this.state.showDeckImages });\n  };\n\n  manipulateDeck = () => {\n    this.refreshDeck();\n  };\n\n  renderDeck = () => {\n    const { deck, showDeck, showDeckImages } = this.state;\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleDeck} variant=\"secondary\" block>\n          {showDeck ? \"Hide\" : \"Show\"} Deck\n        </Button>\n        <Fade in={showDeck}>\n          <div>\n            {showDeck && (\n              <>\n                <Button\n                  onClick={this.toggleDeckImages}\n                  variant=\"secondary\"\n                  block\n                >\n                  {showDeckImages ? \"Hide\" : \"Show\"} Full Card\n                </Button>\n                <ListGroup>\n                  {deck.map((p, i) => (\n                    <React.Fragment key={p.deck_card_id}>\n                      <Plane card={p} listDisplay={!showDeckImages} />\n                      <ListGroup.Item className=\"text-center justify-content-center d-flex\">\n                        <ButtonToolbar>\n                          <LoyaltyButtonGroup\n                            reverse\n                            downProps={{\n                              disabled: i === deck.length - 1,\n                              onClick: () =>\n                                this.manipulateDeck(\n                                  moveCard(\"planechase\", i, i + 1)\n                                )\n                            }}\n                            upProps={{\n                              disabled: i === 0,\n                              onClick: () =>\n                                this.manipulateDeck(\n                                  moveCard(\"planechase\", i, i - 1)\n                                )\n                            }}\n                          />\n                          <TapButtonGroup\n                            className=\"ml-2\"\n                            unTapProps={{\n                              disabled: i === 0,\n                              onClick: () =>\n                                this.manipulateDeck(\n                                  findAndPutOnTop(\"planechase\", p.deck_card_id)\n                                )\n                            }}\n                            tapProps={{\n                              disabled: i === deck.length - 1,\n                              onClick: () =>\n                                this.manipulateDeck(\n                                  findAndPutOnBottom(\n                                    \"planechase\",\n                                    p.deck_card_id\n                                  )\n                                )\n                            }}\n                          />\n\n                          <ButtonGroup className=\"ml-2\">\n                            <TenthEditionButton\n                              onClick={() =>\n                                this.manipulateDeck(\n                                  removeCards(\"planechase\", [p])\n                                )\n                              }\n                            />\n                          </ButtonGroup>\n                        </ButtonToolbar>\n                      </ListGroup.Item>\n                    </React.Fragment>\n                  ))}\n                </ListGroup>\n              </>\n            )}\n          </div>\n        </Fade>\n      </div>\n    );\n  };\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  };\n\n  renderHistory = () => {\n    const { showHistory } = this.state;\n    const history = getHistory(\"planechase\");\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleHistory} variant=\"secondary\" block>\n          {showHistory ? \"Hide\" : \"Show\"} History\n        </Button>\n        <Fade in={showHistory}>\n          <div>\n            {showHistory && history && (\n              <ListGroup>\n                {history.reverse().map(p => (\n                  <Plane card={p} key={p.deck_card_id} listDisplay={true} />\n                ))}\n              </ListGroup>\n            )}\n          </div>\n        </Fade>\n      </div>\n    );\n  };\n\n  renderChaos(card) {\n    const hasChaos = hasCustomProperty(\"chaos-trigger\", card);\n    if (hasChaos) {\n      return (\n        <Button\n          onClick={() => this.triggerChaos(card)}\n          variant=\"info\"\n          size=\"lg\"\n          className=\"btn-translucent\"\n        >\n          <i className=\"ms ms-chaos ms-2x mx-2\" />\n          <span className=\"mx-2 d-none d-md-inline\">Trigger Chaos</span>\n        </Button>\n      );\n    }\n  }\n\n  renderTwoPlanes() {\n    const { currentCard, additionalCards } = this.state;\n    if (hasCustomProperty(\"two-planes\", currentCard)) {\n      const revealedPlanes = additionalCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      // TODO chaos etc\n      return (\n        <div>\n          <Alert variant=\"info\" className=\"text-center mb-0\">\n            <i className=\"ms ms-planeswalker mx-2\" />\n            You Are On Both Planes\n            <i className=\"ms ms-planeswalker mx-2\" />\n          </Alert>\n          {revealedPlanes.map(c => (\n            <React.Fragment key={c.deck_card_id}>\n              <Plane card={c} renderActions=\"true\">\n                {this.renderChaos(c)}\n              </Plane>\n            </React.Fragment>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  selectPlane = card => {\n    const { revealedCards } = this.state;\n    removeCards(\"planechase\", revealedCards);\n    addCardsToTop(\"planechase\", [card]);\n    const restCards = revealedCards.filter(\n      c => c.deck_card_id !== card.deck_card_id\n    );\n    const shuffledCards = shuffle(restCards.slice());\n    addCardsToBottom(\"planechase\", shuffledCards);\n    setRevealedCards(\"planechase\", []);\n    this.setState({ planeswalkDisabled: false, revealedCards: [] });\n    this.planeswalk();\n  };\n\n  renderFivePlanes() {\n    const { currentCard, revealedCards } = this.state;\n    if (hasCustomProperty(\"top-5\", currentCard)) {\n      console.log(revealedCards);\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      console.log(revealedPlanes);\n      // TODO Countes, chaos etc\n      return (\n        <div>\n          <Alert variant=\"info\" className=\"text-center mb-0\">\n            <i className=\"ms ms-planeswalker mx-2\" />\n            Pick a Plane to Planeswalk To\n            <i className=\"ms ms-planeswalker mx-2\" />\n          </Alert>\n          {revealedPlanes.map(c => (\n            <div key={c.deck_card_id}>\n              <Plane card={c}>\n                <Button\n                  onClick={() => this.selectPlane(c)}\n                  variant=\"primary\"\n                  className=\"btn-translucent\"\n                  size=\"lg\"\n                >\n                  <i className=\"ms ms-planeswalker mx-2\" />\n                  <span className=\"mx-2\">Planeswalk</span>\n                </Button>\n              </Plane>\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  _tripleChaosModalClose = () => {\n    setRevealedCards(\"planechase\", []);\n    this.setState({\n      tripleChaosModalOpen: false,\n      revealedCards: []\n    });\n  };\n\n  _tripleChaosModalToggle = () => {\n    if (this.state.tripleChaosModalOpen) {\n      this._tripleChaosModalClose();\n    }\n  };\n\n  renderTripleChaosModal() {\n    const { revealedCards, tripleChaosModalOpen } = this.state;\n    if (revealedCards && tripleChaosModalOpen) {\n      const revealedPlanes = revealedCards.filter(\n        c => c.type_line.search(\"Plane\") >= 0\n      );\n      return (\n        <Modal\n          show={!!tripleChaosModalOpen}\n          onHide={this._tripleChaosModalToggle}\n          size=\"md\"\n          backdrop={true}\n          dialogClassName=\"bg-secondary\"\n        >\n          <Modal.Header className=\"flex-column text-center text-white noselect\">\n            <div className=\"modal-title h5 mx-auto\">\n              <i className=\"ms ms-chaos mr-1\" />\n              <i className=\"ms ms-chaos mr-1\" />\n              <i className=\"ms ms-chaos mr-1\" />\n              <span className=\"mx-1\">Triple Chaos</span>\n              <i className=\"ms ms-chaos ml-1\" />\n              <i className=\"ms ms-chaos ml-1\" />\n              <i className=\"ms ms-chaos ml-1\" />\n            </div>\n            <div className=\"mx-auto\">\n              <small className=\"text-center\">You Pick Order</small>\n            </div>\n          </Modal.Header>\n          <Modal.Body className=\"text-center\">\n            {revealedPlanes.map(c => (\n              <React.Fragment key={c.deck_card_id}>\n                <Plane card={c}>{this.renderChaos(c)}</Plane>\n              </React.Fragment>\n            ))}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"info\"\n              block\n              aria-label=\"Close\"\n              onClick={this._tripleChaosModalClose}\n            >\n              Done\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      );\n    }\n  }\n\n  _scryModalClose = () => {\n    setScryCards(\"planechase\", []);\n    this.setState({\n      scryModalOpen: false,\n      scryCards: []\n    });\n  };\n\n  _scryTop = () => {\n    const { scryCards } = this.state;\n    addCardsToTop(\"planechase\", scryCards);\n    console.log(\"Scry Top\", scryCards);\n    this.refreshDeck();\n    setScryCards(\"planechase\", []);\n    this.setState({ scryCards: [], scryModalOpen: false });\n  };\n\n  _scryBottom = () => {\n    const { scryCards } = this.state;\n    addCardsToBottom(\"planechase\", scryCards);\n    console.log(\"Scry Bottom\", scryCards);\n    this.refreshDeck();\n    setScryCards(\"planechase\", []);\n    this.setState({ scryCards: [], scryModalOpen: false });\n  };\n\n  renderScryModal = () => {\n    const { scryCards, scryModalOpen } = this.state;\n    if (scryCards && scryModalOpen) {\n      return (\n        <Modal\n          show={!!scryModalOpen}\n          size=\"md\"\n          dialogClassName=\"bg-secondary\"\n          variant=\"secondary\"\n          backdrop=\"static\"\n        >\n          <Modal.Header className=\"justify-content-center text-white noselect\">\n            <Modal.Title>\n              <i className=\"ms ms-chaos mx-4\" />\n              Scry Card\n              <i className=\"ms ms-chaos mx-4\" />\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Button variant=\"info\" block onClick={this._scryTop}>\n              Top\n            </Button>\n            {scryCards.map(c => (\n              <Plane card={c} key={c.deck_card_id} />\n            ))}\n            <Button variant=\"info\" block onClick={this._scryBottom}>\n              Bottom\n            </Button>\n          </Modal.Body>\n        </Modal>\n      );\n    }\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport const ArchenemyHelmet = ({ schemes }) => {\n  return (\n    <Helmet title=\"Archenemy\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/archenemy_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/archenemy-manifest.json\"}\n      />\n      {schemes &&\n        schemes.map(p => (\n          <link\n            rel=\"preload\"\n            href={p.image_uris[\"large\"]}\n            as=\"image\"\n            key={p.id}\n          />\n        ))}\n    </Helmet>\n  );\n};\n","export const getDeckList = () => {\n  return DECKS.map(s => s.name);\n};\n\nexport const getCardList = (deckname, schemes) => {\n  const deck = DECKS.find(s => s.name === deckname);\n  return deck.cards.map(c => {\n    const scheme = schemes.find(s => s.name === c[0]);\n    const clonedCard = JSON.parse(JSON.stringify(scheme));\n    clonedCard.count = c[1];\n    return clonedCard;\n  });\n};\nconst DECKS = [\n  {\n    name: \"Assemble the Doomsday Machine\",\n    cards: [\n      [\"All in Good Time\", 1],\n      [\"Behold the Power of Destruction\", 1],\n      [\"Embrace My Diabolical Vision\", 1],\n      [\"Feed the Machine\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"I Know All, I See All\", 2],\n      [\"Ignite the Cloneforge!\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"The Iron Guardian Stirs\", 2],\n      [\"My Genius Knows No Bounds\", 1],\n      [\"Nothing Can Stop Me Now\", 1],\n      [\"The Pieces Are Coming Together\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Scorch the World with Dragonfire\",\n    cards: [\n      [\"All Shall Smolder in My Wake\", 2],\n      [\"Approach My Molten Realm\", 1],\n      [\"The Fate of the Flammable\", 1],\n      [\"I Bask in Your Silent Awe\", 2],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"Know Naught but Fire\", 1],\n      [\"Look Skyward and Despair\", 2],\n      [\"My Crushing Masterstroke\", 1],\n      [\"My Wish Is Your Command\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Tooth, Claw, and Tail\", 1],\n      [\"Which of You Burns Brightest?\", 2],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Trample Civilization Underfoot\",\n    cards: [\n      [\"Every Last Vestige Shall Rot\", 2],\n      [\"Evil Comes to Fruition\", 1],\n      [\"I Call on the Ancient Magics\", 1],\n      [\"I Delight in Your Convulsions\", 1],\n      [\"Into the Earthen Maw\", 1],\n      [\"Introductions Are in Order\", 1],\n      [\"May Civilization Collapse\", 1],\n      [\"Nature Demands an Offering\", 2],\n      [\"Nature Shields Its Own\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Roots of All Evil\", 2],\n      [\"The Very Soil Shall Shake\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1],\n      [\"Your Will Is Not Your Own\", 2]\n    ]\n  },\n  {\n    name: \"Bring About the Undead Apocalypse\",\n    cards: [\n      [\"Choose Your Champion\", 2],\n      [\"Dance, Pathetic Marionette\", 1],\n      [\"The Dead Shall Serve\", 2],\n      [\"Every Hope Shall Vanish\", 2],\n      [\"I Delight in Your Convulsions\", 2],\n      [\"Introductions Are in Order\", 1],\n      [\"Mortal Flesh Is Weak\", 1],\n      [\"My Undead Horde Awakens\", 1],\n      [\"Only Blood Ends Your Nightmares\", 2],\n      [\"Realms Befitting My Majesty\", 1],\n      [\"Rotted Ones, Lay Siege\", 2],\n      [\"Surrender Your Thoughts\", 1],\n      [\"Your Fate Is Thrice Sealed\", 1],\n      [\"Your Puny Minds Cannot Fathom\", 1]\n    ]\n  },\n  {\n    name: \"Archenemy Nicol Bolas\",\n    cards: [\n      [\"Because I Have Willed It\", 1],\n      [\"Behold My Grandeur\", 1],\n      [\"Bow to My Command\", 1],\n      [\"Choose Your Demise\", 1],\n      [\"Delight in the Hunt\", 1],\n      [\"Every Dream a Nightmare\", 1],\n      [\"For Each of You, a Gift\", 1],\n      [\"Know Evil\", 1],\n      [\"Make Yourself Useful\", 1],\n      [\"The Mighty Will Fall\", 1],\n      [\"My Forces Are Innumerable\", 1],\n      [\"My Laughter Echoes\", 1],\n      [\"No One Will Hear Your Cries\", 1],\n      [\"Pay Tribute to Me\", 1],\n      [\"Power Without Equal\", 1],\n      [\"A Reckoning Approaches\", 1],\n      [\"There Is No Refuge\", 1],\n      [\"This World Belongs to Me\", 1],\n      [\"What's Yours Is Now Mine\", 1],\n      [\"When Will You Learn?\", 1]\n    ]\n  }\n];\n","export default __webpack_public_path__ + \"static/media/archenemy-back.6d5cbfc7.jpg\";","import React, { Component } from \"react\";\nimport { Card, ListGroup, Modal } from \"react-bootstrap\";\nimport back from \"../../images/archenemy-back.jpg\";\nimport { Counter } from \"./Counter\";\nimport \"./planes.scss\";\n\nimport { hasCustomProperty } from \"../../mtg/card.js\";\nimport { getSetting } from \"../../util/settings.js\";\n\nexport class Scheme extends Component {\n  state = {\n    modalOpen: false\n  };\n\n  toggleModal = () => {\n    console.log(\"Toggle Modal\");\n    this.setState({ modalOpen: !this.state.modalOpen });\n  };\n\n  render() {\n    const { listDisplay, card, children } = this.props;\n    if (listDisplay) {\n      return (\n        <>\n          <ListGroup.Item variant=\"dark\" onClick={this.toggleModal}>\n            {card.name}\n          </ListGroup.Item>\n          <Modal\n            show={this.state.modalOpen}\n            onHide={this.toggleModal}\n            size=\"md\"\n            backdrop={true}\n            dialogClassName=\"modal-content-no-border\"\n          >\n            <Modal.Body className=\"p-0\" centered=\"true\">\n              <Scheme card={card} />\n              {children}\n            </Modal.Body>\n          </Modal>\n        </>\n      );\n    } else {\n      return (\n        <Card bg=\"black\" text=\"light\" className=\"mtg-scheme-card\">\n          {this.renderImage()}\n          {this.renderCounter()}\n          {this.renderChildren()}\n          {this.renderBody()}\n          {this.renderActions()}\n        </Card>\n      );\n    }\n  }\n\n  renderBody() {\n    const text = this.renderText();\n    const hasBody = text;\n\n    return hasBody && <Card.Body>{text}</Card.Body>;\n  }\n\n  renderCounter() {\n    const { card, renderActions } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    const hasCounters = hasCustomProperty(\"counter\", card);\n    if (renderActions && hasCounters) {\n      if (displayImages) {\n        return (\n          <Card.ImgOverlay className=\"text-center scheme-overlay counter-overlay\">\n            <Card.Title className=\"text-center pt-5 mt-sm-5\">\n              <Counter card={card} />\n            </Card.Title>\n          </Card.ImgOverlay>\n        );\n      } else {\n        return (\n          <Card.Body className=\"text-center pb-0\">\n            <Counter card={card} />\n          </Card.Body>\n        );\n      }\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n    const displayImages = getSetting(\"displayImages\");\n    if (children) {\n      if (displayImages) {\n        return (\n          <Card.ImgOverlay className=\"text-center scheme-overlay child-overlay\">\n            <Card.Title className=\"text-center pt-5 mt-sm-5\">\n              {children}\n            </Card.Title>\n          </Card.ImgOverlay>\n        );\n      } else {\n        return <Card.Body className=\"text-center pb-0\">{children}</Card.Body>;\n      }\n    }\n  }\n\n  renderActions() {\n    const { card } = this.props;\n    const displayGatherer = getSetting(\"displayGatherer\");\n    if (displayGatherer && card) {\n      return (\n        <Card.Footer>\n          <Card.Link\n            href={card.related_uris[\"gatherer\"]}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatherer\n          </Card.Link>\n        </Card.Footer>\n      );\n    }\n  }\n\n  renderText() {\n    const { card } = this.props;\n    const displayText = getSetting(\"displayText\");\n    if (displayText) {\n      if (card) {\n        return (\n          <>\n            <Card.Title>\n              <h5>{card.name}</h5>\n            </Card.Title>\n            <Card.Subtitle>{card.type_line}</Card.Subtitle>\n            <Card.Text dangerouslySetInnerHTML={card.oracle_html} />\n          </>\n        );\n      } else {\n        return <Card.Title>None</Card.Title>;\n      }\n    }\n  }\n\n  renderImage() {\n    const displayImages = getSetting(\"displayImages\");\n    if (displayImages) {\n      return (\n        <Card.Img\n          variant=\"top\"\n          width=\"100%\"\n          src={this.imageURI()}\n          className=\"mtg-card mtg-card-scheme\"\n        />\n      );\n    }\n  }\n\n  imageURI() {\n    const { card } = this.props;\n    if (card) {\n      return card.image_uris[\"large\"];\n    } else {\n      return back;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Accordion,\n  Alert,\n  Badge,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  Fade,\n  ListGroup,\n  Jumbotron,\n  Container\n} from \"react-bootstrap\";\nimport store from \"store\";\n\nimport { ArchenemyHelmet } from \"./Helmet\";\nimport { getDeckList, getCardList } from \"../../mtg/prebuilt-decks\";\nimport { getAllArchenemyCards } from \"../../util/api.js\";\nimport { Scheme } from \"../../components/magic/Scheme\";\nimport { Confirm } from \"../../components/Confirm\";\nimport { Loading } from \"../../components/Loading\";\nimport { getSetting } from \"../../util/settings.js\";\n\nimport {\n  getCurrentDeck,\n  getOrCreateCurrentDeck,\n  storeCurrentDeck,\n  drawCard,\n  undoDraw,\n  removeCards,\n  getHistory,\n  findAndPutOnBottom,\n  findAndPutOnTop,\n  moveCard\n} from \"../../mtg/deck.js\";\nimport {\n  getCurrentCard,\n  setCurrentCard,\n  hasCustomProperty,\n  setAdditionalCards,\n  getAdditionalCards\n} from \"../../mtg/card.js\";\nimport {\n  LoyaltyButtonGroup,\n  TapButtonGroup,\n  TenthEditionButton\n} from \"../../components/magic/Buttons\";\n\nexport class Archenemy extends Component {\n  state = {\n    loading: true,\n    deck: null,\n    currentCard: null,\n    ongoingSchemes: [],\n    schemes: [],\n    showHistory: false,\n    showDeck: false,\n    showDeckImages: false,\n    abandonedOngoing: false,\n    deckSelection: true,\n    customDeck: null\n  };\n\n  componentDidMount = async () => {\n    const schemes = await getAllArchenemyCards();\n    const deck = getCurrentDeck(\"archenemy\");\n    // TODO switch to selecting deck\n    // const deck = getCurrentDeck(\"archenemy\");\n    const currentCard = getCurrentCard(\"archenemy\");\n    const ongoingSchemes = getAdditionalCards(\"archenemy\") || [];\n    const abandonedOngoing = !!store.get(\"archenemy-abandonedOngoing\");\n    const customDeck = JSON.parse(JSON.stringify(schemes));\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({\n      currentCard,\n      deck,\n      loading: false,\n      ongoingSchemes,\n      schemes,\n      abandonedOngoing,\n      deckSelection: !deck,\n      customDeck\n    });\n  };\n\n  refreshDeck = () => {\n    const deck = getCurrentDeck(\"archenemy\");\n    this.setState({ deck });\n  };\n\n  scheme = () => {\n    const { currentCard, ongoingSchemes } = this.state;\n    if (currentCard) {\n      if (currentCard.type_line === \"Ongoing Scheme\") {\n        ongoingSchemes.push(currentCard);\n      }\n    }\n    const newCard = drawCard(\"archenemy\");\n    setCurrentCard(\"archenemy\", newCard);\n    setAdditionalCards(\"archenemy\", ongoingSchemes);\n    this.refreshDeck();\n    this.setState({\n      currentCard: newCard,\n      ongoingSchemes,\n      abandonedOngoing: store.set(\"archenemy-abandonedOngoing\", false)\n    });\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    // TODO reset to deck selection\n    const schemes = await getAllArchenemyCards();\n    const deck = null;\n    storeCurrentDeck(\"archenemy\", deck);\n    const currentCard = setCurrentCard(\"archenemy\", null);\n    const ongoingSchemes = setAdditionalCards(\"archenemy\", []);\n    const abandonedOngoing = store.set(\"archenemy-abandonedOngoing\", false);\n    const customDeck = JSON.parse(JSON.stringify(schemes));\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({\n      schemes,\n      loading: false,\n      deck,\n      currentCard,\n      ongoingSchemes,\n      abandonedOngoing,\n      deckSelection: true,\n      customDeck\n    });\n  };\n\n  undo = async () => {\n    const currentCard = undoDraw(\"archenemy\");\n    this.refreshDeck();\n    this.setState({ currentCard });\n  };\n  // TODO Cards with same id\n  render() {\n    const { loading, schemes, deckSelection } = this.state;\n\n    return (\n      <div className=\"archenemy\">\n        <ArchenemyHelmet schemes={schemes} />\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : deckSelection ? (\n          this.renderDeckSelect()\n        ) : (\n          this.renderGamePlay()\n        )}\n        {this.renderDevTools()}\n      </div>\n    );\n  }\n\n  renderGamePlay() {\n    const { loading, deck, currentCard, abandonedOngoing } = this.state;\n\n    return (\n      <>\n        <div className=\"fixed-top mt-1 ml-1 w-25 text-left\">\n          <Button\n            onClick={this.scheme}\n            className=\"mb-2\"\n            variant=\"success\"\n            disabled={loading}\n            block\n          >\n            <i className=\"ss ss-arc ss-3x mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Scheme</span>\n          </Button>\n        </div>\n        {loading ? (\n          <Loading className=\"text-muted\" />\n        ) : (\n          <div className=\"pt-2 mb-2 d-flex justify-content-center\">\n            {abandonedOngoing ? (\n              <Jumbotron className=\"bg-danger text-center\" fluid>\n                <Container fluid>\n                  <h1>Current Scheme Has Been Foiled!</h1>\n                </Container>\n              </Jumbotron>\n            ) : currentCard ? (\n              <Fade key={currentCard.deck_card_id} timeout={100}>\n                <Scheme card={currentCard} renderActions=\"true\">\n                  {this.renderAbandon(currentCard)}\n                </Scheme>\n              </Fade>\n            ) : (\n              <Scheme />\n            )}\n          </div>\n        )}\n\n        {this.renderOngoingSchemes()}\n\n        {this.renderHistory()}\n        <p className=\"text-center my-3 noselect\">\n          There are {deck ? deck.length : 0} cards remaining.\n        </p>\n        <Confirm\n          onConfirm={this.reset}\n          headerText=\"Reset Schemes?\"\n          triggerText=\"Reset\"\n          confirmText=\"Reset\"\n          confirmVariant=\"danger\"\n          triggerButtonParams={{ variant: \"danger\", block: true }}\n        />\n      </>\n    );\n  }\n\n  renderDeckSelect() {\n    const { schemes } = this.state;\n    const deckName = \"All Schemes\";\n    return (\n      <>\n        <Card className=\"noselect\">\n          <Card.Body>\n            {this.deckCardTitle(deckName)}\n            <Button\n              block\n              variant=\"success\"\n              onClick={() => this.selectDeck(\"All\", schemes)}\n            >\n              Use All\n            </Button>\n          </Card.Body>\n        </Card>\n        {this.renderPrebuilts()}\n        {this.renderBuildCustomDeck()}\n      </>\n    );\n  }\n\n  renderOngoingSchemes() {\n    const { ongoingSchemes } = this.state;\n    if (ongoingSchemes && ongoingSchemes.length > 0) {\n      return (\n        <>\n          <Alert variant=\"info\" className=\"text-center\">\n            <h5>Ongoing Schemes</h5>\n          </Alert>\n          <div className=\"d-flex justify-content-center flex-wrap \">\n            {ongoingSchemes.map(c => (\n              <React.Fragment key={c.deck_card_id}>\n                <Scheme card={c} renderActions=\"true\">\n                  {this.renderAbandon(c)}\n                </Scheme>\n              </React.Fragment>\n            ))}\n          </div>\n        </>\n      );\n    }\n  }\n\n  renderDevTools = () => {\n    const devTools = getSetting(\"devTools\");\n    if (devTools) {\n      return (\n        <div className=\"my-4\">\n          <h5 className=\"text-center noselect\">Dev Tools</h5>\n          <Button onClick={this.undo} variant=\"warning\" block>\n            Undo\n          </Button>\n          {this.renderDeck()}\n        </div>\n      );\n    }\n  };\n\n  abandonScheme = card => {\n    const { ongoingSchemes, currentCard } = this.state;\n    if (currentCard.deck_card_id === card.deck_card_id) {\n      console.log(\"Abandon Current Scheme\", card);\n      setCurrentCard(\"archenemy\", null);\n      const abandonedOngoing = store.set(\"archenemy-abandonedOngoing\", true);\n      this.setState({ currentCard: null, abandonedOngoing });\n    } else {\n      console.log(\"Abandon Scheme\", card);\n      let newOngoing = ongoingSchemes.filter(\n        s => s.deck_card_id !== card.deck_card_id\n      );\n      setAdditionalCards(\"archenemy\", newOngoing);\n      this.setState({ ongoingSchemes: newOngoing });\n    }\n  };\n\n  renderAbandon(card) {\n    const isOngoing = card.type_line === \"Ongoing Scheme\";\n    if (isOngoing && !hasCustomProperty(\"unabandonable\", card)) {\n      return (\n        <Button\n          onClick={() => this.abandonScheme(card)}\n          variant=\"danger\"\n          size=\"lg\"\n          className=\"btn-translucent\"\n        >\n          <h2 className=\"mb-0\">\n            <i className=\"ss ss-bok ss-2x ss-grad ss-rare mx-2\" />\n            <span className=\"mx-2 d-none d-md-inline\">Abandon Scheme</span>\n          </h2>\n        </Button>\n      );\n    }\n  }\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  };\n\n  renderHistory = () => {\n    const { showHistory } = this.state;\n    const history = getHistory(\"archenemy\");\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleHistory} block variant=\"secondary\">\n          {showHistory ? \"Hide\" : \"Show\"} History\n        </Button>\n        <Fade in={showHistory}>\n          <div>\n            {showHistory && history && (\n              <ListGroup>\n                {history.reverse().map(p => (\n                  <Scheme card={p} key={p.deck_card_id} listDisplay={true} />\n                ))}\n              </ListGroup>\n            )}\n          </div>\n        </Fade>\n      </div>\n    );\n  };\n\n  selectDeck(name, cards) {\n    console.log(`Selected ${name}`, cards);\n\n    const newCards = name === \"All\" ? cards : [];\n    cards.forEach(c => {\n      for (let i = 0; i < c.count; i++) {\n        newCards.push(c);\n      }\n    });\n\n    const deck = getOrCreateCurrentDeck(\"archenemy\", newCards, true);\n    this.setState({\n      deck,\n      deckSelection: false\n    });\n  }\n\n  incrementCount(card) {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => {\n      if (c.id === card.id) {\n        c.count += 1;\n        c.count = Math.min(c.count, 2);\n      }\n    });\n    this.setState({ customDeck });\n  }\n\n  decrementCount(card) {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => {\n      if (c.id === card.id) {\n        c.count -= 1;\n        c.count = Math.max(c.count, 0);\n      }\n    });\n    this.setState({ customDeck });\n  }\n\n  customDeckSize() {\n    const { customDeck } = this.state;\n    const reducer = (a, b) => a + b;\n    return customDeck.map(c => c.count).reduce(reducer, 0);\n  }\n\n  resetCustomDeck = () => {\n    const { customDeck } = this.state;\n    customDeck.forEach(c => (c.count = 0));\n    this.setState({ customDeck });\n  };\n\n  renderBuildCustomDeck() {\n    const { customDeck } = this.state;\n    const deckName = \"Custom Deck\";\n\n    const cardListItems = customDeck.map(card => (\n      <ListGroup.Item key={card.id} variant=\"dark\" className=\"noselect\">\n        <Scheme card={card} />\n        <div className=\"text-center\">\n          <h1>\n            <Badge pill variant={card.count > 0 ? \"success\" : \"dark\"}>\n              x{card.count}\n            </Badge>\n          </h1>\n          <LoyaltyButtonGroup\n            downProps={{\n              disabled: card.count <= 0,\n              onClick: () => this.decrementCount(card)\n            }}\n            upProps={{\n              disabled: card.count >= 2,\n              onClick: () => this.incrementCount(card)\n            }}\n          />\n        </div>\n      </ListGroup.Item>\n    ));\n\n    return (\n      <Accordion>\n        <Card className=\"noselect\">\n          <Card.Body>\n            {this.deckCardTitle(deckName)}\n            <Accordion.Toggle\n              as={Button}\n              block\n              eventKey=\"custom-deck-toggle\"\n              variant=\"secondary\"\n            >\n              Build Custom\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"custom-deck-toggle\">\n              <>\n                <div className=\"fixed-top mt-1 ml-1 text-left\">\n                  <Alert variant=\"info\" className=\"clearfix\">\n                    <h4 className=\"float-left\">\n                      Custom Deck Size: {this.customDeckSize()}\n                    </h4>\n                    <ButtonGroup className=\"float-right\">\n                      <Button variant=\"danger\" onClick={this.resetCustomDeck}>\n                        Reset\n                      </Button>\n                      <Button\n                        variant=\"success\"\n                        onClick={() => this.selectDeck(\"Custom\", customDeck)}\n                      >\n                        Use Deck\n                      </Button>\n                    </ButtonGroup>\n                  </Alert>\n                </div>\n\n                <ListGroup>{cardListItems}</ListGroup>\n              </>\n            </Accordion.Collapse>\n            <Button\n              block\n              variant=\"success\"\n              onClick={() => this.selectDeck(\"Custom\", customDeck)}\n            >\n              Use Custom Deck\n            </Button>\n          </Card.Body>\n        </Card>\n      </Accordion>\n    );\n  }\n\n  deckIcon(name, type = \"ss-mythic ss-grad\") {\n    switch (name) {\n      case \"All Schemes\":\n        return <i className={`ss ${type} ss-lea`}></i>;\n      case \"Custom Deck\":\n        return <i className={`ss ${type} ss-chr`}></i>;\n      case \"Assemble the Doomsday Machine\":\n        return <i className={`ss ${type} ss-usg`}></i>;\n      case \"Scorch the World with Dragonfire\":\n        return <i className={`ss ${type} ss-scg`}></i>;\n      case \"Trample Civilization Underfoot\":\n        return <i className={`ss ${type} ss-c20`}></i>;\n      case \"Bring About the Undead Apocalypse\":\n        return <i className={`ss ${type} ss-pd3`}></i>;\n      case \"Archenemy Nicol Bolas\":\n        return <i className={`ss ${type} ss-hou`}></i>;\n      default:\n        return null;\n    }\n  }\n\n  renderPrebuilts() {\n    const { schemes } = this.state;\n    const prebuilts = getDeckList();\n    const prebuiltItems = prebuilts.map((prebuilt, i) => {\n      const cardList = getCardList(prebuilt, schemes);\n      const cardListItems = cardList.map((card, i) => (\n        <ListGroup.Item key={i} variant=\"dark\">\n          <Scheme card={card} />\n          <h1 className=\"text-center\">\n            <Badge pill variant={card.count > 0 ? \"success\" : \"dark\"}>\n              x{card.count}\n            </Badge>\n          </h1>\n        </ListGroup.Item>\n      ));\n      return (\n        <Accordion key={i}>\n          <Card>\n            <Card.Body>\n              {this.deckCardTitle(prebuilt)}\n              <Accordion.Toggle\n                as={Button}\n                block\n                eventKey={`prebuilt-${i}`}\n                variant=\"secondary\"\n              >\n                Decklist\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey={`prebuilt-${i}`}>\n                <ListGroup>{cardListItems}</ListGroup>\n              </Accordion.Collapse>\n              <Button\n                block\n                variant=\"success\"\n                onClick={() => this.selectDeck(prebuilt, cardList)}\n              >\n                Use Deck\n              </Button>\n            </Card.Body>\n          </Card>\n        </Accordion>\n      );\n    });\n\n    return <>{prebuiltItems}</>;\n  }\n\n  deckCardTitle = name => (\n    <Card.Title className=\"d-flex\">\n      <div className=\"h3 text-center align-self-center\">\n        {this.deckIcon(name)}\n      </div>\n      <div className=\"flex-grow-1\">\n        <h3 className=\"text-center\">{name}</h3>\n      </div>\n      <div className=\"h3 text-center align-self-center\">\n        {this.deckIcon(name)}\n      </div>\n    </Card.Title>\n  );\n\n  toggleDeck = () => {\n    this.setState({ showDeck: !this.state.showDeck });\n  };\n\n  toggleDeckImages = () => {\n    this.setState({ showDeckImages: !this.state.showDeckImages });\n  };\n\n  manipulateDeck = () => {\n    this.refreshDeck();\n  };\n\n  renderDeck = () => {\n    const { deck, showDeck, showDeckImages } = this.state;\n    return (\n      <div className=\"my-2\">\n        <Button onClick={this.toggleDeck} block variant=\"secondary\">\n          {showDeck ? \"Hide\" : \"Show\"} Deck\n        </Button>\n        <Fade in={showDeck}>\n          <div>\n            {showDeck && deck && (\n              <>\n                <Button\n                  onClick={this.toggleDeckImages}\n                  block\n                  variant=\"secondary\"\n                >\n                  {showDeckImages ? \"Hide\" : \"Show\"} Full Card\n                </Button>\n                <ListGroup>\n                  {deck.map((p, i) => (\n                    <React.Fragment key={p.deck_card_id}>\n                      <Scheme card={p} listDisplay={!showDeckImages} />\n                      <ListGroup.Item className=\"text-center justify-content-center d-flex\">\n                        <ButtonToolbar>\n                          <LoyaltyButtonGroup\n                            reverse\n                            downProps={{\n                              disabled: i === deck.length - 1,\n                              onClick: () =>\n                                this.manipulateDeck(\n                                  moveCard(\"archenemy\", i, i + 1)\n                                )\n                            }}\n                            upProps={{\n                              disabled: i === 0,\n                              onClick: () =>\n                                this.manipulateDeck(\n                                  moveCard(\"archenemy\", i, i - 1)\n                                )\n                            }}\n                          />\n                          <TapButtonGroup\n                            className=\"ml-2\"\n                            unTapProps={{\n                              disabled: i === 0,\n                              onClick: () =>\n                                this.manipulateDeck(\n                                  findAndPutOnTop(\"archenemy\", p.deck_card_id)\n                                )\n                            }}\n                            tapProps={{\n                              disabled: i === deck.length - 1,\n                              onClick: () =>\n                                this.manipulateDeck(\n                                  findAndPutOnBottom(\n                                    \"archenemy\",\n                                    p.deck_card_id\n                                  )\n                                )\n                            }}\n                          />\n\n                          <ButtonGroup className=\"ml-2\">\n                            <TenthEditionButton\n                              onClick={() =>\n                                this.manipulateDeck(\n                                  removeCards(\"archenemy\", [p])\n                                )\n                              }\n                            />\n                          </ButtonGroup>\n                        </ButtonToolbar>\n                      </ListGroup.Item>\n                    </React.Fragment>\n                  ))}\n                </ListGroup>\n              </>\n            )}\n          </div>\n        </Fade>\n      </div>\n    );\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport const SYBHelmet = () => {\n  return (\n    <Helmet title=\"SYB\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_256.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"64x64\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_64.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"128x128\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_128.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"256x256\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/starter_256.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/syb-manifest.json\"}\n      />\n    </Helmet>\n  );\n};\n","export const TAGS = [\n  {\n    name: \"Chode Mode\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Deck Swaps\",\n    defaultEnabled: false\n  },\n  {\n    name: \"Planechase\",\n    defaultEnabled: true\n  },\n  {\n    name: \"EDH\",\n    defaultEnabled: true\n  },\n  {\n    name: \"2 Headed Giant\",\n    defaultEnabled: true\n  },\n  {\n    name: \"SYB\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Range 1\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Free for All\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Pentacle\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Secret Partners\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Archenemy\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Emperor\",\n    defaultEnabled: true\n  },\n  {\n    name: \"Teams\",\n    defaultEnabled: false\n  },\n  {\n    name: \"Star\",\n    defaultEnabled: false\n  }\n];\n\nconst canAny = p => true;\nconst canEven = p => p % 2 === 0;\nconst canOdd = p => p % 2 === 1;\nconst can2Hg = p => p > 2 && canEven(p);\nconst canFreeForAll = p => p > 2;\nconst canEmperor = p => p >= 6 && p % 3 === 0;\nconst canSecretPartner = p => p >= 6 && canEven(p);\nconst canRange1 = p => p > 3;\nconst canPentacle = p => p >= 5;\nexport const canStar = p => p >= 5 && canOdd(p);\nconst canTeams = p => p > 2 && canEven(p);\n\nexport const FORMATS = [\n  {\n    id: 1,\n    name: \"Chode Mode\",\n    initial: 0.5,\n    tags: [\"Chode Mode\"],\n    players: canAny\n  },\n  {\n    id: 2,\n    name: \"Planechase \",\n    initial: 0.5,\n    tags: [\"Planechase\"],\n    players: canAny\n  },\n  {\n    id: 3,\n    name: \"Planechase EDH\",\n    initial: 0.5,\n    tags: [\"Planechase\", \"EDH\"],\n    players: canAny\n  },\n  {\n    id: 4,\n    name: \"EDH Free for All\",\n    initial: 0.5,\n    tags: [\"EDH\", \"Free for All\"],\n    players: canFreeForAll\n  },\n  {\n    id: 5,\n    name: \"EDH SYB\",\n    initial: 0.5,\n    tags: [\"EDH\", \"SYB\"],\n    showSwaps: true,\n    players: canAny\n  },\n  {\n    id: 6,\n    name: \"EDH SYB Deck Swaps\",\n    displayName: \"EDH SYB\",\n    initial: 0,\n    tags: [\"EDH\", \"SYB\", \"Deck Swaps\"],\n    showSwaps: true,\n    players: canAny\n  },\n  {\n    id: 7,\n    name: \"EDH Emperor\",\n    initial: 0.5,\n    tags: [\"EDH\", \"Emperor\"],\n    showSwaps: true,\n    players: canEmperor\n  },\n  {\n    id: 8,\n    name: \"EDH Emperor Deck Swaps\",\n    displayName: \"EDH Emperor\",\n    initial: 0,\n    tags: [\"EDH\", \"Emperor\", \"Deck Swaps\"],\n    showSwaps: true,\n    players: canEmperor\n  },\n  {\n    id: 9,\n    name: \"2 Headed Giant SYB\",\n    initial: 0.5,\n    tags: [\"2 Headed Giant\"],\n    players: can2Hg\n  },\n  {\n    id: 10,\n    name: \"2 Headed Giant Free for All\",\n    initial: 0.5,\n    tags: [\"2 Headed Giant\", \"Free for All\"],\n    players: p => can2Hg(p) && canFreeForAll(p) && p > 4\n  },\n  {\n    id: 11,\n    name: \"Emperor\",\n    initial: 0.5,\n    tags: [\"Emperor\"],\n    showSwaps: true,\n    players: canEmperor\n  },\n  {\n    id: 12,\n    name: \"Emperor Deck Swaps\",\n    displayName: \"Emperor\",\n    initial: 0,\n    tags: [\"Emperor\", \"Deck Swaps\"],\n    showSwaps: true,\n    players: canEmperor\n  },\n  {\n    id: 13,\n    name: \"Range 1\",\n    initial: 0.5,\n    tags: [\"Range 1\"],\n    players: canRange1\n  },\n  {\n    id: 14,\n    name: \"Free for All\",\n    initial: 0.5,\n    tags: [\"Free for All\"],\n    players: canFreeForAll\n  },\n  {\n    id: 15,\n    name: \"SYB\",\n    initial: 0.5,\n    tags: [\"SYB\"],\n    showSwaps: true,\n    players: canAny\n  },\n  {\n    id: 16,\n    name: \"SYB Deck Swaps\",\n    displayName: \"SYB\",\n    initial: 0.5,\n    tags: [\"SYB\", \"Deck Swaps\"],\n    showSwaps: true,\n    players: canAny\n  },\n  {\n    id: 17,\n    name: \"Secret Partners\",\n    initial: 0.5,\n    tags: [\"Secret Partners\"],\n    showSwaps: true,\n    players: canSecretPartner\n  },\n  {\n    id: 18,\n    name: \"Secret Partners Deck Swaps\",\n    displayName: \"Secret Partners\",\n    initial: 0.5,\n    tags: [\"Secret Partners\", \"Deck Swaps\"],\n    showSwaps: true,\n    players: canSecretPartner\n  },\n  {\n    id: 19,\n    name: \"EDH Secret Partners\",\n    initial: 0.5,\n    tags: [\"EDH\", \"Secret Partners\"],\n    showSwaps: true,\n    players: canSecretPartner\n  },\n  {\n    id: 20,\n    name: \"EDH Secret Partners Deck Swaps\",\n    displayName: \"EDH Secret Partners\",\n    initial: 0,\n    tags: [\"EDH\", \"Secret Partners\", \"Deck Swaps\"],\n    showSwaps: true,\n    players: canSecretPartner\n  },\n  {\n    id: 21,\n    name: \"EDH Pentacle\",\n    initial: 0.5,\n    tags: [\"EDH\", \"Pentacle\"],\n    showSwaps: true,\n    players: canPentacle\n  },\n  {\n    id: 22,\n    name: \"EDH Pentacle Deck Swaps\",\n    displayName: \"EDH Pentacle\",\n    initial: 0,\n    tags: [\"EDH\", \"Pentacle\", \"Deck Swaps\"],\n    players: canPentacle\n  },\n  {\n    id: 23,\n    name: \"Pentacle\",\n    initial: 0.5,\n    tags: [\"Pentacle\"],\n    showSwaps: true,\n    players: canPentacle\n  },\n  {\n    id: 24,\n    name: \"Pentacle Deck Swaps\",\n    displayName: \"Pentacle\",\n    initial: 0.5,\n    tags: [\"Pentacle\", \"Deck Swaps\"],\n    showSwaps: true,\n    players: canPentacle\n  },\n  {\n    id: 25,\n    name: \"Archenemy\",\n    initial: 0.5,\n    tags: [\"Archenemy\"],\n    players: p => p === 4\n  },\n  {\n    id: 26,\n    name: \"EDH 2 Headed Giant SYB\",\n    initial: 0.1,\n    tags: [\"EDH\", \"2 Headed Giant\"],\n    players: can2Hg\n  },\n  {\n    id: 27,\n    name: \"EDH 2 Headed Giant FFA\",\n    initial: 0.1,\n    tags: [\"EDH\", \"2 Headed Giant\", \"Free for All\"],\n    players: p => can2Hg(p) && canFreeForAll(p) && p > 4\n  },\n  {\n    id: 28,\n    name: \"EDH Range 1\",\n    initial: 0.5,\n    tags: [\"EDH\", \"Range 1\"],\n    players: canRange1\n  },\n  {\n    id: 29,\n    name: \"Teams\",\n    initial: 0.5,\n    tags: [\"Teams\"],\n    players: canTeams\n  },\n  {\n    id: 30,\n    name: \"EDH Teams\",\n    initial: 0.5,\n    tags: [\"Teams\", \"EDH\"],\n    players: canTeams\n  },\n  {\n    id: 31,\n    name: \"Star\",\n    initial: 0.5,\n    tags: [\"Star\"],\n    players: canStar\n  },\n  {\n    id: 32,\n    name: \"EDH Star\",\n    initial: 0.5,\n    tags: [\"Star\", \"EDH\"],\n    players: canStar\n  }\n];\n","const SOURCE_COLOR = \"#17a2b8\";\nconst TARGET_COLOR = \"#FF4444\";\n\nexport const cytoStyle = ({ square } = { square: false }) => [\n  {\n    selector: \"node\",\n    style: {\n      padding: \"50%\",\n      width: \"50%\",\n      height: \"50%\",\n      \"background-color\": SOURCE_COLOR,\n      \"text-valign\": \"center\",\n      \"text-halign\": \"center\",\n      content: \"data(label)\"\n    }\n  },\n  {\n    selector: \"node[label]\",\n    style: {\n      label: \"data(label)\",\n      \"font-size\": \"2em\",\n      color: \"white\"\n    }\n  },\n  {\n    selector: \".screw\",\n    style: {\n      width: \"5%\",\n      \"curve-style\": square ? \"unbundled-bezier\" : \"straight\",\n      \"target-arrow-shape\": \"triangle \",\n      \"arrow-scale\": 2.5,\n      \"target-arrow-color\": TARGET_COLOR,\n      \"line-fill\": \"linear-gradient\",\n      \"line-gradient-stop-colors\": [SOURCE_COLOR, TARGET_COLOR],\n      \"z-index\": 2\n    }\n  },\n  {\n    selector: \".turn\",\n    style: {\n      width: \"2%\",\n      \"curve-style\": \"unbundled-bezier\",\n      \"control-point-distances\": [-20, -25, -20],\n      \"control-point-weights\": [0.25, 0.5, 0.75],\n      \"target-arrow-shape\": \"vee \",\n      \"line-style\": \"dashed\",\n      \"arrow-scale\": 1.5,\n      \"target-arrow-color\": \"#707070\",\n      \"line-color\": \"#707070\",\n      opacity: 0.5,\n      \"z-index\": 1\n    }\n  },\n  {\n    selector: \"node.highlight\",\n    style: {\n      \"background-color\": \"#218838\",\n      \"border-color\": \"#218838\",\n      \"border-width\": \"2px\"\n    }\n  },\n  {\n    selector: \"node.highlight.incoming\",\n    style: {\n      \"background-color\": SOURCE_COLOR,\n      \"border-color\": SOURCE_COLOR,\n      \"border-width\": \"2px\"\n    }\n  },\n  {\n    selector: \"node.highlight.outgoing\",\n    style: {\n      \"background-color\": TARGET_COLOR,\n      \"border-color\": TARGET_COLOR,\n      \"border-width\": \"2px\"\n    }\n  },\n  {\n    selector: \"node.highlight.outgoing.incoming\",\n    style: {\n      \"border-color\": SOURCE_COLOR,\n      \"border-width\": \"2px\"\n    }\n  },\n  {\n    selector: \"node.semitransparent\",\n    style: { opacity: \"0.5\" }\n  },\n  {\n    selector: \"edge.highlight\",\n    style: {\n      \"curve-style\": \"unbundled-bezier\"\n    }\n  },\n  {\n    selector: \"edge.highlight.incoming\",\n    style: {\n      \"curve-style\": \"unbundled-bezier\",\n      \"target-arrow-color\": SOURCE_COLOR,\n      \"line-gradient-stop-colors\": [SOURCE_COLOR, SOURCE_COLOR],\n      \"z-index\": 3\n    }\n  },\n  {\n    selector: \"edge.highlight.outgoing\",\n    style: {\n      \"target-arrow-color\": TARGET_COLOR,\n      \"line-gradient-stop-colors\": [TARGET_COLOR, TARGET_COLOR],\n      \"z-index\": 4\n    }\n  },\n  {\n    selector: \"edge.semitransparent\",\n    style: { opacity: \"0.2\" }\n  }\n];\n","import React, { Component } from \"react\";\nimport { Button, ButtonGroup, Col, Row, Spinner } from \"react-bootstrap\";\nimport Dialog from \"react-bootstrap-dialog\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport debounce from \"lodash/debounce\";\nimport store from \"store\";\n\nimport { getSetting } from \"../../util/settings.js\";\nimport { shuffle } from \"../../mtg/deck.js\";\n\nimport { SYBHelmet } from \"./Helmet\";\nimport { canStar } from \"../formats/formats\";\nimport { cytoStyle } from \"./Cyto\";\nimport {\n  DoubleFaceButton,\n  LoyaltyDownButton,\n  LoyaltyUpButton\n} from \"../../components/magic/Buttons.js\";\n\nconst circleLayout = { name: \"circle\", nodeDimensionsIncludeLabels: true };\nconst gridLayout = { name: \"grid\", nodeDimensionsIncludeLabels: true, rows: 2 };\nconst TARGET_OFFSET = 2;\n\nexport class SYB extends Component {\n  state = {\n    playerCount: 4,\n    playerTargets: 1,\n    targets: null,\n    loadingDirection: false,\n    cySet: false,\n    labels: { 0: \"J\" },\n    showTurnEdges: true,\n    starTurn: false,\n    showScrewEdges: true\n  };\n\n  cy = null;\n  dialog = null;\n\n  componentDidMount = () => {\n    const playerCount = store.get(\"syb-playerCount\") || 4;\n    const playerTargets = store.get(\"syb-playerTargets\") || 1;\n    const targets = store.get(\"syb-targets\") || null;\n    const tableShape = store.get(\"syb-tableShape\") || \"circle\";\n    const labels = store.get(\"syb-labels\") || { 0: \"J\" };\n    this.setState({\n      playerCount,\n      playerTargets,\n      targets,\n      tableShape,\n      labels\n    });\n  };\n\n  generateNodes() {\n    const { playerCount, labels } = this.state;\n    const players = Array.from(Array(playerCount).keys());\n    return players.map(p => {\n      const label = labels[p] || p;\n      return { data: { id: `player-${p}`, label, type: \"triangle-tee\" } };\n    });\n  }\n\n  generateEdges() {\n    const {\n      targets,\n      playerTargets,\n      playerCount,\n      showTurnEdges,\n      starTurn,\n      showScrewEdges\n    } = this.state;\n\n    if (!targets) return [];\n\n    const screwEdges = showScrewEdges\n      ? targets.flatMap((player, i) => {\n          return Array(playerTargets)\n            .fill(1)\n            .map((_, b) => {\n              const targetIndex = (i + b + 1) % playerCount;\n              const target = targets[targetIndex];\n              return {\n                data: {\n                  source: `player-${player}`,\n                  target: `player-${target}`,\n                  label: `Edge from ${player} to ${target}`\n                },\n                classes: \"screw\"\n              };\n            });\n        })\n      : [];\n\n    const turnEdges = showTurnEdges\n      ? targets.map((_, i) => {\n          const starNum = i + 2;\n          const starTurnTarget =\n            starNum > targets.length\n              ? 1\n              : starNum >= targets.length\n              ? 0\n              : starNum;\n          const normalTurnTarget = i + 1 >= targets.length ? 0 : i + 1;\n          const target =\n            starTurn && canStar(targets.length)\n              ? starTurnTarget\n              : normalTurnTarget;\n          return {\n            data: {\n              source: `player-${i}`,\n              target: `player-${target}`,\n              label: `Turn from ${i} to ${target}`\n            },\n            classes: \"turn\"\n          };\n        })\n      : [];\n\n    return screwEdges.concat(turnEdges);\n  }\n\n  regenerateOrder(c) {\n    const { playerCount } = this.state;\n    const players = Array.from(Array(c || playerCount).keys());\n    const targets = store.set(\"syb-targets\", shuffle(players));\n    this.setState({ targets });\n  }\n\n  handleCy(cy) {\n    const layout = this.isSquare() ? gridLayout : circleLayout;\n    const SELECT_THRESHOLD = 100;\n\n    // Refresh Layout if needed\n    const refreshLayout = debounce(() => {\n      cy.layout(layout).run();\n    }, SELECT_THRESHOLD);\n\n    const nodeClick = debounce(e => {\n      const clickedNode = e.target;\n      this.setLabel(clickedNode.id().split(\"-\")[1]);\n    }, SELECT_THRESHOLD);\n\n    if (!this.state.cySet) {\n      cy.on(\"add remove\", () => {\n        refreshLayout();\n      });\n\n      cy.nodes().on(\"tap click\", nodeClick);\n\n      cy.on(\"mouseover touchstart\", \"node\", function(e) {\n        let sel = e.target;\n\n        sel.addClass(\"highlight\");\n\n        const incomers = sel.incomers(\".screw\");\n        const allIncomers = incomers.union(incomers.sources());\n        allIncomers.addClass(\"highlight incoming\");\n\n        const outgoers = sel.outgoers(\".screw\");\n        const allOutgoers = outgoers.union(outgoers.targets());\n        allOutgoers.addClass(\"highlight outgoing\");\n\n        cy.elements()\n          .difference(allOutgoers.union(allIncomers))\n          .not(sel)\n          .addClass(\"semitransparent\");\n      });\n\n      cy.on(\"mouseout touchend\", \"node\", function(e) {\n        cy.elements().removeClass(\n          \"semitransparent highlight incoming outgoing\"\n        );\n      });\n\n      this.setState({ cySet: true });\n    }\n    this.cy = cy;\n  }\n\n  setLabel(number) {\n    console.log(\"Setting label\", number);\n    this.dialog.show({\n      title: \"Who is this?\",\n      bsSize: \"sm\",\n      actions: [\n        Dialog.CancelAction(),\n        Dialog.OKAction(a => {\n          const { labels } = this.state;\n          labels[number] = a.value;\n          store.set(\"syb-labels\", labels);\n          this.setState({ labels });\n        })\n      ],\n      prompt: Dialog.TextPrompt({ initialValue: number })\n    });\n  }\n\n  renderCyto() {\n    const layout = this.isSquare() ? gridLayout : circleLayout;\n    const elements = {\n      nodes: this.generateNodes(),\n      edges: this.generateEdges()\n    };\n    const stylesheet = cytoStyle({ square: this.isSquare() });\n\n    return (\n      <CytoscapeComponent\n        cy={cy => this.handleCy(cy)}\n        elements={CytoscapeComponent.normalizeElements(elements)}\n        style={{ width: \"100vw\", height: \"100vh\" }}\n        className={\"flex-grow\"}\n        stylesheet={stylesheet}\n        userPanningEnabled={false}\n        layout={layout}\n      />\n    );\n  }\n\n  removeListeners() {\n    this.cy.removeListener(\"add remove\");\n    this.cy\n      .nodes()\n      .removeListener(\"click tap touchstart touchend mouseover mouseout\");\n    this.setState({ cySet: false });\n  }\n\n  isSquare() {\n    const { tableShape } = this.state;\n    return false && tableShape === \"square\";\n  }\n\n  incrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\"syb-playerCount\", playerCount + 1);\n    this.adjustTargetCount(newPlayerCount);\n    this.regenerateOrder(newPlayerCount);\n    this.removeListeners();\n    this.setState({ playerCount: newPlayerCount });\n  }\n\n  decrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\n      \"syb-playerCount\",\n      Math.max(playerCount - 1, 1)\n    );\n    this.adjustTargetCount(newPlayerCount);\n    this.regenerateOrder(newPlayerCount);\n    this.removeListeners();\n    this.setState({ playerCount: newPlayerCount });\n  }\n\n  adjustTargetCount(playerCount) {\n    const { playerTargets } = this.state;\n    const newPlayerTargets = Math.min(\n      playerTargets,\n      Math.max(playerCount - TARGET_OFFSET, 1)\n    );\n    if (playerTargets !== newPlayerTargets) {\n      this.setState({ playerTargets: newPlayerTargets });\n    }\n  }\n\n  incrementTargetCount() {\n    const { playerCount, playerTargets } = this.state;\n    const newPlayerTargets = store.set(\n      \"syb-playerTargets\",\n      Math.min(playerTargets + 1, playerCount)\n    );\n    this.regenerateOrder(playerCount, newPlayerTargets);\n    this.removeListeners();\n    this.setState({ playerTargets: newPlayerTargets });\n  }\n\n  decrementTargetCount() {\n    const { playerCount, playerTargets } = this.state;\n    const newPlayerTargets = store.set(\n      \"syb-playerTargets\",\n      Math.max(playerTargets - 1, 1)\n    );\n    this.regenerateOrder(playerCount, newPlayerTargets);\n    this.removeListeners();\n    this.setState({ playerTargets: newPlayerTargets });\n  }\n\n  setTableShape(shape) {\n    const tableShape = store.set(\"syb-tableShape\", shape);\n    this.setState({ tableShape });\n  }\n\n  whichWay = () => {\n    const targets = store.set(\"syb-targets\", null);\n    this.setState({ loadingDirection: true, targets });\n\n    setTimeout(() => {\n      this.regenerateOrder();\n      this.setState({ loadingDirection: false });\n    }, 1500);\n  };\n\n  reset = async () => {\n    this.setState({ loading: true });\n    const playerCount = store.set(\"syb-playerCount\", 4);\n    const playerTargets = store.set(\"syb-playerTargets\", 1);\n    const targets = store.set(\"syb-targets\", null);\n    const tableShape = store.set(\"syb-tableShape\", \"circle\");\n    const labels = store.set(\"syb-labels\", { 0: \"J\" });\n\n    this.removeListeners();\n    this.setState(\n      {\n        playerCount,\n        playerTargets,\n        targets,\n        tableShape,\n        labels\n      },\n      () => this.regenerateOrder(playerCount, playerTargets)\n    );\n  };\n\n  render() {\n    const {\n      playerCount,\n      playerTargets,\n      tableShape,\n      loadingDirection\n    } = this.state;\n    return (\n      <div className=\"syb\">\n        <SYBHelmet />\n\n        <Row className=\"my-4 text-center\">\n          <Col>\n            <h1>{playerCount} Players</h1>\n            <ButtonGroup>\n              <LoyaltyDownButton\n                disabled={playerCount <= 1}\n                onClick={() => this.decrementCount()}\n              />\n              <LoyaltyUpButton onClick={() => this.incrementCount()} />\n            </ButtonGroup>\n          </Col>\n          <Col>\n            <h1>{playerTargets} Targets</h1>\n            <ButtonGroup>\n              <LoyaltyDownButton\n                disabled={playerTargets <= 1}\n                onClick={() => this.decrementTargetCount()}\n              />\n              <LoyaltyUpButton\n                onClick={() => this.incrementTargetCount()}\n                disabled={playerTargets >= playerCount - TARGET_OFFSET}\n              />\n            </ButtonGroup>\n          </Col>\n          {false && (\n            <ButtonGroup>\n              <Button\n                active={tableShape === \"circle\"}\n                onClick={() => this.setTableShape(\"circle\")}\n                variant=\"secondary\"\n              >\n                <i className=\"ss ss-portal ss-2x\" />\n              </Button>\n              <Button\n                active={tableShape === \"square\"}\n                onClick={() => this.setTableShape(\"square\")}\n                variant=\"secondary\"\n              >\n                <i className=\"ss ss-bfz ss-2x\" />\n              </Button>\n            </ButtonGroup>\n          )}\n        </Row>\n        <div className=\"text-center my-2\">\n          <Button\n            variant=\"danger\"\n            onClick={this.whichWay}\n            block\n            disabled={loadingDirection}\n          >\n            {loadingDirection ? \"Calculating...\" : \"Which way are we screwing?\"}\n          </Button>\n        </div>\n        <div className=\"d-flex\">\n          {loadingDirection && (\n            <div\n              className=\"position-absolute w-75 text-center\"\n              style={{ top: \"45%\", left: \"0%\" }}\n            >\n              <Spinner\n                variant=\"danger\"\n                animation=\"grow\"\n                className=\"position-absolute\"\n                style={{ width: \"10rem\", height: \"10rem\" }}\n              />\n            </div>\n          )}\n          {this.renderCyto()}\n        </div>\n        <Button onClick={this.reset} variant=\"danger\" block>\n          Reset\n        </Button>\n\n        {this.renderDevTools()}\n\n        <Dialog\n          ref={component => {\n            this.dialog = component;\n          }}\n        />\n      </div>\n    );\n  }\n\n  toggleTurnEdges = () => {\n    this.setState({ showTurnEdges: !this.state.showTurnEdges });\n  };\n\n  toggleScrewEdges = () => {\n    this.setState({ showScrewEdges: !this.state.showScrewEdges });\n  };\n\n  toggleStarTurn = () => {\n    this.setState({ starTurn: !this.state.starTurn });\n  };\n\n  renderDevTools = () => {\n    const devTools = getSetting(\"devTools\");\n    if (devTools) {\n      return (\n        <div className=\"my-4\">\n          <h5 className=\"text-center noselect\">Dev Tools</h5>\n          <DoubleFaceButton\n            text=\"Turn Edges\"\n            onClick={this.toggleTurnEdges}\n            enabled={this.state.showTurnEdges}\n          />\n          <DoubleFaceButton\n            text=\"Screw Edges\"\n            onClick={this.toggleScrewEdges}\n            enabled={this.state.showScrewEdges}\n          />\n          <DoubleFaceButton\n            text=\"Star Turn\"\n            onClick={this.toggleStarTurn}\n            enabled={this.state.starTurn}\n          />\n        </div>\n      );\n    }\n  };\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport const FormatsHelmet = () => {\n  return (\n    <Helmet title=\"Formats\">\n      <link\n        rel=\"shortcut icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg.ico\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_180.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_180.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"192x192\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_192.png\"}\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"512x512\"\n        href={process.env.PUBLIC_URL + \"mtg/icon/evg_512.png\"}\n      />\n      <link\n        rel=\"manifest\"\n        href={process.env.PUBLIC_URL + \"/formats-manifest.json\"}\n      />\n    </Helmet>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Button, ButtonGroup, Spinner } from \"react-bootstrap\";\nimport store from \"store\";\nimport { FormatsHelmet } from \"./Helmet\";\nimport { TAGS, FORMATS } from \"./formats\";\nimport { Confirm } from \"../../components/Confirm\";\n\nimport cloneDeep from \"lodash/cloneDeep\";\nimport flatMap from \"lodash/flatMap\";\nimport uniq from \"lodash/uniq\";\n\nimport \"rc-slider/assets/index.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\nimport Slider from \"rc-slider\";\nimport Tooltip from \"rc-tooltip\";\nimport {\n  DoubleFaceHighlighButton,\n  LoyaltyDownButton,\n  LoyaltyUpButton\n} from \"../../components/magic/Buttons\";\nconst Handle = Slider.Handle;\n\nconst MIN_PLAYERS = 2;\nconst MAX_PLAYERS = 9;\nconst DEFAULT_PLAYERS = 5;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nexport class Formats extends Component {\n  state = {\n    playerCount: DEFAULT_PLAYERS,\n    tags: null,\n    currentFormats: null,\n    activeFormat: null,\n    loadingFormat: false,\n    swapTriggered: false\n  };\n\n  componentDidMount = () => {\n    const playerCount =\n      store.get(\"formats-playerCount\") ||\n      store.set(\"formats-playerCount\", DEFAULT_PLAYERS);\n    const tags =\n      store.get(\"formats-tags\") || store.set(\"formats-tags\", this.createTags());\n    const currentFormats =\n      store.get(\"formats-current\") ||\n      store.set(\"formats-current\", this.createFormats());\n\n    this.setState({\n      playerCount,\n      tags,\n      currentFormats\n    });\n  };\n\n  reset = () => {\n    const playerCount = store.set(\"formats-playerCount\", DEFAULT_PLAYERS);\n    const tags = store.set(\"formats-tags\", this.createTags());\n    const currentFormats = store.set(\"formats-current\", this.createFormats());\n\n    this.setState({\n      playerCount,\n      tags,\n      currentFormats\n    });\n  };\n\n  pickFormat() {\n    console.log(\"Generate Format\");\n    this.setState({ loadingFormat: true, swapTriggered: false });\n    const formats = this.activeFormats();\n    const activeFormat = this.getRandomFormat(formats);\n    console.log(\"picked item\", activeFormat);\n    setTimeout(() => {\n      this.setState({ loadingFormat: false, activeFormat });\n    }, 1000);\n  }\n\n  rand = (min, max) => {\n    return Math.random() * (max - min) + min;\n  };\n\n  getRandomFormat = list => {\n    const totalWeight = list.reduce((result, cur) => {\n      return result + cur.weight;\n    }, 0);\n    const randomNum = this.rand(0, totalWeight);\n    let weightSum = 0;\n\n    return list.find(item => {\n      weightSum += item.weight;\n      return randomNum <= weightSum;\n    });\n  };\n\n  incrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\n      \"formats-playerCount\",\n      Math.min(playerCount + 1, MAX_PLAYERS)\n    );\n\n    this.setState({ playerCount: newPlayerCount, activeFormat: null });\n  }\n\n  decrementCount() {\n    const { playerCount } = this.state;\n    const newPlayerCount = store.set(\n      \"formats-playerCount\",\n      Math.max(playerCount - 1, MIN_PLAYERS)\n    );\n\n    this.setState({ playerCount: newPlayerCount, activeFormat: null });\n  }\n\n  updateFormatValue = (format, value) => {\n    const { playerCount, currentFormats } = this.state;\n    currentFormats[playerCount].forEach(f => {\n      if (f.name === format.name) {\n        format.weight = value / 100;\n      }\n    });\n    const updatedCurrentFormats = store.set(\"formats-current\", currentFormats);\n    this.setState({ currentFormats: updatedCurrentFormats });\n  };\n\n  render() {\n    const {\n      playerCount,\n      activeFormat,\n      loadingFormat,\n      swapTriggered\n    } = this.state;\n    const showDeckswapButton =\n      !loadingFormat &&\n      !swapTriggered &&\n      activeFormat &&\n      activeFormat.showSwaps &&\n      this.enabledTags().includes(\"Deck Swaps\");\n    return (\n      <div className=\"formats\">\n        <FormatsHelmet />\n        <div className=\"my-4 noselect\">\n          <div className=\"text-center\">\n            <h1>{playerCount} Players</h1>\n            <ButtonGroup className=\"my-4\">\n              <LoyaltyDownButton\n                disabled={playerCount <= MIN_PLAYERS}\n                onClick={() => this.decrementCount()}\n              />\n              <LoyaltyUpButton\n                onClick={() => this.incrementCount()}\n                disabled={playerCount >= MAX_PLAYERS}\n              />\n            </ButtonGroup>\n            <div className=\"text-center mb-5\">\n              <Button\n                block\n                variant=\"danger\"\n                onClick={() => this.pickFormat()}\n                disabled={loadingFormat}\n              >\n                {loadingFormat ? \"Computing...\" : \"Which Format?\"}\n              </Button>\n              {loadingFormat ? (\n                <Spinner\n                  size=\"lg\"\n                  animation=\"border\"\n                  variant=\"primary\"\n                  className=\"mt-3 mb-2\"\n                >\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              ) : (\n                <h1 className=\"my-2\">{this.renderActiveFormatName()}</h1>\n              )}\n              {showDeckswapButton && (\n                <Button\n                  onClick={this.triggerSwap}\n                  block\n                  className={\"w-50 mx-auto\"}\n                  variant=\"success\"\n                >\n                  Deckswaps?\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n        <hr className=\"border-info\" />\n        <div className=\"mb-5\">{this.renderFormatToggles()}</div>\n        <div className=\"mb-5 noselect\">{this.renderActiveFormats()}</div>\n        <div className=\"my-3\">\n          <Confirm\n            onConfirm={this.reset}\n            headerText=\"Reset Formats?\"\n            triggerText=\"Reset\"\n            confirmText=\"Reset\"\n            confirmVariant=\"danger\"\n            triggerButtonParams={{ variant: \"danger\", block: true }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  renderActiveFormatName() {\n    const { activeFormat, swapTriggered } = this.state;\n\n    if (!activeFormat) {\n      return \"None\";\n    } else {\n      return swapTriggered\n        ? activeFormat.name\n        : activeFormat.displayName || activeFormat.name;\n    }\n  }\n\n  triggerSwap = () => {\n    this.setState({ swapTriggered: true });\n  };\n\n  createFormats() {\n    let formats = {};\n\n    for (let i = MIN_PLAYERS; i <= MAX_PLAYERS; i++) {\n      formats[i] = cloneDeep(FORMATS.filter(f => f.players && f.players(i)));\n      formats[i].forEach(f => (f.weight = f.initial));\n    }\n\n    return formats;\n  }\n\n  activeTags() {\n    const { currentFormats, playerCount } = this.state;\n    return currentFormats\n      ? uniq(\n          flatMap(currentFormats[playerCount], f => {\n            return f.tags;\n          })\n        ).sort()\n      : [];\n  }\n\n  createTags() {\n    return TAGS.map(t => {\n      return { name: t.name, enabled: t.defaultEnabled };\n    });\n  }\n\n  renderFormatToggles() {\n    const { tags } = this.state;\n    if (tags) {\n      const activeTags = this.activeTags();\n      const tagStates = tags.filter(t => activeTags.includes(t.name));\n\n      const values = tagStates.map((t, i) => {\n        return (\n          <div className=\"col-6 col-md-4 col-lg-3 mb-1\" key={i}>\n            <DoubleFaceHighlighButton\n              onClick={() => {\n                this.toggleTag(t);\n              }}\n              enabled={t.enabled}\n              text={t.name}\n            />\n          </div>\n        );\n      });\n\n      return <div className=\"row\">{values}</div>;\n    }\n  }\n\n  toggleTag = tag => {\n    const { tags } = this.state;\n    tags.forEach(t => {\n      if (t.name === tag.name) {\n        t.enabled = !t.enabled;\n      }\n    });\n    const newTags = store.set(\"formats-tags\", tags);\n    this.setState({ tags: newTags });\n  };\n\n  enabledTags() {\n    const { tags } = this.state;\n    return tags ? tags.filter(t => t.enabled).map(t => t.name) : [];\n  }\n\n  activeFormats() {\n    const { tags, currentFormats, playerCount } = this.state;\n    let formats = null;\n    console.log(\" Player\", playerCount);\n    console.log(\"format\", currentFormats);\n    if (tags && currentFormats && playerCount) {\n      formats = currentFormats[playerCount];\n      const enabledTags = this.enabledTags();\n      console.log(\"enabledTags\", enabledTags);\n      formats = formats.filter(f => f.tags.every(t => enabledTags.includes(t)));\n      // formats.forEach(f => f.weight = f.initial) // Store weights\n      console.log(\"Formats\", formats);\n    }\n    return formats;\n  }\n\n  renderActiveFormats() {\n    const { playerCount } = this.state;\n    const formats = this.activeFormats();\n    if (formats) {\n      const formatTags = formats.map(f => {\n        return (\n          <div\n            className=\"row mb-2\"\n            key={`${playerCount}-${f.id}-${f.weight * 100}`}\n          >\n            <div className=\"col-5\">{f.name}</div>\n            <div className=\"col-7\">\n              <Slider\n                min={0}\n                max={100}\n                marks={{ 25: \"25\", 50: \"50\", 75: \"75\" }}\n                defaultValue={f.weight * 100}\n                included={true}\n                handle={handle}\n                onAfterChange={value => {\n                  this.updateFormatValue(f, value);\n                }}\n              />\n            </div>\n          </div>\n        );\n      });\n      return formatTags;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  NavLink as RRNavLink\n} from \"react-router-dom\";\nimport { Alert, Navbar, Nav, Dropdown } from \"react-bootstrap\";\nimport store from \"store\";\n\nimport \"./App.scss\";\n\nimport { setSetting, getSetting, toggleSetting } from \"./util/settings\";\n\nimport { Home } from \"./pages/home\";\nimport { Planechase } from \"./pages/planechase\";\nimport { Archenemy } from \"./pages/archenemy\";\nimport { SYB } from \"./pages/syb\";\nimport { Formats } from \"./pages/formats\";\nimport { DoubleFaceIcon } from \"./components/magic/DoubleFaceIcon\";\nimport GitInfo from \"react-git-info/macro\";\nconst gitInfo = GitInfo();\n\nclass App extends Component {\n  state = {\n    isOpen: false,\n    disclaimerDismissed: false,\n    displayText: false,\n    displayImages: false,\n    devTools: false,\n    displayGatherer: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  componentDidMount = () => {\n    this.versionCheck();\n    this.setState({\n      disclaimerDismissed: getSetting(\"disclaimerDismissed\"),\n      displayText: getSetting(\"displayText\"),\n      displayImages: getSetting(\"displayImages\"),\n      devTools: getSetting(\"devTools\")\n    });\n  };\n\n  versionCheck = () => {\n    const version = getSetting(\"version\");\n    if (version !== gitInfo.commit.shortHash) {\n      // TODO: Future refine this reset\n      store.clearAll();\n    }\n    setSetting(\"version\", gitInfo.commit.shortHash);\n  };\n\n  dismissDisclaimer = () => {\n    this.setState({\n      disclaimerDismissed: setSetting(\"disclaimerDismissed\", true)\n    });\n  };\n\n  _toggleSetting = setting => {\n    const tempState = {};\n    tempState[setting] = toggleSetting(setting);\n    this.setState(tempState);\n  };\n\n  _mtgToggler = (value, displayText, onClick) => {\n    return (\n      <Dropdown.Item onClick={onClick}>\n        <DoubleFaceIcon enabled={value} />\n        <span className=\"ml-3\">{displayText}</span>\n      </Dropdown.Item>\n    );\n  };\n\n  closeNavbar = () => {\n    if (this.state.isOpen) {\n      this.setState({ isOpen: false });\n    }\n  };\n\n  render() {\n    const {\n      disclaimerDismissed,\n      displayText,\n      displayImages,\n      displayGatherer,\n      devTools\n    } = this.state;\n    return (\n      <BrowserRouter>\n        <HelmetProvider>\n          <Helmet titleTemplate=\"%s - Jibbermaster\" />\n          <Navbar\n            variant=\"dark\"\n            expand=\"md\"\n            className=\"text-right p-1 noselect\"\n            expanded={this.state.isOpen}\n          >\n            <Navbar.Brand />\n            <Navbar.Toggle onClick={this.toggle} />\n            <Navbar.Collapse>\n              <Nav className=\"ml-auto\" navbar>\n                <Nav.Item>\n                  <Nav.Link\n                    as={RRNavLink}\n                    exact\n                    to=\"/\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Home\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    as={RRNavLink}\n                    exact\n                    to=\"/planechase\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Planechase\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    as={RRNavLink}\n                    exact\n                    to=\"/archenemy\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Archenemy\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    as={RRNavLink}\n                    exact\n                    to=\"/syb\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    SYB\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    as={RRNavLink}\n                    exact\n                    to=\"/formats\"\n                    activeClassName=\"active\"\n                    onClick={this.closeNavbar}\n                  >\n                    Formats\n                  </Nav.Link>\n                </Nav.Item>\n                <Dropdown\n                  navbar\n                  onToggle={isOpen => !isOpen && this.closeNavbar()}\n                >\n                  <Dropdown.Toggle as={Nav.Link}>Settings</Dropdown.Toggle>\n                  <Dropdown.Menu alignRight>\n                    {this._mtgToggler(\n                      disclaimerDismissed,\n                      \"Disclaimer Dismissed\",\n                      () => this._toggleSetting(\"disclaimerDismissed\")\n                    )}\n                    {this._mtgToggler(displayText, \"Display Text\", () =>\n                      this._toggleSetting(\"displayText\")\n                    )}\n                    {this._mtgToggler(displayImages, \"Display Images\", () =>\n                      this._toggleSetting(\"displayImages\")\n                    )}\n                    {this._mtgToggler(displayGatherer, \"Display Gatherer\", () =>\n                      this._toggleSetting(\"displayGatherer\")\n                    )}\n                    {this._mtgToggler(devTools, \"Dev Tools\", () =>\n                      this._toggleSetting(\"devTools\")\n                    )}\n                    <Dropdown.Divider />\n                    <Dropdown.Item onClick={() => store.clearAll()}>\n                      Clear Everything\n                    </Dropdown.Item>\n\n                    {this.state.devTools && (\n                      <>\n                        <Dropdown.Divider />\n                        <Dropdown.Item disabled>\n                          Version {getSetting(\"version\")}\n                        </Dropdown.Item>\n                      </>\n                    )}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          <div className=\"app text-light bg-dark col-md-8 offset-md-2 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3\">\n            <Switch>\n              <Route path=\"/\" exact render={props => <Home {...props} />} />\n              <Route\n                path=\"/archenemy\"\n                exact\n                render={props => <Archenemy {...props} />}\n              />\n              <Route\n                path=\"/planechase\"\n                exact\n                render={props => <Planechase {...props} />}\n              />\n              <Route path=\"/syb\" exact render={props => <SYB {...props} />} />\n              <Route\n                path=\"/formats\"\n                exact\n                render={props => <Formats {...props} />}\n              />\n            </Switch>\n            <Alert\n              variant=\"warning\"\n              className=\"fixed-bottom mb-0 py-1\"\n              show={!this.state.disclaimerDismissed}\n              onClose={this.dismissDisclaimer}\n              dismissible\n            >\n              <h6>Disclaimer</h6>\n              <small className=\"text-muted m-0\">\n                This site is created for personal use. Magic: The Gathering, the\n                mana symbols, the tap symbol and all other related images are\n                owned by Wizards of the Coast. jibbermaster.com is unaffiliated\n                with Wizards of the Coast.\n              </small>\n            </Alert>\n          </div>\n        </HelmetProvider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}